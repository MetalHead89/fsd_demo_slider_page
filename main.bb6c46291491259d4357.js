!function(t){function e(e){for(var s,l,a=e[0],h=e[1],r=e[2],c=0,d=[];c<a.length;c++)l=a[c],Object.prototype.hasOwnProperty.call(n,l)&&n[l]&&d.push(n[l][0]),n[l]=0;for(s in h)Object.prototype.hasOwnProperty.call(h,s)&&(t[s]=h[s]);for(u&&u(e);d.length;)d.shift()();return o.push.apply(o,r||[]),i()}function i(){for(var t,e=0;e<o.length;e++){for(var i=o[e],s=!0,a=1;a<i.length;a++){var h=i[a];0!==n[h]&&(s=!1)}s&&(o.splice(e--,1),t=l(l.s=i[0]))}return t}var s={},n={0:0},o=[];function l(e){if(s[e])return s[e].exports;var i=s[e]={i:e,l:!1,exports:{}};return t[e].call(i.exports,i,i.exports,l),i.l=!0,i.exports}l.m=t,l.c=s,l.d=function(t,e,i){l.o(t,e)||Object.defineProperty(t,e,{enumerable:!0,get:i})},l.r=function(t){"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(t,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(t,"__esModule",{value:!0})},l.t=function(t,e){if(1&e&&(t=l(t)),8&e)return t;if(4&e&&"object"==typeof t&&t&&t.__esModule)return t;var i=Object.create(null);if(l.r(i),Object.defineProperty(i,"default",{enumerable:!0,value:t}),2&e&&"string"!=typeof t)for(var s in t)l.d(i,s,function(e){return t[e]}.bind(null,s));return i},l.n=function(t){var e=t&&t.__esModule?function(){return t.default}:function(){return t};return l.d(e,"a",e),e},l.o=function(t,e){return Object.prototype.hasOwnProperty.call(t,e)},l.p="";var a=window.webpackJsonp=window.webpackJsonp||[],h=a.push.bind(a);a.push=e,a=a.slice();for(var r=0;r<a.length;r++)e(a[r]);var u=h;o.push([3,1]),i()}([function(t,e,i){"use strict";Object.defineProperty(e,"__esModule",{value:!0});e.default=class{constructor(){this.observers={}}register(t,e){Object.prototype.hasOwnProperty.call(this.observers,t)||(this.observers[t]=[]),this.observers[t].push(e)}unsubscribe(t,e){this.observers[t]=this.observers[t].filter(t=>t!==e)}notify(t){Object.prototype.hasOwnProperty.call(this.observers,t)&&this.observers[t].forEach(e=>e.update(t))}}},function(t,e,i){"use strict";var s=this&&this.__importDefault||function(t){return t&&t.__esModule?t:{default:t}};Object.defineProperty(e,"__esModule",{value:!0});const n=s(i(0));e.default=class{constructor(t,e){const i=document.createElement("div");this.element=i,this.subject=new n.default,this.lastPosition={left:0,top:0};let s=t+"_horizontal";e&&(s=`${t}_${e}`),this.element.classList.add(""+t,s)}setPosition(t){const e={left:t.left,top:t.top},i=this.element.parentElement;if(null!==i){const t=i.getBoundingClientRect();e.left-=t.left,e.top-=t.top}this.lastPosition=e}getPosition(){return this.lastPosition}getElement(){return this.element}getSize(){return{width:this.element.offsetWidth,height:this.element.offsetHeight}}switchToHorizontal(){const t=this.element.classList[0];this.element.classList.remove(t+"_vertical"),this.element.classList.add(t+"_horizontal")}switchToVertical(){const t=this.element.classList[0];this.element.classList.remove(t+"_horizontal"),this.element.classList.add(t+"_vertical")}remove(){this.element.remove()}getOrientation(){const t=this.element.classList[0];return this.element.classList[1].replace(t+"_","")}getRect(){return this.element.getBoundingClientRect()}getStyle(t){var e;return null===(e=document.defaultView)||void 0===e?void 0:e.getComputedStyle(this.element,null).getPropertyValue(t)}}},,function(t,e,i){"use strict";Object.defineProperty(e,"__esModule",{value:!0}),i(4),i(14),i(23),i(24),i(25),i(26),i(27),i(28)},function(t,e,i){"use strict";(function(t){var s=this&&this.__importDefault||function(t){return t&&t.__esModule?t:{default:t}};Object.defineProperty(e,"__esModule",{value:!0});const n=s(i(5)),o=s(i(6)),l=s(i(7));(t=>{const e={orientation:"horizontal",type:"range",scale:!0,popUps:!0,min:0,max:10,step:1,thumbOneValue:3,thumbTwoValue:7,sliderSize:{width:500,height:10},thumbSize:{width:20,height:20}},i={init(i){const s=t.extend(e,i);return this.each((function(){const e=new n.default(s),i=new l.default(this),a=new o.default({model:e,view:i});t(this).data("settings",s),t(this).data("controller",a),t(this).data("model",e)}))},getModelSubject(){return t(this).data().model.subject},getThumbsValues(){return t(this).data().model.getThumbsValues()},getMin(){return t(this).data().model.getMin()},getMax(){return t(this).data().model.getMax()},getStep(){return t(this).data().model.getStep()},getScaleState(){return t(this).data().model.getScaleState()},getPopUpsState(){return t(this).data().model.getPopUpsState()},getType(){return t(this).data().model.getType()},getOrientation(){return t(this).data().model.getOrientation()},refreshSliderState(e){t(this).data().model.refreshSliderState(e)}};t.fn.simpleSlider=function(e,s){let n;return"string"==typeof e&&i[e]?n=i[e].call(this,s):"object"!=typeof e&&e?(t.error(`Метод с именем ${e} не существует для jQuery.simpleSlider`),n=this):n=i.init.call(this,e),n}})(t)}).call(this,i(2))},function(t,e,i){"use strict";var s=this&&this.__importDefault||function(t){return t&&t.__esModule?t:{default:t}};Object.defineProperty(e,"__esModule",{value:!0});const n=s(i(0));class o{constructor(t){this.orientation="horizontal",this.type="range",this.scale=!0,this.popUps=!0,this.min=0,this.max=10,this.step=1,this.thumbOneValue=3,this.thumbTwoValue=7,this.sliderSize={width:500,height:10},this.thumbSize={width:20,height:10},this.subject=new n.default,this.refreshSliderState(t)}refreshSliderState(t){void 0!==t.sliderSize&&(this.sliderSize=t.sliderSize),void 0!==t.thumbSize&&(this.thumbSize=t.thumbSize),this.orientation!==t.orientation&&(this.orientation=t.orientation,this.subject.notify("orientationIsUpdated")),this.type!==t.type&&(this.type=t.type,this.typeIsRangeAndSecondThumbValueLessThanFirst()&&(this.thumbTwoValue=this.thumbOneValue),this.subject.notify("typeIsUpdated")),this.min!==t.min&&this.updateMinValue(t.min),this.max!==t.max&&this.updateMaxValue(t.max),this.step!==t.step&&this.updateStep(t.step),this.scale!==t.scale&&(this.scale=t.scale,this.subject.notify("scaleStateIsUpdated")),this.popUps!==t.popUps&&(this.popUps=t.popUps,this.subject.notify("popUpsStateIsUpdated")),this.thumbOneValue===t.thumbOneValue&&this.thumbTwoValue===t.thumbTwoValue||this.setThumbsValues({thumbOne:t.thumbOneValue,thumbTwo:t.thumbTwoValue})}typeIsRangeAndSecondThumbValueLessThanFirst(){return"range"===this.type&&this.thumbTwoValue<this.thumbOneValue}updateThumbsState(t){const e=this.valueWithStep(this.posByOrientation(t.thumbOne));let i=null;null!==t.thumbTwo&&(i=this.valueWithStep(this.posByOrientation(t.thumbTwo))),o.valueTwoIsNullOrMoreOrEqualThenValueOne(e,i)&&(this.thumbOneValue=e,null!==i&&(this.thumbTwoValue=i)),this.subject.notify("thumbsPosIsUpdated")}static valueTwoIsNullOrMoreOrEqualThenValueOne(t,e){return null===e||t<=e}setSliderSize(t){this.sliderSize=o.getCorrectSize(t,0)}setThumbSize(t){this.thumbSize=o.getCorrectSize(t,0)}setThumbsValues(t){const e=this.thumbValueToPos(t.thumbOne);let i=null;"range"===this.type&&(i=this.thumbValueToPos(t.thumbTwo)),this.updateThumbsState({thumbOne:e,thumbTwo:i})}getMin(){return this.min}getMax(){return this.max}getStep(){return this.step}getScaleState(){return this.scale}getPopUpsState(){return this.popUps}getType(){return this.type}getOrientation(){return this.orientation}getProgressBarParams(){const t=this.thumbValueToPos(this.thumbOneValue),e=this.thumbValueToPos(this.thumbTwoValue),i=Object.assign({},this.sliderSize),s={left:0,top:0};let n=0,o=0;return"single"===this.type?o=this.posByOrientation(t)+this.sizeByOrientation(this.thumbSize):(n=this.posByOrientation(t),o=this.posByOrientation(e)-this.posByOrientation(t)+this.sizeByOrientation(this.thumbSize)),"horizontal"===this.orientation?(s.left=n,i.width=o):(s.top=n,i.height=o),{position:s,size:i}}getThumbsPos(){return{thumbOne:this.thumbValueToPos(this.thumbOneValue),thumbTwo:this.thumbValueToPos(this.thumbTwoValue)}}getPopUpsParams(){return{popUpOne:{value:this.thumbOneValue,position:this.getPopUpPosition(this.thumbValueToPos(this.thumbOneValue))},popUpTwo:{value:this.thumbTwoValue,position:this.getPopUpPosition(this.thumbValueToPos(this.thumbTwoValue))}}}getThumbsValues(){return{thumbOne:this.thumbOneValue,thumbTwo:this.thumbTwoValue}}getScalePoints(t){const e=[],i=this.getStepsCount(),s=this.getStepSize();let n=0,o=this.sizeByOrientation(this.thumbSize)/2-this.sizeByOrientation(t)/2;const l=i+1;for(let i=0;i<=Math.round(l-1);i+=1){const l=this.thumbPosToValue(o-this.sizeByOrientation(this.thumbSize)/2+this.sizeByOrientation(t)/2);if(o=this.getNextScalePointPos(o,t),this.isPointFits(i,o,n,t)){const i={left:0,top:0};"horizontal"===this.orientation?i.left=o:i.top=o,e.push({position:i,size:t,value:l}),n=o}o+=s}return e}isPointFits(t,e,i,s){return 0===t||e-i>this.sizeByOrientation(s)}setThumbPosOnClickPos(t){const e={left:t.left-this.thumbSize.width/2,top:t.top-this.thumbSize.height/2};let i=this.thumbOneValue,s=this.thumbTwoValue;this.thumbTwoIsNearToClick(e)?s=this.thumbPosToValue(this.posByOrientation(e)):i=this.thumbPosToValue(this.posByOrientation(e)),this.setThumbsValues({thumbOne:i,thumbTwo:s})}thumbTwoIsNearToClick(t){return"range"===this.type&&Math.abs(this.posByOrientation(t)-this.posByOrientation(this.thumbValueToPos(this.thumbTwoValue)))<Math.abs(this.posByOrientation(t)-this.posByOrientation(this.thumbValueToPos(this.thumbOneValue)))}static getCorrectSize(t,e){return{width:t.width>=e?t.width:e,height:t.height>=e?t.height:e}}getPopUpPosition(t){let e=0,i=0;return"horizontal"===this.orientation?e=t.left+this.thumbSize.width/2:i=t.top+this.thumbSize.height/2,{left:e,top:i}}updateMinValue(t){let e=t;e>=this.max&&(e=this.max-1),this.min=e,this.subject.notify("minIsUpdated")}updateMaxValue(t){let e=t;e<=this.min&&(e=this.min+1),this.max=e,this.subject.notify("maxIsUpdated")}updateStep(t){let e=t;e<=0&&(e=1),this.step=e,this.subject.notify("stepIsUpdated")}valueWithStep(t){if(this.thumbPosToValue(t)>=this.max)return this.thumbPosToValue(t);const e=this.getStepSize(),i=Math.round(t/e)*e;return this.thumbPosToValue(i)}getStepsCount(){return(this.max-this.min)/this.step}getStepSize(){const t=this.getStepsCount();return(this.sizeByOrientation(this.sliderSize)-this.sizeByOrientation(this.thumbSize))/t}thumbPosToValue(t){const e=this.getPxPerValue();let i=Math.round(this.min+(this.max-this.min)/this.max*Math.round(t/e));return i=i<this.min?this.min:i,i=i>this.max?this.max:i,i}thumbValueToPos(t){const e={left:0,top:0},i=this.getPxPerValue();let s=t;s<this.min?s=this.min:s>this.max&&(s=this.max);const n=(s-this.min)/(this.max-this.min)*i*this.max;return"horizontal"===this.orientation?e.left=n:e.top=n,e}getPxPerValue(){return(this.sizeByOrientation(this.sliderSize)-this.sizeByOrientation(this.thumbSize))/this.max}sizeByOrientation(t){return"horizontal"===this.orientation?t.width:t.height}posByOrientation(t){return"horizontal"===this.orientation?t.left:t.top}getNextScalePointPos(t,e){let i=t;const s=this.sizeByOrientation(this.sliderSize)-this.sizeByOrientation(this.thumbSize)/2-this.sizeByOrientation(e)/2;return i>s&&(i=s),i}}e.default=o},function(t,e,i){"use strict";Object.defineProperty(e,"__esModule",{value:!0});e.default=class{constructor(t){this.model=t.model,this.view=t.view,this.modelSubject=this.model.subject,this.viewSubject=this.view.subject,this.subscribeToEvents(),this.init()}init(){"horizontal"===this.model.getOrientation()?this.view.switchToHorizontal():this.view.switchToVertical(),this.model.setSliderSize(this.view.getSliderSize()),this.model.setThumbSize(this.view.getThumbSize()),"single"===this.model.getType()?this.view.switchToSingle():this.view.switchToRange(),this.model.getPopUpsState()?this.view.enablePopUps():this.view.disablePopUps(),this.updateView()}subscribeToEvents(){this.viewSubject.register("thumbIsDragged",this),this.modelSubject.register("thumbsPosIsUpdated",this),this.modelSubject.register("minIsUpdated",this),this.modelSubject.register("maxIsUpdated",this),this.modelSubject.register("stepIsUpdated",this),this.modelSubject.register("typeIsUpdated",this),this.modelSubject.register("orientationIsUpdated",this),this.modelSubject.register("scaleStateIsUpdated",this),this.modelSubject.register("popUpsStateIsUpdated",this),this.view.subject.register("clickToTrack",this),this.view.subject.register("clickToScale",this),this.view.subject.register("windowResized",this)}update(t){switch(t){case"thumbIsDragged":this.model.updateThumbsState(this.view.getThumbsPos());break;case"thumbsPosIsUpdated":this.updateThumbsPos();break;case"minIsUpdated":case"maxIsUpdated":case"stepIsUpdated":this.updateView();break;case"orientationIsUpdated":this.updateSliderOrientation();break;case"typeIsUpdated":this.updateSliderType();break;case"scaleStateIsUpdated":this.updateScaleState();break;case"popUpsStateIsUpdated":this.updatePopUpsSate();break;case"clickToTrack":this.model.setThumbPosOnClickPos(this.view.getTrackClickPosition());break;case"clickToScale":this.model.setThumbPosOnClickPos(this.view.getScaleClickPosition());break;case"windowResized":this.init()}}updateView(){if(this.model.updateThumbsState(this.model.getThumbsPos()),this.model.getScaleState()){this.view.enableScale();const t=this.model.getMax(),e=this.model.getScalePoints(this.view.getScalePointSize(t));this.view.addScalePoints(e)}else this.view.disableScale()}updateThumbsPos(){this.view.updateThumbs(this.model.getThumbsPos()),this.view.updatePopUps(this.model.getPopUpsParams()),this.view.updateProgressBar(this.model.getProgressBarParams())}updateSliderOrientation(){"horizontal"===this.model.getOrientation()?this.view.switchToHorizontal():this.view.switchToVertical(),this.model.setSliderSize(this.view.getSliderSize()),this.updateView()}updateSliderType(){"single"===this.model.getType()?this.view.switchToSingle():this.view.switchToRange(),this.model.updateThumbsState(this.model.getThumbsPos())}updateScaleState(){this.model.getScaleState()?(this.view.enableScale(),this.updateView()):this.view.disableScale()}updatePopUpsSate(){this.model.getPopUpsState()?(this.view.enablePopUps(),this.model.updateThumbsState(this.model.getThumbsPos())):this.view.disablePopUps()}}},function(t,e,i){"use strict";var s=this&&this.__importDefault||function(t){return t&&t.__esModule?t:{default:t}};Object.defineProperty(e,"__esModule",{value:!0});const n=s(i(8)),o=s(i(9)),l=s(i(10)),a=s(i(11)),h=s(i(12)),r=s(i(13)),u=s(i(0));e.default=class{constructor(t){this.subject=new u.default,this.sliderWrapper=t,this.container=new n.default,this.track=new o.default,this.thumbOne=new l.default,this.thumbTwo=new l.default,this.popUpOne=new a.default,this.popUpTwo=new a.default,this.progressBar=new h.default,this.scale=new r.default,this.subscribeToEvents(),this.assembleSlider(),this.addWindowResizeEventListener()}addWindowResizeEventListener(){window.addEventListener("resize",this.windowResize.bind(this))}windowResize(){this.subject.notify("windowResized")}subscribeToEvents(){var t,e,i;this.thumbOne.subject.register("thumbIsDragged",this),null===(t=this.thumbTwo)||void 0===t||t.subject.register("thumbIsDragged",this),this.thumbOne.subject.register("thumbIsCatched",this),null===(e=this.thumbTwo)||void 0===e||e.subject.register("thumbIsCatched",this),this.track.subject.register("clickToTrack",this),null===(i=this.scale)||void 0===i||i.subject.register("clickToScale",this)}assembleSlider(){this.container.append(this.track.getElement()),this.container.append(this.thumbOne.getElement()),null!==this.thumbTwo&&this.container.append(this.thumbTwo.getElement()),null!==this.popUpOne&&this.container.append(this.popUpOne.getElement()),null!==this.popUpTwo&&this.container.append(this.popUpTwo.getElement()),this.container.append(this.progressBar.getElement()),null!==this.scale&&this.container.append(this.scale.getElement()),this.sliderWrapper.append(this.container.getElement())}update(t){var e;switch(t){case"thumbIsDragged":this.subject.notify("thumbIsDragged");break;case"thumbIsCatched":this.thumbOne.resetZIndex(),null===(e=this.thumbTwo)||void 0===e||e.resetZIndex();break;case"clickToTrack":this.subject.notify("clickToTrack");break;case"clickToScale":this.subject.notify("clickToScale")}}switchToHorizontal(){var t,e,i,s;this.container.resetMargins(),this.container.switchToHorizontal(),this.track.switchToHorizontal(),this.thumbOne.switchToHorizontal(),null===(t=this.thumbTwo)||void 0===t||t.switchToHorizontal(),null===(e=this.popUpOne)||void 0===e||e.switchToHorizontal(),null===(i=this.popUpTwo)||void 0===i||i.switchToHorizontal(),this.progressBar.switchToHorizontal(),null===(s=this.scale)||void 0===s||s.switchToHorizontal()}switchToVertical(){var t,e,i,s;this.container.resetMargins(),this.container.switchToVertical(),this.track.switchToVertical(),this.thumbOne.switchToVertical(),null===(t=this.thumbTwo)||void 0===t||t.switchToVertical(),null===(e=this.popUpOne)||void 0===e||e.switchToVertical(),null===(i=this.popUpTwo)||void 0===i||i.switchToVertical(),this.progressBar.switchToVertical(),null===(s=this.scale)||void 0===s||s.switchToVertical()}switchToSingle(){var t,e,i,s;null===(t=this.thumbTwo)||void 0===t||t.subject.unsubscribe("thumbIsCatched",this),null===(e=this.thumbTwo)||void 0===e||e.subject.unsubscribe("thumbIsCatched",this),null===(i=this.thumbTwo)||void 0===i||i.remove(),this.thumbTwo=null,null===(s=this.popUpTwo)||void 0===s||s.remove(),this.popUpTwo=null}switchToRange(){null===this.thumbTwo&&(this.thumbTwo=new l.default(this.container.getOrientation()),this.container.append(this.thumbTwo.getElement()),null!==this.popUpOne&&(this.popUpTwo=new a.default(this.container.getOrientation()),this.container.append(this.popUpTwo.getElement())),this.thumbTwo.subject.register("thumbIsDragged",this),this.thumbTwo.subject.register("thumbIsCatched",this))}disablePopUps(){var t,e;null===(t=this.popUpOne)||void 0===t||t.remove(),this.popUpOne=null,null===(e=this.popUpTwo)||void 0===e||e.remove(),this.popUpTwo=null,this.container.setMargins(this.getMargins())}enablePopUps(){null===this.popUpOne&&(this.popUpOne=new a.default(this.container.getOrientation()),this.container.append(this.popUpOne.getElement())),this.popUpTwoIsNullAndThumbTwoIsNotNull()&&(this.popUpTwo=new a.default(this.container.getOrientation()),this.container.append(this.popUpTwo.getElement())),this.container.setMargins(this.getMargins())}popUpTwoIsNullAndThumbTwoIsNotNull(){return null===this.popUpTwo&&null!==this.thumbTwo}disableScale(){var t,e;null===(t=this.scale)||void 0===t||t.subject.unsubscribe("clickToScale",this),null===(e=this.scale)||void 0===e||e.remove(),this.scale=null,this.container.setMargins(this.getMargins())}enableScale(){var t;null!==this.scale&&(null===(t=this.scale)||void 0===t||t.remove()),this.scale=new r.default(this.container.getOrientation()),this.container.append(this.scale.getElement()),this.scale.subject.register("clickToScale",this),this.container.setMargins(this.getMargins())}getThumbSize(){return this.thumbOne.getSize()}getSliderSize(){return this.container.getSize()}getThumbsPos(){const t=this.thumbOne.getPosition();let e=null;return null!==this.thumbTwo&&(e=this.thumbTwo.getPosition()),{thumbOne:t,thumbTwo:e}}updateThumbs(t){var e;this.thumbOne.moveTo(t.thumbOne),null!==t.thumbTwo&&(null===(e=this.thumbTwo)||void 0===e||e.moveTo(t.thumbTwo))}updateProgressBar(t){this.progressBar.update(t)}updatePopUps(t){null!==this.popUpOne&&this.popUpOne.update(t.popUpOne),null!==this.popUpTwo&&this.popUpTwo.update(t.popUpTwo)}getScalePointSize(t){return null!==this.scale?this.scale.getPointSize(t):{width:0,height:0}}addScalePoints(t){var e;null===(e=this.scale)||void 0===e||e.addPoints(t),this.container.setMargins(this.getMargins())}getTrackClickPosition(){return this.track.getPosition()}getScaleClickPosition(){return null===this.scale?{left:0,top:0}:this.scale.getPosition()}getMargins(){const t={left:0,top:0,right:0,bottom:0},e=this.container.getRect(),i=null!==this.popUpOne?this.popUpOne.getRect():null,s=null!==this.scale?this.scale.getRect():null;return"horizontal"===this.container.getOrientation()?(null!==i&&(t.top+=e.top-i.top),null!==s&&(t.bottom+=s.bottom-e.bottom)):(null!==i&&(t.left+=e.left-i.left),null!==s&&(t.right+=s.right-e.right)),t}}},function(t,e,i){"use strict";var s=this&&this.__importDefault||function(t){return t&&t.__esModule?t:{default:t}};Object.defineProperty(e,"__esModule",{value:!0});const n=s(i(1));class o extends n.default{constructor(){super("slider")}append(t){this.element.append(t)}setMargins(t){this.element.style.marginLeft=t.left+"px",this.element.style.marginTop=t.top+"px",this.element.style.marginRight=t.right+"px",this.element.style.marginBottom=t.bottom+"px"}resetMargins(){this.element.style.margin="0"}}e.default=o},function(t,e,i){"use strict";var s=this&&this.__importDefault||function(t){return t&&t.__esModule?t:{default:t}};Object.defineProperty(e,"__esModule",{value:!0});const n=s(i(1));class o extends n.default{constructor(){super("slider__track"),this.init()}init(){this.element.addEventListener("click",this.clickToTrack.bind(this))}clickToTrack(t){this.setPosition({left:t.clientX,top:t.clientY}),this.subject.notify("clickToTrack")}}e.default=o},function(t,e,i){"use strict";var s=this&&this.__importDefault||function(t){return t&&t.__esModule?t:{default:t}};Object.defineProperty(e,"__esModule",{value:!0});const n=s(i(1));class o extends n.default{constructor(t){super("slider__thumb",t),this.shift={shiftX:0,shiftY:0},this.onMouseMoveHandler=this.drag.bind(this),this.onMouseUpHandler=this.endDrag.bind(this),this.addMousedownEventListener(),this.disableDragAndDrop()}setZIndex(t){this.element.style.zIndex=t.toString()}disableDragAndDrop(){this.element.ondragstart=()=>!1}addMousedownEventListener(){this.element.addEventListener("pointerdown",this.clickToThumb.bind(this))}clickToThumb(t){o.disableSelection();const e=this.element.getBoundingClientRect();this.setThumbShift({left:t.clientX,top:t.clientY},{left:e.left,top:e.top}),document.addEventListener("pointermove",this.onMouseMoveHandler),document.addEventListener("pointerup",this.onMouseUpHandler),this.subject.notify("thumbIsCatched"),this.increaseZIndex()}setThumbShift(t,e){this.shift.shiftX=t.left-e.left,this.shift.shiftY=t.top-e.top}increaseZIndex(){const t=this.getStyle("z-index");this.element.style.zIndex=(parseInt(t||"0",10)+1).toString()}resetZIndex(){this.element.style.zIndex=""}drag(t){this.setPosition({left:t.clientX,top:t.clientY}),this.subject.notify("thumbIsDragged")}setPosition(t){super.setPosition(t),this.lastPosition.left-=this.shift.shiftX,this.lastPosition.top-=this.shift.shiftY}endDrag(){o.enableSelection(),document.removeEventListener("pointermove",this.onMouseMoveHandler),document.removeEventListener("pointerup",this.onMouseUpHandler)}moveTo(t){this.lastPosition=t,this.element.style.left=t.left+"px",this.element.style.top=t.top+"px"}static disableSelection(){document.onselectstart=()=>!1,document.onpointerdown=()=>!1}static enableSelection(){document.onselectstart=null,document.onpointerdown=null}}e.default=o},function(t,e,i){"use strict";var s=this&&this.__importDefault||function(t){return t&&t.__esModule?t:{default:t}};Object.defineProperty(e,"__esModule",{value:!0});const n=s(i(1));class o extends n.default{constructor(t){super("slider__pop-up",t)}update(t){this.updateValue(t.value),this.updatePosition(t.position)}updateValue(t){this.element.innerHTML=""+t}updatePosition(t){this.element.style.left=t.left+"px",this.element.style.top=t.top+"px"}}e.default=o},function(t,e,i){"use strict";var s=this&&this.__importDefault||function(t){return t&&t.__esModule?t:{default:t}};Object.defineProperty(e,"__esModule",{value:!0});const n=s(i(1));class o extends n.default{constructor(){super("slider__progress-bar")}update(t){this.element.style.left=t.position.left+"px",this.element.style.top=t.position.top+"px",this.element.style.width=t.size.width+"px",this.element.style.height=t.size.height+"px"}}e.default=o},function(t,e,i){"use strict";var s=this&&this.__importDefault||function(t){return t&&t.__esModule?t:{default:t}};Object.defineProperty(e,"__esModule",{value:!0});const n=s(i(1));class o extends n.default{constructor(t){super("slider__scale",t),this.init()}init(){this.element.addEventListener("click",this.clickToScale.bind(this))}clickToScale(t){this.setPosition({left:t.clientX,top:t.clientY}),this.subject.notify("clickToScale")}getPointSize(t){this.addPoint({position:{left:0,top:0},size:{width:0,height:0},value:t});const e={width:0,height:0},i=this.element.querySelector(".slider__scale-point");return e.width=(null==i?void 0:i.offsetWidth)||0,e.height=(null==i?void 0:i.offsetHeight)||0,null==i||i.remove(),e}addPoints(t){for(let e=0;e<t.length;e+=1)this.addPoint(t[e])}addPoint(t){const e=this.getOrientation(),i=document.createElement("div");i.classList.add("slider__scale-point","slider__scale-point_"+e),t.size.width>0&&(i.style.width=t.size.width+"px"),"horizontal"===e?this.element.style.height=t.size.height+"px":this.element.style.width=t.size.width+"px";const s=document.createElement("div");s.classList.add("slider__scale-point-marker");const n=document.createElement("div");n.classList.add("slider__scale-point-label","slider__scale-point-label_"+e),n.innerText=t.value.toString(),i.style.left=t.position.left+"px",i.style.top=t.position.top+"px",i.append(s),i.append(n),this.element.append(i)}}e.default=o},function(t,e,i){"use strict";(function(t){var s=this&&this.__importDefault||function(t){return t&&t.__esModule?t:{default:t}};Object.defineProperty(e,"__esModule",{value:!0});const n=s(i(15)),o=s(i(21)),l=s(i(22));(t=>{const e={init(){return this.each((function(){const e=new n.default(this),i=new o.default(t(this));new l.default(e,i)}))}};t.fn.controlPanel=function(i,s){let n;return"string"==typeof i&&e[i]?n=e[i].call(this,s):"object"!=typeof i&&i?(t.error(`Метод с именем ${i} не существует для jQuery.controlPanel`),n=this):n=e.init.call(this,s),n}})(t)}).call(this,i(2))},function(t,e,i){"use strict";var s=this&&this.__importDefault||function(t){return t&&t.__esModule?t:{default:t}};Object.defineProperty(e,"__esModule",{value:!0});const n=s(i(16)),o=s(i(17)),l=s(i(18)),a=s(i(19)),h=s(i(20)),r=s(i(0));class u extends r.default{constructor(t){super(),this.container=new n.default,this.sliderWrapper=t,this.thumbOneValue=new o.default("First thumb value"),this.thumbTwoValue=new o.default("Second thumb value"),this.min=new o.default("min value"),this.max=new o.default("max value"),this.step=new o.default("step"),this.typeRadio=new a.default("type",{label:"single",value:"single"},{label:"range",value:"range"}),this.orientationRadio=new a.default("orientation",{label:"horizontal",value:"horizontal"},{label:"vertical",value:"vertical"}),this.scaleCheckbox=new h.default({label:"scale",name:"scale",value:"scale"}),this.popUpsCheckbox=new h.default({label:"pop ups",name:"popUps",value:"popUps"}),this.subscribeToEvents(),this.createPanel()}createPanel(){this.container.append(l.default({wrapperClass:"control-panel__text-fields-group",elements:[this.thumbOneValue.getControl(),this.thumbTwoValue.getControl()]})),this.container.append(l.default({wrapperClass:"control-panel__text-fields-group",elements:[this.min.getControl(),this.max.getControl(),this.step.getControl()]}));const t=l.default({header:"type",wrapperClass:"",elements:[this.typeRadio.getControl()]}),e=l.default({header:"orientation",wrapperClass:"",elements:[this.orientationRadio.getControl()]}),i=l.default({wrapperClass:"",elements:[t,e]}),s=l.default({header:"on/off elements",wrapperClass:"",elements:[this.scaleCheckbox.getControl(),this.popUpsCheckbox.getControl()]});this.container.append(l.default({wrapperClass:"control-panel__checkboxes-and-radios-wrapper",elements:[i,s]})),this.sliderWrapper.append(this.container.getElement())}subscribeToEvents(){this.thumbOneValue.register("controlPanelDataUpdated",this),this.thumbTwoValue.register("controlPanelDataUpdated",this),this.min.register("controlPanelDataUpdated",this),this.max.register("controlPanelDataUpdated",this),this.step.register("controlPanelDataUpdated",this),this.typeRadio.register("controlPanelDataUpdated",this),this.orientationRadio.register("controlPanelDataUpdated",this),this.scaleCheckbox.register("controlPanelDataUpdated",this),this.popUpsCheckbox.register("controlPanelDataUpdated",this)}update(t){"controlPanelDataUpdated"===t&&(this.notify("controlPanelDataUpdated"),this.switchOrientation())}switchOrientation(){"horizontal"===this.getOrientation()?(this.container.switchToHorizontal(),this.sliderWrapper.classList.remove("slider-wrapper_vertical"),this.sliderWrapper.classList.add("slider-wrapper_horizontal")):(this.container.switchToVertical(),this.sliderWrapper.classList.remove("slider-wrapper_horizontal"),this.sliderWrapper.classList.add("slider-wrapper_vertical"))}setThumbsValues(t){this.thumbOneValue.setValue(t.thumbOne),this.thumbTwoValue.setValue(t.thumbTwo)}setMinValue(t){this.min.setValue(t)}setMaxValue(t){this.max.setValue(t)}setStep(t){this.step.setValue(t)}setScaleState(t){this.scaleCheckbox.setState(t)}setPopUpsState(t){this.popUpsCheckbox.setState(t)}setTypeRadio(t){this.typeRadio.switchTo(t)}setOrientationRadio(t){this.orientationRadio.switchTo(t)}getOrientation(){return this.orientationRadio.getValue()}getType(){return this.typeRadio.getValue()}getScaleState(){return this.scaleCheckbox.getState()}getPopUpsState(){return this.popUpsCheckbox.getState()}getMin(){return this.min.getValue()}getMax(){return this.max.getValue()}getStep(){return this.step.getValue()}getThumbOneValue(){return this.thumbOneValue.getValue()}getThumbTwoValue(){return this.thumbTwoValue.getValue()}getThumbsValues(){return{thumbOne:this.thumbOneValue.getValue(),thumbTwo:this.thumbTwoValue.getValue()}}}e.default=u},function(t,e,i){"use strict";Object.defineProperty(e,"__esModule",{value:!0});e.default=class{constructor(){this.element=document.createElement("div"),this.element.classList.add("control-panel")}getElement(){return this.element}append(t){this.element.append(t)}switchToHorizontal(){this.element.classList.remove("control-panel_vertical"),this.element.classList.add("control-panel_horizontal")}switchToVertical(){this.element.classList.remove("control-panel_horizontal"),this.element.classList.add("control-panel_vertical")}}},function(t,e,i){"use strict";var s=this&&this.__importDefault||function(t){return t&&t.__esModule?t:{default:t}};Object.defineProperty(e,"__esModule",{value:!0});const n=s(i(0));class o extends n.default{constructor(t){super(),this.control=document.createElement("div"),this.field=document.createElement("input"),this.label=document.createElement("label"),this.init(t)}getControl(){return this.control}getValue(){return parseInt(this.field.value,10)}setValue(t){this.field.value=""+t}init(t){this.control.classList.add("slider-panel__text-field-control"),this.field.classList.add("control-panel__text-field"),this.field.addEventListener("blur",this.reportChanges.bind(this)),this.field.onkeypress=o.removeNonDigitChar,this.label.classList.add("slider-panel__text-field-label"),this.label.innerText=t,this.label.append(this.field),this.control.append(this.label)}reportChanges(){this.notify("controlPanelDataUpdated")}static removeNonDigitChar(t){return/[-\d]/.test(t.key)}}e.default=o},function(t,e,i){"use strict";Object.defineProperty(e,"__esModule",{value:!0}),e.default=function(t){const e=document.createElement("div");if(e.className=t.wrapperClass,void 0!==t.header){const i=document.createElement("label");i.classList.add("control-panel__radio-group-header"),i.innerText=t.header,e.append(i)}for(let i=0;i<t.elements.length;i+=1)e.append(t.elements[i]);return e}},function(t,e,i){"use strict";var s=this&&this.__importDefault||function(t){return t&&t.__esModule?t:{default:t}};Object.defineProperty(e,"__esModule",{value:!0});const n=s(i(0));class o extends n.default{constructor(t,...e){super();const i=o.generateName(t);this.control=document.createElement("div"),this.control.classList.add("control-panel__radio-group"),this.radios=[],this.init(i,e)}getControl(){return this.control}getValue(){for(let t=0;t<this.radios.length;t+=1)if(this.radios[t].checked)return this.radios[t].value;return""}init(t,e){for(let i=0;i<e.length;i+=1){const s=document.createElement("div");s.classList.add("control-panel__radio-wrapper");const n=document.createElement("label");n.classList.add("control-panel__radio-label"),n.innerText=e[i].label;const l=document.createElement("input");l.type="radio",l.name=t,l.value=e[i].value,o.radioIsFirstOrChecked(i,e[i].checked)&&(l.checked=!0),l.classList.add("control-panel__radio-button"),l.addEventListener("change",this.onChange.bind(this)),this.radios.push(l),n.append(l),s.append(n),this.control.append(s)}}static radioIsFirstOrChecked(t,e){return 0===t||e}onChange(){for(let t=0;t<this.radios.length;t+=1){const e=this.radios[t].parentElement;this.radios[t].checked?null==e||e.classList.add("control-panel__radio-label_checked"):null==e||e.classList.remove("control-panel__radio-label_checked")}this.notify("controlPanelDataUpdated")}switchTo(t){for(let e=0;e<this.radios.length;e+=1)if(this.radios[e].value===t){this.radios[e].checked=!0,this.onChange();break}}static generateName(t){let e=1,i="";for(;""===i;){const s=`${t}${e}`;null===document.querySelector(`[name="${s}"]`)&&(i=s),e+=1}return i}}e.default=o},function(t,e,i){"use strict";var s=this&&this.__importDefault||function(t){return t&&t.__esModule?t:{default:t}};Object.defineProperty(e,"__esModule",{value:!0});const n=s(i(0));class o extends n.default{constructor(t){super(),this.control=document.createElement("div"),this.label=document.createElement("label"),this.checkbox=document.createElement("input"),this.init(t)}init(t){this.control.classList.add("control-panel__checkbox-wrapper"),this.label.classList.add("control-panel__checkbox-label"),this.label.innerText=t.label,this.checkbox.type="checkbox",this.checkbox.name=t.name,this.checkbox.value=t.value,this.checkbox.classList.add("control-panel__checkbox"),this.checkbox.addEventListener("change",this.onChange.bind(this)),this.label.append(this.checkbox),this.control.append(this.label)}getControl(){return this.control}onChange(){this.checkbox.checked?this.label.classList.add("control-panel__checkbox-label_checked"):this.label.classList.remove("control-panel__checkbox-label_checked"),this.notify("controlPanelDataUpdated")}setState(t){this.checkbox.checked=t,this.onChange()}getState(){return this.checkbox.checked}}e.default=o},function(t,e,i){"use strict";var s=this&&this.__importDefault||function(t){return t&&t.__esModule?t:{default:t}};Object.defineProperty(e,"__esModule",{value:!0});const n=s(i(0));class o extends n.default{constructor(t){super(),this.slider=t,this.subject=t.simpleSlider("getModelSubject"),this.subject.register("thumbsPosIsUpdated",this)}update(t){"thumbsPosIsUpdated"===t&&this.notify("thumbsPosIsUpdated")}getThumbsValues(){return this.slider.simpleSlider("getThumbsValues")}getMin(){return this.slider.simpleSlider("getMin")}getMax(){return this.slider.simpleSlider("getMax")}getStep(){return this.slider.simpleSlider("getStep")}getScaleState(){return this.slider.simpleSlider("getScaleState")}getPopUpsState(){return this.slider.simpleSlider("getPopUpsState")}getType(){return this.slider.simpleSlider("getType")}getOrientation(){return this.slider.simpleSlider("getOrientation")}refreshSliderState(t){this.slider.simpleSlider("refreshSliderState",t)}}e.default=o},function(t,e,i){"use strict";Object.defineProperty(e,"__esModule",{value:!0});e.default=class{constructor(t,e){this.view=t,this.model=e,this.init(),this.subscribeToEvents()}subscribeToEvents(){this.model.register("thumbsPosIsUpdated",this),this.view.register("controlPanelDataUpdated",this)}init(){this.view.setThumbsValues(this.model.getThumbsValues()),this.view.setMinValue(this.model.getMin()),this.view.setMaxValue(this.model.getMax()),this.view.setStep(this.model.getStep()),this.view.setScaleState(this.model.getScaleState()),this.view.setPopUpsState(this.model.getPopUpsState()),this.view.setTypeRadio(this.model.getType()),this.view.setOrientationRadio(this.model.getOrientation())}update(t){if("thumbsPosIsUpdated"===t&&this.view.setThumbsValues(this.model.getThumbsValues()),"controlPanelDataUpdated"===t){const t={orientation:this.view.getOrientation(),type:this.view.getType(),scale:this.view.getScaleState(),popUps:this.view.getPopUpsState(),min:this.view.getMin(),max:this.view.getMax(),step:this.view.getStep(),thumbOneValue:this.view.getThumbOneValue(),thumbTwoValue:this.view.getThumbTwoValue()};this.model.refreshSliderState(t)}}}},function(t,e,i){"use strict";(function(t){const e=document.querySelector(".add-new-slider-btn");let i=document.querySelector(".help-image");const s=document.querySelector(".button-wrapper");function n(t){t.remove(),0===document.querySelectorAll(".slider-wrapper").length&&(null==e||e.classList.add("add-new-slider-btn_margin-top"))}null==e||e.addEventListener("click",(function(){if(null!==s){null==i||i.remove(),i=null,null==e||e.classList.remove("add-new-slider-btn_margin-top");const o=document.createElement("div");o.classList.add("slider-wrapper"),s.before(o);const l=document.createElement("span");l.classList.add("material-icons","remove-slider-button__icon"),l.innerText="clear";const a=document.createElement("button");a.classList.add("remove-slider-button"),a.append(l),a.addEventListener("click",n.bind(a,o)),o.append(a),t(o).simpleSlider().controlPanel()}}))}).call(this,i(2))},function(t,e,i){},function(t,e,i){},function(t,e,i){},function(t,e,i){},function(t,e,i){}]);
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vd2VicGFjay9ib290c3RyYXAiLCJ3ZWJwYWNrOi8vLy4vcGx1Z2lucy9zaW1wbGUtc2xpZGVyL3N1YmplY3Qvc3ViamVjdC50cyIsIndlYnBhY2s6Ly8vLi9wbHVnaW5zL3NpbXBsZS1zbGlkZXIvdmlldy9lbGVtZW50L2VsZW1lbnQudHMiLCJ3ZWJwYWNrOi8vLy4vaW5kZXgudHMiLCJ3ZWJwYWNrOi8vLy4vcGx1Z2lucy9zaW1wbGUtc2xpZGVyL3NpbXBsZS1zbGlkZXIudHMiLCJ3ZWJwYWNrOi8vLy4vcGx1Z2lucy9zaW1wbGUtc2xpZGVyL21vZGVsL3NpbXBsZS1zbGlkZXItbW9kZWwudHMiLCJ3ZWJwYWNrOi8vLy4vcGx1Z2lucy9zaW1wbGUtc2xpZGVyL2NvbnRyb2xsZXIvc2ltcGxlLXNsaWRlci1jb250cm9sbGVyLnRzIiwid2VicGFjazovLy8uL3BsdWdpbnMvc2ltcGxlLXNsaWRlci92aWV3L3NpbXBsZS1zbGlkZXItdmlldy50cyIsIndlYnBhY2s6Ly8vLi9wbHVnaW5zL3NpbXBsZS1zbGlkZXIvdmlldy9jb250YWluZXIvY29udGFpbmVyLnRzIiwid2VicGFjazovLy8uL3BsdWdpbnMvc2ltcGxlLXNsaWRlci92aWV3L3RyYWNrL3RyYWNrLnRzIiwid2VicGFjazovLy8uL3BsdWdpbnMvc2ltcGxlLXNsaWRlci92aWV3L3RodW1iL3RodW1iLnRzIiwid2VicGFjazovLy8uL3BsdWdpbnMvc2ltcGxlLXNsaWRlci92aWV3L3BvcC11cC9wb3AtdXAudHMiLCJ3ZWJwYWNrOi8vLy4vcGx1Z2lucy9zaW1wbGUtc2xpZGVyL3ZpZXcvcHJvZ3Jlc3MtYmFyL3Byb2dyZXNzLWJhci50cyIsIndlYnBhY2s6Ly8vLi9wbHVnaW5zL3NpbXBsZS1zbGlkZXIvdmlldy9zY2FsZS9zY2FsZS50cyIsIndlYnBhY2s6Ly8vLi9wbHVnaW5zL2NvbnRyb2wtcGFuZWwvY29udHJvbC1wYW5lbC50cyIsIndlYnBhY2s6Ly8vLi9wbHVnaW5zL2NvbnRyb2wtcGFuZWwvdmlldy9jb250cm9sLXBhbmVsLXZpZXcudHMiLCJ3ZWJwYWNrOi8vLy4vcGx1Z2lucy9jb250cm9sLXBhbmVsL3ZpZXcvY29udGFpbmVyL2NvbnRhaW5lci50cyIsIndlYnBhY2s6Ly8vLi9wbHVnaW5zL2NvbnRyb2wtcGFuZWwvdmlldy90ZXh0LWZpZWxkL3RleHQtZmllbGQudHMiLCJ3ZWJwYWNrOi8vLy4vcGx1Z2lucy9jb250cm9sLXBhbmVsL3ZpZXcvZ3JvdXAtZWxlbWVudHMudHMiLCJ3ZWJwYWNrOi8vLy4vcGx1Z2lucy9jb250cm9sLXBhbmVsL3ZpZXcvcmFkaW8tYnV0dG9uL3JhZGlvLWJ1dHRvbi50cyIsIndlYnBhY2s6Ly8vLi9wbHVnaW5zL2NvbnRyb2wtcGFuZWwvdmlldy9jaGVja2JveC9jaGVja2JveC50cyIsIndlYnBhY2s6Ly8vLi9wbHVnaW5zL2NvbnRyb2wtcGFuZWwvbW9kZWwvY29udHJvbC1wYW5lbC1tb2RlbC50cyIsIndlYnBhY2s6Ly8vLi9wbHVnaW5zL2NvbnRyb2wtcGFuZWwvY29udHJvbGxlci9jb250cm9sLXBhbmVsLWNvbnRyb2xsZXIudHMiLCJ3ZWJwYWNrOi8vLy4vZGVtby9kZW1vLnRzIl0sIm5hbWVzIjpbIndlYnBhY2tKc29ucENhbGxiYWNrIiwiZGF0YSIsIm1vZHVsZUlkIiwiY2h1bmtJZCIsImNodW5rSWRzIiwibW9yZU1vZHVsZXMiLCJleGVjdXRlTW9kdWxlcyIsImkiLCJyZXNvbHZlcyIsImxlbmd0aCIsIk9iamVjdCIsInByb3RvdHlwZSIsImhhc093blByb3BlcnR5IiwiY2FsbCIsImluc3RhbGxlZENodW5rcyIsInB1c2giLCJtb2R1bGVzIiwicGFyZW50SnNvbnBGdW5jdGlvbiIsInNoaWZ0IiwiZGVmZXJyZWRNb2R1bGVzIiwiYXBwbHkiLCJjaGVja0RlZmVycmVkTW9kdWxlcyIsInJlc3VsdCIsImRlZmVycmVkTW9kdWxlIiwiZnVsZmlsbGVkIiwiaiIsImRlcElkIiwic3BsaWNlIiwiX193ZWJwYWNrX3JlcXVpcmVfXyIsInMiLCJpbnN0YWxsZWRNb2R1bGVzIiwiMCIsImV4cG9ydHMiLCJtb2R1bGUiLCJsIiwibSIsImMiLCJkIiwibmFtZSIsImdldHRlciIsIm8iLCJkZWZpbmVQcm9wZXJ0eSIsImVudW1lcmFibGUiLCJnZXQiLCJyIiwiU3ltYm9sIiwidG9TdHJpbmdUYWciLCJ2YWx1ZSIsInQiLCJtb2RlIiwiX19lc01vZHVsZSIsIm5zIiwiY3JlYXRlIiwia2V5IiwiYmluZCIsIm4iLCJvYmplY3QiLCJwcm9wZXJ0eSIsInAiLCJqc29ucEFycmF5Iiwid2luZG93Iiwib2xkSnNvbnBGdW5jdGlvbiIsInNsaWNlIiwidGhpcyIsIm9ic2VydmVycyIsImV2ZW50VHlwZSIsIm9ic2VydmVyIiwiZmlsdGVyIiwicmVnaXN0ZXJlZE9ic2VydmVyIiwiZm9yRWFjaCIsInVwZGF0ZSIsIm9yaWVudGF0aW9uIiwiZWxlbWVudCIsImRvY3VtZW50IiwiY3JlYXRlRWxlbWVudCIsInN1YmplY3QiLCJsYXN0UG9zaXRpb24iLCJsZWZ0IiwidG9wIiwib3JpZW50YXRpb25DbGFzcyIsImNsYXNzTGlzdCIsImFkZCIsImN1cnNvclBvc2l0aW9uIiwicG9zaXRpb25JbnNpZGVQYXJlbnQiLCJwYXJlbnQiLCJwYXJlbnRFbGVtZW50IiwicGFyZW50Q29vcmRzIiwiZ2V0Qm91bmRpbmdDbGllbnRSZWN0Iiwid2lkdGgiLCJvZmZzZXRXaWR0aCIsImhlaWdodCIsIm9mZnNldEhlaWdodCIsIm1haW5DbGFzcyIsInJlbW92ZSIsInJlcGxhY2UiLCJzdHlsZU5hbWUiLCJkZWZhdWx0VmlldyIsImdldENvbXB1dGVkU3R5bGUiLCJnZXRQcm9wZXJ0eVZhbHVlIiwiJCIsImRlZmF1bHRTZXR0aW5ncyIsInR5cGUiLCJzY2FsZSIsInBvcFVwcyIsIm1pbiIsIm1heCIsInN0ZXAiLCJ0aHVtYk9uZVZhbHVlIiwidGh1bWJUd29WYWx1ZSIsInNsaWRlclNpemUiLCJ0aHVtYlNpemUiLCJtZXRob2RzIiwib3B0aW9ucyIsInNldHRpbmdzIiwiZXh0ZW5kIiwiZWFjaCIsIm1vZGVsIiwidmlldyIsImNvbnRyb2xsZXIiLCJnZXRUaHVtYnNWYWx1ZXMiLCJnZXRNaW4iLCJnZXRNYXgiLCJnZXRTdGVwIiwiZ2V0U2NhbGVTdGF0ZSIsImdldFBvcFVwc1N0YXRlIiwiZ2V0VHlwZSIsImdldE9yaWVudGF0aW9uIiwic2xpZGVyU2V0dGluZ3MiLCJyZWZyZXNoU2xpZGVyU3RhdGUiLCJmbiIsInNpbXBsZVNsaWRlciIsImFjdGlvbiIsImFyZ3MiLCJtZXRob2QiLCJlcnJvciIsImluaXQiLCJqUXVlcnkiLCJTaW1wbGVTbGlkZXJNb2RlbCIsInVuZGVmaW5lZCIsIm5vdGlmeSIsInR5cGVJc1JhbmdlQW5kU2Vjb25kVGh1bWJWYWx1ZUxlc3NUaGFuRmlyc3QiLCJ1cGRhdGVNaW5WYWx1ZSIsInVwZGF0ZU1heFZhbHVlIiwidXBkYXRlU3RlcCIsInNldFRodW1ic1ZhbHVlcyIsInRodW1iT25lIiwidGh1bWJUd28iLCJwb3NpdGlvbnMiLCJ2YWx1ZVdpdGhTdGVwIiwicG9zQnlPcmllbnRhdGlvbiIsInZhbHVlVHdvSXNOdWxsT3JNb3JlT3JFcXVhbFRoZW5WYWx1ZU9uZSIsInZhbHVlT25lIiwidmFsdWVUd28iLCJzaXplIiwiZ2V0Q29ycmVjdFNpemUiLCJ0aHVtYnMiLCJ0aHVtYk9uZVBvcyIsInRodW1iVmFsdWVUb1BvcyIsInRodW1iVHdvUG9zIiwidXBkYXRlVGh1bWJzU3RhdGUiLCJwb3NpdGlvbiIsInN0YXJ0IiwiZW5kIiwic2l6ZUJ5T3JpZW50YXRpb24iLCJwb3BVcE9uZSIsImdldFBvcFVwUG9zaXRpb24iLCJwb3BVcFR3byIsInNjYWxlUG9pbnRTaXplIiwic2NhbGVQYXJhbXMiLCJzdGVwc0NvdW50IiwiZ2V0U3RlcHNDb3VudCIsInN0ZXBTaXplIiwiZ2V0U3RlcFNpemUiLCJwcmV2UG9pbnRQb3MiLCJzY2FsZVBvaW50c0NvdW50IiwiTWF0aCIsInJvdW5kIiwicG9pbnRWYWx1ZSIsInRodW1iUG9zVG9WYWx1ZSIsImdldE5leHRTY2FsZVBvaW50UG9zIiwiaXNQb2ludEZpdHMiLCJwb2ludFBvcyIsImluZGV4IiwiY2xpY2tQb3NpdGlvbiIsInRodW1iVHdvSXNOZWFyVG9DbGljayIsImFicyIsInRodW1iUG9zaXRpb24iLCJuZXdNaW4iLCJuZXdNYXgiLCJuZXdTdGVwIiwibmV3UG9zaXRpb24iLCJwaXhlbHNQZXJWYWx1ZSIsImdldFB4UGVyVmFsdWUiLCJuZXdWYWx1ZSIsInB4UGVyVmFsIiwidGh1bWJWYWx1ZSIsInBvc1ZhbHVlIiwicG9pbnRTaXplIiwiZXh0cmVtZVBvc2l0aW9uIiwicGFyYW1zIiwibW9kZWxTdWJqZWN0Iiwidmlld1N1YmplY3QiLCJzdWJzY3JpYmVUb0V2ZW50cyIsInN3aXRjaFRvSG9yaXpvbnRhbCIsInN3aXRjaFRvVmVydGljYWwiLCJzZXRTbGlkZXJTaXplIiwiZ2V0U2xpZGVyU2l6ZSIsInNldFRodW1iU2l6ZSIsImdldFRodW1iU2l6ZSIsInN3aXRjaFRvU2luZ2xlIiwic3dpdGNoVG9SYW5nZSIsImVuYWJsZVBvcFVwcyIsImRpc2FibGVQb3BVcHMiLCJ1cGRhdGVWaWV3IiwicmVnaXN0ZXIiLCJnZXRUaHVtYnNQb3MiLCJ1cGRhdGVUaHVtYnNQb3MiLCJ1cGRhdGVTbGlkZXJPcmllbnRhdGlvbiIsInVwZGF0ZVNsaWRlclR5cGUiLCJ1cGRhdGVTY2FsZVN0YXRlIiwidXBkYXRlUG9wVXBzU2F0ZSIsInNldFRodW1iUG9zT25DbGlja1BvcyIsImdldFRyYWNrQ2xpY2tQb3NpdGlvbiIsImdldFNjYWxlQ2xpY2tQb3NpdGlvbiIsImVuYWJsZVNjYWxlIiwicG9pbnRzIiwiZ2V0U2NhbGVQb2ludHMiLCJnZXRTY2FsZVBvaW50U2l6ZSIsImFkZFNjYWxlUG9pbnRzIiwiZGlzYWJsZVNjYWxlIiwidXBkYXRlVGh1bWJzIiwidXBkYXRlUG9wVXBzIiwiZ2V0UG9wVXBzUGFyYW1zIiwidXBkYXRlUHJvZ3Jlc3NCYXIiLCJnZXRQcm9ncmVzc0JhclBhcmFtcyIsIndyYXBwZXIiLCJzbGlkZXJXcmFwcGVyIiwiY29udGFpbmVyIiwidHJhY2siLCJwcm9ncmVzc0JhciIsImFzc2VtYmxlU2xpZGVyIiwiYWRkV2luZG93UmVzaXplRXZlbnRMaXN0ZW5lciIsImFkZEV2ZW50TGlzdGVuZXIiLCJ3aW5kb3dSZXNpemUiLCJhcHBlbmQiLCJnZXRFbGVtZW50IiwicmVzZXRaSW5kZXgiLCJyZXNldE1hcmdpbnMiLCJ1bnN1YnNjcmliZSIsInNldE1hcmdpbnMiLCJnZXRNYXJnaW5zIiwicG9wVXBUd29Jc051bGxBbmRUaHVtYlR3b0lzTm90TnVsbCIsImdldFNpemUiLCJnZXRQb3NpdGlvbiIsInRodW1ic1Bvc2l0aW9ucyIsIm1vdmVUbyIsImdldFBvaW50U2l6ZSIsImFkZFBvaW50cyIsIm1hcmdpbnMiLCJyaWdodCIsImJvdHRvbSIsInNsaWRlclJlY3QiLCJnZXRSZWN0IiwicG9wVXBSZWN0Iiwic2NhbGVSZWN0IiwiQ29udGFpbmVyIiwic3VwZXIiLCJjb250cm9sIiwic3R5bGUiLCJtYXJnaW5MZWZ0IiwibWFyZ2luVG9wIiwibWFyZ2luUmlnaHQiLCJtYXJnaW5Cb3R0b20iLCJtYXJnaW4iLCJUcmFjayIsImNsaWNrVG9UcmFjayIsImV2ZW50Iiwic2V0UG9zaXRpb24iLCJjbGllbnRYIiwiY2xpZW50WSIsIlRodW1iIiwic2hpZnRYIiwic2hpZnRZIiwib25Nb3VzZU1vdmVIYW5kbGVyIiwiZHJhZyIsIm9uTW91c2VVcEhhbmRsZXIiLCJlbmREcmFnIiwiYWRkTW91c2Vkb3duRXZlbnRMaXN0ZW5lciIsImRpc2FibGVEcmFnQW5kRHJvcCIsInpJbmRleCIsInRvU3RyaW5nIiwib25kcmFnc3RhcnQiLCJjbGlja1RvVGh1bWIiLCJkaXNhYmxlU2VsZWN0aW9uIiwidGh1bWJDb29yZHMiLCJzZXRUaHVtYlNoaWZ0IiwiaW5jcmVhc2VaSW5kZXgiLCJjdXJzb3JQb3MiLCJ0aHVtYlBvcyIsImdldFN0eWxlIiwicGFyc2VJbnQiLCJlbmFibGVTZWxlY3Rpb24iLCJyZW1vdmVFdmVudExpc3RlbmVyIiwib25zZWxlY3RzdGFydCIsIm9ucG9pbnRlcmRvd24iLCJQb3BVcCIsInVwZGF0ZVZhbHVlIiwidXBkYXRlUG9zaXRpb24iLCJpbm5lckhUTUwiLCJQcm9ncmVzc0JhciIsIlNjYWxlIiwiY2xpY2tUb1NjYWxlIiwiYWRkUG9pbnQiLCJzY2FsZVBvaW50IiwicXVlcnlTZWxlY3RvciIsInBvaW50IiwiZGl2aXNpb25NYXJrZXIiLCJkaXZpc2lvbkxhYmVsIiwiaW5uZXJUZXh0IiwiY29udHJvbFBhbmVsIiwiQ29udHJvbFBhbmVsVmlldyIsInR5cGVSYWRpbyIsImxhYmVsIiwib3JpZW50YXRpb25SYWRpbyIsInNjYWxlQ2hlY2tib3giLCJwb3BVcHNDaGVja2JveCIsImNyZWF0ZVBhbmVsIiwid3JhcHBlckNsYXNzIiwiZWxlbWVudHMiLCJnZXRDb250cm9sIiwidHlwZVJhZGlvR3JvdXAiLCJoZWFkZXIiLCJvcmllbnRhdGlvblJhZGlvR3JvdXAiLCJhbGxSYWRpb3NHcm91cCIsImNoZWNrYm94ZXNHcm91cCIsInN3aXRjaE9yaWVudGF0aW9uIiwidGh1bWJzVmFsdWVzIiwic2V0VmFsdWUiLCJzdGF0ZSIsInNldFN0YXRlIiwic3dpdGNoVG8iLCJnZXRWYWx1ZSIsImdldFN0YXRlIiwiVGV4dEZpZWxkIiwibGFiZWxUZXh0IiwiZmllbGQiLCJyZXBvcnRDaGFuZ2VzIiwib25rZXlwcmVzcyIsInJlbW92ZU5vbkRpZ2l0Q2hhciIsInRlc3QiLCJjbGFzc05hbWUiLCJlbGVtZW50SW5kZXgiLCJSYWRpb0J1dHRvbiIsInVuaXF1ZU5hbWUiLCJnZW5lcmF0ZU5hbWUiLCJyYWRpb3MiLCJyYWRpbyIsImNoZWNrZWQiLCJyYWRpb1dyYXBwZXIiLCJyYWRpb0J1dHRvbiIsInJhZGlvSXNGaXJzdE9yQ2hlY2tlZCIsIm9uQ2hhbmdlIiwiY291bnRlciIsIm5ld05hbWUiLCJDaGVja2JveCIsImNoZWNrYm94IiwiQ29udHJvbFBhbmVsTW9kZWwiLCJzbGlkZXIiLCJzZXRNaW5WYWx1ZSIsInNldE1heFZhbHVlIiwic2V0U3RlcCIsInNldFNjYWxlU3RhdGUiLCJzZXRQb3BVcHNTdGF0ZSIsInNldFR5cGVSYWRpbyIsInNldE9yaWVudGF0aW9uUmFkaW8iLCJnZXRUaHVtYk9uZVZhbHVlIiwiZ2V0VGh1bWJUd29WYWx1ZSIsImFkZE5ld1NsaWRlckJ0biIsImhlbHBJbWFnZSIsImJ1dHRvbldyYXBwZXIiLCJyZW1vdmVTbGlkZXIiLCJxdWVyeVNlbGVjdG9yQWxsIiwiYmVmb3JlIiwiaWNvbiIsInJlbW92ZVNsaWRlckJ1dHRvbiJdLCJtYXBwaW5ncyI6ImFBQ0UsU0FBU0EsRUFBcUJDLEdBUTdCLElBUEEsSUFNSUMsRUFBVUMsRUFOVkMsRUFBV0gsRUFBSyxHQUNoQkksRUFBY0osRUFBSyxHQUNuQkssRUFBaUJMLEVBQUssR0FJSE0sRUFBSSxFQUFHQyxFQUFXLEdBQ3BDRCxFQUFJSCxFQUFTSyxPQUFRRixJQUN6QkosRUFBVUMsRUFBU0csR0FDaEJHLE9BQU9DLFVBQVVDLGVBQWVDLEtBQUtDLEVBQWlCWCxJQUFZVyxFQUFnQlgsSUFDcEZLLEVBQVNPLEtBQUtELEVBQWdCWCxHQUFTLElBRXhDVyxFQUFnQlgsR0FBVyxFQUU1QixJQUFJRCxLQUFZRyxFQUNaSyxPQUFPQyxVQUFVQyxlQUFlQyxLQUFLUixFQUFhSCxLQUNwRGMsRUFBUWQsR0FBWUcsRUFBWUgsSUFLbEMsSUFGR2UsR0FBcUJBLEVBQW9CaEIsR0FFdENPLEVBQVNDLFFBQ2RELEVBQVNVLE9BQVRWLEdBT0QsT0FIQVcsRUFBZ0JKLEtBQUtLLE1BQU1ELEVBQWlCYixHQUFrQixJQUd2RGUsSUFFUixTQUFTQSxJQUVSLElBREEsSUFBSUMsRUFDSWYsRUFBSSxFQUFHQSxFQUFJWSxFQUFnQlYsT0FBUUYsSUFBSyxDQUcvQyxJQUZBLElBQUlnQixFQUFpQkosRUFBZ0JaLEdBQ2pDaUIsR0FBWSxFQUNSQyxFQUFJLEVBQUdBLEVBQUlGLEVBQWVkLE9BQVFnQixJQUFLLENBQzlDLElBQUlDLEVBQVFILEVBQWVFLEdBQ0csSUFBM0JYLEVBQWdCWSxLQUFjRixHQUFZLEdBRTNDQSxJQUNGTCxFQUFnQlEsT0FBT3BCLElBQUssR0FDNUJlLEVBQVNNLEVBQW9CQSxFQUFvQkMsRUFBSU4sRUFBZSxLQUl0RSxPQUFPRCxFQUlSLElBQUlRLEVBQW1CLEdBS25CaEIsRUFBa0IsQ0FDckJpQixFQUFHLEdBR0FaLEVBQWtCLEdBR3RCLFNBQVNTLEVBQW9CMUIsR0FHNUIsR0FBRzRCLEVBQWlCNUIsR0FDbkIsT0FBTzRCLEVBQWlCNUIsR0FBVThCLFFBR25DLElBQUlDLEVBQVNILEVBQWlCNUIsR0FBWSxDQUN6Q0ssRUFBR0wsRUFDSGdDLEdBQUcsRUFDSEYsUUFBUyxJQVVWLE9BTkFoQixFQUFRZCxHQUFVVyxLQUFLb0IsRUFBT0QsUUFBU0MsRUFBUUEsRUFBT0QsUUFBU0osR0FHL0RLLEVBQU9DLEdBQUksRUFHSkQsRUFBT0QsUUFLZkosRUFBb0JPLEVBQUluQixFQUd4QlksRUFBb0JRLEVBQUlOLEVBR3hCRixFQUFvQlMsRUFBSSxTQUFTTCxFQUFTTSxFQUFNQyxHQUMzQ1gsRUFBb0JZLEVBQUVSLEVBQVNNLElBQ2xDNUIsT0FBTytCLGVBQWVULEVBQVNNLEVBQU0sQ0FBRUksWUFBWSxFQUFNQyxJQUFLSixLQUtoRVgsRUFBb0JnQixFQUFJLFNBQVNaLEdBQ1gsb0JBQVhhLFFBQTBCQSxPQUFPQyxhQUMxQ3BDLE9BQU8rQixlQUFlVCxFQUFTYSxPQUFPQyxZQUFhLENBQUVDLE1BQU8sV0FFN0RyQyxPQUFPK0IsZUFBZVQsRUFBUyxhQUFjLENBQUVlLE9BQU8sS0FRdkRuQixFQUFvQm9CLEVBQUksU0FBU0QsRUFBT0UsR0FFdkMsR0FEVSxFQUFQQSxJQUFVRixFQUFRbkIsRUFBb0JtQixJQUMvQixFQUFQRSxFQUFVLE9BQU9GLEVBQ3BCLEdBQVcsRUFBUEUsR0FBOEIsaUJBQVZGLEdBQXNCQSxHQUFTQSxFQUFNRyxXQUFZLE9BQU9ILEVBQ2hGLElBQUlJLEVBQUt6QyxPQUFPMEMsT0FBTyxNQUd2QixHQUZBeEIsRUFBb0JnQixFQUFFTyxHQUN0QnpDLE9BQU8rQixlQUFlVSxFQUFJLFVBQVcsQ0FBRVQsWUFBWSxFQUFNSyxNQUFPQSxJQUN0RCxFQUFQRSxHQUE0QixpQkFBVEYsRUFBbUIsSUFBSSxJQUFJTSxLQUFPTixFQUFPbkIsRUFBb0JTLEVBQUVjLEVBQUlFLEVBQUssU0FBU0EsR0FBTyxPQUFPTixFQUFNTSxJQUFRQyxLQUFLLEtBQU1ELElBQzlJLE9BQU9GLEdBSVJ2QixFQUFvQjJCLEVBQUksU0FBU3RCLEdBQ2hDLElBQUlNLEVBQVNOLEdBQVVBLEVBQU9pQixXQUM3QixXQUF3QixPQUFPakIsRUFBZ0IsU0FDL0MsV0FBOEIsT0FBT0EsR0FFdEMsT0FEQUwsRUFBb0JTLEVBQUVFLEVBQVEsSUFBS0EsR0FDNUJBLEdBSVJYLEVBQW9CWSxFQUFJLFNBQVNnQixFQUFRQyxHQUFZLE9BQU8vQyxPQUFPQyxVQUFVQyxlQUFlQyxLQUFLMkMsRUFBUUMsSUFHekc3QixFQUFvQjhCLEVBQUksR0FFeEIsSUFBSUMsRUFBYUMsT0FBcUIsYUFBSUEsT0FBcUIsY0FBSyxHQUNoRUMsRUFBbUJGLEVBQVc1QyxLQUFLdUMsS0FBS0ssR0FDNUNBLEVBQVc1QyxLQUFPZixFQUNsQjJELEVBQWFBLEVBQVdHLFFBQ3hCLElBQUksSUFBSXZELEVBQUksRUFBR0EsRUFBSW9ELEVBQVdsRCxPQUFRRixJQUFLUCxFQUFxQjJELEVBQVdwRCxJQUMzRSxJQUFJVSxFQUFzQjRDLEVBSTFCMUMsRUFBZ0JKLEtBQUssQ0FBQyxFQUFFLElBRWpCTSxJLGdGQzlGVCxVQTdDQSxNQUdFLGNBQ0UwQyxLQUFLQyxVQUFZLEdBU25CLFNBQVNDLEVBQW1CQyxHQUNyQnhELE9BQU9DLFVBQVVDLGVBQWVDLEtBQUtrRCxLQUFLQyxVQUFXQyxLQUN4REYsS0FBS0MsVUFBVUMsR0FBYSxJQUU5QkYsS0FBS0MsVUFBVUMsR0FBV2xELEtBQUttRCxHQVFqQyxZQUFZRCxFQUFtQkMsR0FDN0JILEtBQUtDLFVBQVVDLEdBQWFGLEtBQUtDLFVBQVVDLEdBQVdFLE9BQ25EQyxHQUF1QkEsSUFBdUJGLEdBU25ELE9BQU9ELEdBQ0R2RCxPQUFPQyxVQUFVQyxlQUFlQyxLQUFLa0QsS0FBS0MsVUFBV0MsSUFDdkRGLEtBQUtDLFVBQVVDLEdBQVdJLFFBQVNELEdBQ2pDQSxFQUFtQkUsT0FBT0wsTyxrS0NsRGxDLGdCQTRIQSxVQTFIQSxNQUtFLFlBQVkzQixFQUFjaUMsR0FDeEIsTUFBTUMsRUFBVUMsU0FBU0MsY0FBYyxPQUN2Q1gsS0FBS1MsUUFBVUEsRUFDZlQsS0FBS1ksUUFBVSxJQUFJLFVBQ25CWixLQUFLYSxhQUFlLENBQUVDLEtBQU0sRUFBR0MsSUFBSyxHQUVwQyxJQUFJQyxFQUFzQnpDLEVBQUgsY0FDbkJpQyxJQUNGUSxFQUFtQixHQUFHekMsS0FBUWlDLEtBRWhDUixLQUFLUyxRQUFRUSxVQUFVQyxJQUFJLEdBQUczQyxFQUFReUMsR0FROUIsWUFBWUcsR0FDcEIsTUFBTUMsRUFBdUIsQ0FDM0JOLEtBQU1LLEVBQWVMLEtBQ3JCQyxJQUFLSSxFQUFlSixLQUdoQk0sRUFBNkJyQixLQUFLUyxRQUFRYSxjQUVoRCxHQUFlLE9BQVhELEVBQWlCLENBQ25CLE1BQU1FLEVBQXdCRixFQUFPRyx3QkFDckNKLEVBQXFCTixNQUFRUyxFQUFhVCxLQUMxQ00sRUFBcUJMLEtBQU9RLEVBQWFSLElBRzNDZixLQUFLYSxhQUFlTyxFQVF0QixjQUNFLE9BQU9wQixLQUFLYSxhQU9kLGFBQ0UsT0FBT2IsS0FBS1MsUUFPZCxVQUNFLE1BQU8sQ0FDTGdCLE1BQU96QixLQUFLUyxRQUFRaUIsWUFDcEJDLE9BQVEzQixLQUFLUyxRQUFRbUIsY0FPekIscUJBQ0UsTUFBTUMsRUFBWTdCLEtBQUtTLFFBQVFRLFVBQVUsR0FDekNqQixLQUFLUyxRQUFRUSxVQUFVYSxPQUFVRCxFQUFILGFBQzlCN0IsS0FBS1MsUUFBUVEsVUFBVUMsSUFBT1csRUFBSCxlQU03QixtQkFDRSxNQUFNQSxFQUFZN0IsS0FBS1MsUUFBUVEsVUFBVSxHQUN6Q2pCLEtBQUtTLFFBQVFRLFVBQVVhLE9BQVVELEVBQUgsZUFDOUI3QixLQUFLUyxRQUFRUSxVQUFVQyxJQUFPVyxFQUFILGFBTTdCLFNBQ0U3QixLQUFLUyxRQUFRcUIsU0FPZixpQkFDRSxNQUFNRCxFQUFZN0IsS0FBS1MsUUFBUVEsVUFBVSxHQUV6QyxPQUQ2QmpCLEtBQUtTLFFBQVFRLFVBQVUsR0FDeEJjLFFBQVdGLEVBQUgsSUFBaUIsSUFPdkQsVUFDRSxPQUFPN0IsS0FBS1MsUUFBUWUsd0JBT3RCLFNBQVNRLEcsTUFDUCxPQUEyQixRQUEzQixFQUFPdEIsU0FBU3VCLG1CQUFXLGVBQ3ZCQyxpQkFBaUJsQyxLQUFLUyxRQUFTLE1BQ2hDMEIsaUJBQWlCSCxNLCtFQ3pIeEIsS0FDQSxNQUNBLE1BRUEsTUFDQSxNQUNBLE1BQ0EsTUFDQSxPLCtLQ0hBLGdCQUNBLFVBQ0EsVUFFQSxDQUFFSSxJQUVBLE1BQU1DLEVBQWtCLENBQ3RCN0IsWUFBYSxhQUNiOEIsS0FBTSxRQUNOQyxPQUFPLEVBQ1BDLFFBQVEsRUFDUkMsSUFBSyxFQUNMQyxJQUFLLEdBQ0xDLEtBQU0sRUFDTkMsY0FBZSxFQUNmQyxjQUFlLEVBQ2ZDLFdBQVksQ0FBRXJCLE1BQU8sSUFBS0UsT0FBUSxJQUNsQ29CLFVBQVcsQ0FBRXRCLE1BQU8sR0FBSUUsT0FBUSxLQUk1QnFCLEVBQWUsQ0FDbkIsS0FBS0MsR0FFSCxNQUFNQyxFQUE0QmQsRUFBRWUsT0FBT2QsRUFBaUJZLEdBRzVELE9BQU9qRCxLQUFLb0QsTUFBSyxXQUNmLE1BQU1DLEVBQVEsSUFBSSxVQUFrQkgsR0FDOUJJLEVBQU8sSUFBSSxVQUFpQnRELE1BQzVCdUQsRUFBYSxJQUFJLFVBQXVCLENBQzVDRixRQUNBQyxTQUdGbEIsRUFBRXBDLE1BQU05RCxLQUFLLFdBQVlnSCxHQUN6QmQsRUFBRXBDLE1BQU05RCxLQUFLLGFBQWNxSCxHQUMzQm5CLEVBQUVwQyxNQUFNOUQsS0FBSyxRQUFTbUgsT0FHMUIsa0JBQ0UsT0FBT2pCLEVBQUVwQyxNQUFNOUQsT0FBT21ILE1BQU16QyxTQUU5QixrQkFDRSxPQUFPd0IsRUFBRXBDLE1BQU05RCxPQUFPbUgsTUFBTUcsbUJBRTlCLFNBQ0UsT0FBT3BCLEVBQUVwQyxNQUFNOUQsT0FBT21ILE1BQU1JLFVBRTlCLFNBQ0UsT0FBT3JCLEVBQUVwQyxNQUFNOUQsT0FBT21ILE1BQU1LLFVBRTlCLFVBQ0UsT0FBT3RCLEVBQUVwQyxNQUFNOUQsT0FBT21ILE1BQU1NLFdBRTlCLGdCQUNFLE9BQU92QixFQUFFcEMsTUFBTTlELE9BQU9tSCxNQUFNTyxpQkFFOUIsaUJBQ0UsT0FBT3hCLEVBQUVwQyxNQUFNOUQsT0FBT21ILE1BQU1RLGtCQUU5QixVQUNFLE9BQU96QixFQUFFcEMsTUFBTTlELE9BQU9tSCxNQUFNUyxXQUU5QixpQkFDRSxPQUFPMUIsRUFBRXBDLE1BQU05RCxPQUFPbUgsTUFBTVUsa0JBRTlCLG1CQUFtQkMsR0FDakI1QixFQUFFcEMsTUFBTTlELE9BQU9tSCxNQUFNWSxtQkFBbUJELEtBSTVDNUIsRUFBRThCLEdBQUdDLGFBQWUsU0FDbEJDLEVBQ0FDLEdBRUEsSUFBSUMsRUFXSixNQVRzQixpQkFBWEYsR0FBdUJwQixFQUFRb0IsR0FDeENFLEVBQVN0QixFQUFRb0IsR0FBUXRILEtBQUtrRCxLQUFNcUUsR0FDVCxpQkFBWEQsR0FBd0JBLEdBR3hDaEMsRUFBRW1DLE1BQU0sa0JBQWtCSCwyQ0FDMUJFLEVBQVN0RSxNQUhUc0UsRUFBU3RCLEVBQVF3QixLQUFLMUgsS0FBS2tELEtBQU1vRSxHQU01QkUsSUFuRlgsQ0FxRkdHLEssbUxDOUVILGdCQUVBLE1BQU1DLEVBY0osWUFBWXhCLEdBWkosS0FBQTFDLFlBQWMsYUFDZCxLQUFBOEIsS0FBTyxRQUNQLEtBQUFDLE9BQVEsRUFDUixLQUFBQyxRQUFTLEVBQ1QsS0FBQUMsSUFBTSxFQUNOLEtBQUFDLElBQU0sR0FDTixLQUFBQyxLQUFPLEVBQ1AsS0FBQUMsY0FBZ0IsRUFDaEIsS0FBQUMsY0FBZ0IsRUFDaEIsS0FBQUMsV0FBYSxDQUFFckIsTUFBTyxJQUFLRSxPQUFRLElBQ25DLEtBQUFvQixVQUFZLENBQUV0QixNQUFPLEdBQUlFLE9BQVEsSUFHdkMzQixLQUFLWSxRQUFVLElBQUksVUFDbkJaLEtBQUtpRSxtQkFBbUJmLEdBTzFCLG1CQUFtQkEsUUFDV3lCLElBQXhCekIsRUFBU0osYUFDWDlDLEtBQUs4QyxXQUFhSSxFQUFTSixpQkFFRjZCLElBQXZCekIsRUFBU0gsWUFDWC9DLEtBQUsrQyxVQUFZRyxFQUFTSCxXQUV4Qi9DLEtBQUtRLGNBQWdCMEMsRUFBUzFDLGNBQ2hDUixLQUFLUSxZQUFjMEMsRUFBUzFDLFlBQzVCUixLQUFLWSxRQUFRZ0UsT0FBTyx5QkFFbEI1RSxLQUFLc0MsT0FBU1ksRUFBU1osT0FDekJ0QyxLQUFLc0MsS0FBT1ksRUFBU1osS0FDakJ0QyxLQUFLNkUsZ0RBQ1A3RSxLQUFLNkMsY0FBZ0I3QyxLQUFLNEMsZUFFNUI1QyxLQUFLWSxRQUFRZ0UsT0FBTyxrQkFFbEI1RSxLQUFLeUMsTUFBUVMsRUFBU1QsS0FDeEJ6QyxLQUFLOEUsZUFBZTVCLEVBQVNULEtBRTNCekMsS0FBSzBDLE1BQVFRLEVBQVNSLEtBQ3hCMUMsS0FBSytFLGVBQWU3QixFQUFTUixLQUUzQjFDLEtBQUsyQyxPQUFTTyxFQUFTUCxNQUN6QjNDLEtBQUtnRixXQUFXOUIsRUFBU1AsTUFFdkIzQyxLQUFLdUMsUUFBVVcsRUFBU1gsUUFDMUJ2QyxLQUFLdUMsTUFBUVcsRUFBU1gsTUFDdEJ2QyxLQUFLWSxRQUFRZ0UsT0FBTyx3QkFFbEI1RSxLQUFLd0MsU0FBV1UsRUFBU1YsU0FDM0J4QyxLQUFLd0MsT0FBU1UsRUFBU1YsT0FDdkJ4QyxLQUFLWSxRQUFRZ0UsT0FBTyx5QkFHcEI1RSxLQUFLNEMsZ0JBQWtCTSxFQUFTTixlQUNoQzVDLEtBQUs2QyxnQkFBa0JLLEVBQVNMLGVBRWhDN0MsS0FBS2lGLGdCQUFnQixDQUNuQkMsU0FBVWhDLEVBQVNOLGNBQ25CdUMsU0FBVWpDLEVBQVNMLGdCQVVqQiw4Q0FDTixNQUFxQixVQUFkN0MsS0FBS3NDLE1BQW9CdEMsS0FBSzZDLGNBQWdCN0MsS0FBSzRDLGNBTzVELGtCQUFrQndDLEdBQ2hCLE1BQU14QyxFQUFnQjVDLEtBQUtxRixjQUN6QnJGLEtBQUtzRixpQkFBaUJGLEVBQVVGLFdBRWxDLElBQUlyQyxFQUErQixLQUVSLE9BQXZCdUMsRUFBVUQsV0FDWnRDLEVBQWdCN0MsS0FBS3FGLGNBQ25CckYsS0FBS3NGLGlCQUFpQkYsRUFBVUQsWUFLbENULEVBQWtCYSx3Q0FDaEIzQyxFQUNBQyxLQUdGN0MsS0FBSzRDLGNBQWdCQSxFQUNDLE9BQWxCQyxJQUNGN0MsS0FBSzZDLGNBQWdCQSxJQUl6QjdDLEtBQUtZLFFBQVFnRSxPQUFPLHNCQU9kLCtDQUNOWSxFQUNBQyxHQUVBLE9BQW9CLE9BQWJBLEdBQXFCRCxHQUFZQyxFQU8xQyxjQUFjQyxHQUNaMUYsS0FBSzhDLFdBQWE0QixFQUFrQmlCLGVBQWVELEVBQU0sR0FPM0QsYUFBYUEsR0FDWDFGLEtBQUsrQyxVQUFZMkIsRUFBa0JpQixlQUFlRCxFQUFNLEdBTzFELGdCQUFnQkUsR0FDZCxNQUFNQyxFQUFjN0YsS0FBSzhGLGdCQUFnQkYsRUFBT1YsVUFDaEQsSUFBSWEsRUFBYyxLQUNBLFVBQWQvRixLQUFLc0MsT0FDUHlELEVBQWMvRixLQUFLOEYsZ0JBQWdCRixFQUFPVCxXQUU1Q25GLEtBQUtnRyxrQkFBa0IsQ0FBRWQsU0FBVVcsRUFBYVYsU0FBVVksSUFPNUQsU0FDRSxPQUFPL0YsS0FBS3lDLElBT2QsU0FDRSxPQUFPekMsS0FBSzBDLElBT2QsVUFDRSxPQUFPMUMsS0FBSzJDLEtBT2QsZ0JBQ0UsT0FBTzNDLEtBQUt1QyxNQU9kLGlCQUNFLE9BQU92QyxLQUFLd0MsT0FPZCxVQUNFLE9BQU94QyxLQUFLc0MsS0FPZCxpQkFDRSxPQUFPdEMsS0FBS1EsWUFPZCx1QkFDRSxNQUFNcUYsRUFBYzdGLEtBQUs4RixnQkFBZ0I5RixLQUFLNEMsZUFDeENtRCxFQUFjL0YsS0FBSzhGLGdCQUFnQjlGLEtBQUs2QyxlQUN4QzZDLEVBQU8sT0FBSCxVQUFRMUYsS0FBSzhDLFlBQ2pCbUQsRUFBVyxDQUFFbkYsS0FBTSxFQUFHQyxJQUFLLEdBQ2pDLElBQUltRixFQUFRLEVBQ1JDLEVBQU0sRUFzQlYsTUFwQmtCLFdBQWRuRyxLQUFLc0MsS0FDUDZELEVBQ0VuRyxLQUFLc0YsaUJBQWlCTyxHQUN0QjdGLEtBQUtvRyxrQkFBa0JwRyxLQUFLK0MsWUFFOUJtRCxFQUFRbEcsS0FBS3NGLGlCQUFpQk8sR0FDOUJNLEVBQ0VuRyxLQUFLc0YsaUJBQWlCUyxHQUN0Qi9GLEtBQUtzRixpQkFBaUJPLEdBQ3RCN0YsS0FBS29HLGtCQUFrQnBHLEtBQUsrQyxZQUdQLGVBQXJCL0MsS0FBS1EsYUFDUHlGLEVBQVNuRixLQUFPb0YsRUFDaEJSLEVBQUtqRSxNQUFRMEUsSUFFYkYsRUFBU2xGLElBQU1tRixFQUNmUixFQUFLL0QsT0FBU3dFLEdBR1QsQ0FBRUYsV0FBVVAsUUFRckIsZUFDRSxNQUFPLENBQ0xSLFNBQVVsRixLQUFLOEYsZ0JBQWdCOUYsS0FBSzRDLGVBQ3BDdUMsU0FBVW5GLEtBQUs4RixnQkFBZ0I5RixLQUFLNkMsZ0JBUXhDLGtCQUNFLE1BQU8sQ0FDTHdELFNBQVUsQ0FDUnJILE1BQU9nQixLQUFLNEMsY0FDWnFELFNBQVVqRyxLQUFLc0csaUJBQ2J0RyxLQUFLOEYsZ0JBQWdCOUYsS0FBSzRDLGlCQUc5QjJELFNBQVUsQ0FDUnZILE1BQU9nQixLQUFLNkMsY0FDWm9ELFNBQVVqRyxLQUFLc0csaUJBQ2J0RyxLQUFLOEYsZ0JBQWdCOUYsS0FBSzZDLGtCQVVsQyxrQkFDRSxNQUFPLENBQUVxQyxTQUFVbEYsS0FBSzRDLGNBQWV1QyxTQUFVbkYsS0FBSzZDLGVBUXhELGVBQWUyRCxHQUNiLE1BQU1DLEVBQWMsR0FDZEMsRUFBYTFHLEtBQUsyRyxnQkFDbEJDLEVBQW1CNUcsS0FBSzZHLGNBQzlCLElBQUlDLEVBQWUsRUFFZmIsRUFDRmpHLEtBQUtvRyxrQkFBa0JwRyxLQUFLK0MsV0FBYSxFQUN6Qy9DLEtBQUtvRyxrQkFBa0JJLEdBQWtCLEVBRTNDLE1BQU1PLEVBQW1CTCxFQUFhLEVBRXRDLElBQUssSUFBSWxLLEVBQUksRUFBR0EsR0FBS3dLLEtBQUtDLE1BQU1GLEVBQW1CLEdBQUl2SyxHQUFLLEVBQUcsQ0FDN0QsTUFBTTBLLEVBQWFsSCxLQUFLbUgsZ0JBQ3RCbEIsRUFDRWpHLEtBQUtvRyxrQkFBa0JwRyxLQUFLK0MsV0FBYSxFQUN6Qy9DLEtBQUtvRyxrQkFBa0JJLEdBQWtCLEdBSzdDLEdBRkFQLEVBQVdqRyxLQUFLb0gscUJBQXFCbkIsRUFBVU8sR0FFM0N4RyxLQUFLcUgsWUFBWTdLLEVBQUd5SixFQUFVYSxFQUFjTixHQUFpQixDQUMvRCxNQUFNYyxFQUFXLENBQUV4RyxLQUFNLEVBQUdDLElBQUssR0FDUixlQUFyQmYsS0FBS1EsWUFDUDhHLEVBQVN4RyxLQUFPbUYsRUFFaEJxQixFQUFTdkcsSUFBTWtGLEVBR2pCUSxFQUFZekosS0FBSyxDQUNmaUosU0FBVXFCLEVBQ1Y1QixLQUFNYyxFQUNOeEgsTUFBT2tJLElBR1RKLEVBQWViLEVBR2pCQSxHQUFZVyxFQUVkLE9BQU9ILEVBWUQsWUFDTmMsRUFDQUQsRUFDQVIsRUFDQU4sR0FFQSxPQUNZLElBQVZlLEdBQ0FELEVBQVdSLEVBQWU5RyxLQUFLb0csa0JBQWtCSSxHQVFyRCxzQkFBc0JnQixHQUNwQixNQUFNdkIsRUFBVyxDQUNmbkYsS0FBTTBHLEVBQWMxRyxLQUFPZCxLQUFLK0MsVUFBVXRCLE1BQVEsRUFDbERWLElBQUt5RyxFQUFjekcsSUFBTWYsS0FBSytDLFVBQVVwQixPQUFTLEdBRW5ELElBQUl1RCxFQUFXbEYsS0FBSzRDLGNBQ2hCdUMsRUFBV25GLEtBQUs2QyxjQUVoQjdDLEtBQUt5SCxzQkFBc0J4QixHQUM3QmQsRUFBV25GLEtBQUttSCxnQkFBZ0JuSCxLQUFLc0YsaUJBQWlCVyxJQUV0RGYsRUFBV2xGLEtBQUttSCxnQkFBZ0JuSCxLQUFLc0YsaUJBQWlCVyxJQUd4RGpHLEtBQUtpRixnQkFBZ0IsQ0FBRUMsV0FBVUMsYUFTM0Isc0JBQXNCYyxHQUM1QixNQUFrQixVQUFkakcsS0FBS3NDLE1BRUwwRSxLQUFLVSxJQUNIMUgsS0FBS3NGLGlCQUFpQlcsR0FDcEJqRyxLQUFLc0YsaUJBQWlCdEYsS0FBSzhGLGdCQUFnQjlGLEtBQUs2QyxpQkFFcERtRSxLQUFLVSxJQUNIMUgsS0FBS3NGLGlCQUFpQlcsR0FDcEJqRyxLQUFLc0YsaUJBQWlCdEYsS0FBSzhGLGdCQUFnQjlGLEtBQUs0QyxpQkFjbEQsc0JBQXNCOEMsRUFBYWpELEdBR3pDLE1BQU8sQ0FBRWhCLE1BRktpRSxFQUFLakUsT0FBU2dCLEVBQU1pRCxFQUFLakUsTUFBUWdCLEVBRS9CZCxPQUREK0QsRUFBSy9ELFFBQVVjLEVBQU1pRCxFQUFLL0QsT0FBU2MsR0FVNUMsaUJBQWlCa0YsR0FDdkIsSUFBSTdHLEVBQU8sRUFDUEMsRUFBTSxFQVFWLE1BTnlCLGVBQXJCZixLQUFLUSxZQUNQTSxFQUFPNkcsRUFBYzdHLEtBQU9kLEtBQUsrQyxVQUFVdEIsTUFBUSxFQUVuRFYsRUFBTTRHLEVBQWM1RyxJQUFNZixLQUFLK0MsVUFBVXBCLE9BQVMsRUFHN0MsQ0FBRWIsT0FBTUMsT0FPVCxlQUFlL0IsR0FDckIsSUFBSTRJLEVBQVM1SSxFQUNUNEksR0FBVTVILEtBQUswQyxNQUNqQmtGLEVBQVM1SCxLQUFLMEMsSUFBTSxHQUV0QjFDLEtBQUt5QyxJQUFNbUYsRUFDWDVILEtBQUtZLFFBQVFnRSxPQUFPLGdCQU9kLGVBQWU1RixHQUNyQixJQUFJNkksRUFBUzdJLEVBQ1Q2SSxHQUFVN0gsS0FBS3lDLE1BQ2pCb0YsRUFBUzdILEtBQUt5QyxJQUFNLEdBRXRCekMsS0FBSzBDLElBQU1tRixFQUNYN0gsS0FBS1ksUUFBUWdFLE9BQU8sZ0JBT2QsV0FBVzVGLEdBQ2pCLElBQUk4SSxFQUFVOUksRUFDVjhJLEdBQVcsSUFDYkEsRUFBVSxHQUVaOUgsS0FBSzJDLEtBQU9tRixFQUNaOUgsS0FBS1ksUUFBUWdFLE9BQU8saUJBVWQsY0FBY3FCLEdBQ3BCLEdBQUlqRyxLQUFLbUgsZ0JBQWdCbEIsSUFBYWpHLEtBQUswQyxJQUN6QyxPQUFPMUMsS0FBS21ILGdCQUFnQmxCLEdBRzlCLE1BQU1XLEVBQVc1RyxLQUFLNkcsY0FDaEJrQixFQUFjZixLQUFLQyxNQUFNaEIsRUFBV1csR0FBWUEsRUFFdEQsT0FBTzVHLEtBQUttSCxnQkFBZ0JZLEdBT3RCLGdCQUNOLE9BQVEvSCxLQUFLMEMsSUFBTTFDLEtBQUt5QyxLQUFPekMsS0FBSzJDLEtBTzlCLGNBQ04sTUFBTStELEVBQWExRyxLQUFLMkcsZ0JBQ3hCLE9BQ0czRyxLQUFLb0csa0JBQWtCcEcsS0FBSzhDLFlBQzNCOUMsS0FBS29HLGtCQUFrQnBHLEtBQUsrQyxZQUM5QjJELEVBVUksZ0JBQWdCVCxHQUN0QixNQUFNK0IsRUFBaUJoSSxLQUFLaUksZ0JBRTVCLElBQUlDLEVBQVdsQixLQUFLQyxNQUNsQmpILEtBQUt5QyxLQUNEekMsS0FBSzBDLElBQU0xQyxLQUFLeUMsS0FBT3pDLEtBQUswQyxJQUM1QnNFLEtBQUtDLE1BQU1oQixFQUFXK0IsSUFNNUIsT0FIQUUsRUFBV0EsRUFBV2xJLEtBQUt5QyxJQUFNekMsS0FBS3lDLElBQU15RixFQUM1Q0EsRUFBV0EsRUFBV2xJLEtBQUswQyxJQUFNMUMsS0FBSzBDLElBQU13RixFQUVyQ0EsRUFTRCxnQkFBZ0JsSixHQUN0QixNQUFNaUgsRUFBVyxDQUFFbkYsS0FBTSxFQUFHQyxJQUFLLEdBQzNCb0gsRUFBV25JLEtBQUtpSSxnQkFDdEIsSUFBSUcsRUFBYXBKLEVBRWJvSixFQUFhcEksS0FBS3lDLElBQ3BCMkYsRUFBYXBJLEtBQUt5QyxJQUNUMkYsRUFBYXBJLEtBQUswQyxNQUMzQjBGLEVBQWFwSSxLQUFLMEMsS0FHcEIsTUFBTTJGLEdBQ0ZELEVBQWFwSSxLQUFLeUMsTUFBUXpDLEtBQUswQyxJQUFNMUMsS0FBS3lDLEtBQVEwRixFQUFXbkksS0FBSzBDLElBUXRFLE1BTnlCLGVBQXJCMUMsS0FBS1EsWUFDUHlGLEVBQVNuRixLQUFPdUgsRUFFaEJwQyxFQUFTbEYsSUFBTXNILEVBR1ZwQyxFQU9ELGdCQUNOLE9BQ0dqRyxLQUFLb0csa0JBQWtCcEcsS0FBSzhDLFlBQzNCOUMsS0FBS29HLGtCQUFrQnBHLEtBQUsrQyxZQUM5Qi9DLEtBQUswQyxJQVNELGtCQUFrQmdELEdBQ3hCLE1BQXlCLGVBQXJCMUYsS0FBS1EsWUFDQWtGLEVBQUtqRSxNQUdQaUUsRUFBSy9ELE9BUU4saUJBQWlCc0UsR0FDdkIsTUFBeUIsZUFBckJqRyxLQUFLUSxZQUNBeUYsRUFBU25GLEtBR1htRixFQUFTbEYsSUFTVixxQkFBcUJrRixFQUFrQnFDLEdBQzdDLElBQUlQLEVBQWM5QixFQUVsQixNQUFNc0MsRUFDSnZJLEtBQUtvRyxrQkFBa0JwRyxLQUFLOEMsWUFDNUI5QyxLQUFLb0csa0JBQWtCcEcsS0FBSytDLFdBQWEsRUFDekMvQyxLQUFLb0csa0JBQWtCa0MsR0FBYSxFQU10QyxPQUpJUCxFQUFjUSxJQUNoQlIsRUFBY1EsR0FHVFIsR0FJWCxVQUFlckQsRyw4RUNqYmYsVUE1TEEsTUFNRSxZQUFZOEQsR0FDVnhJLEtBQUtxRCxNQUFRbUYsRUFBT25GLE1BQ3BCckQsS0FBS3NELEtBQU9rRixFQUFPbEYsS0FDbkJ0RCxLQUFLeUksYUFBZXpJLEtBQUtxRCxNQUFNekMsUUFDL0JaLEtBQUswSSxZQUFjMUksS0FBS3NELEtBQUsxQyxRQUU3QlosS0FBSzJJLG9CQUNMM0ksS0FBS3dFLE9BTUMsT0FDOEIsZUFBaEN4RSxLQUFLcUQsTUFBTVUsaUJBQ2IvRCxLQUFLc0QsS0FBS3NGLHFCQUVWNUksS0FBS3NELEtBQUt1RixtQkFHWjdJLEtBQUtxRCxNQUFNeUYsY0FBYzlJLEtBQUtzRCxLQUFLeUYsaUJBQ25DL0ksS0FBS3FELE1BQU0yRixhQUFhaEosS0FBS3NELEtBQUsyRixnQkFFTCxXQUF6QmpKLEtBQUtxRCxNQUFNUyxVQUNiOUQsS0FBS3NELEtBQUs0RixpQkFFVmxKLEtBQUtzRCxLQUFLNkYsZ0JBR1JuSixLQUFLcUQsTUFBTVEsaUJBQ2I3RCxLQUFLc0QsS0FBSzhGLGVBRVZwSixLQUFLc0QsS0FBSytGLGdCQUdackosS0FBS3NKLGFBTUMsb0JBQ050SixLQUFLMEksWUFBWWEsU0FBUyxpQkFBa0J2SixNQUM1Q0EsS0FBS3lJLGFBQWFjLFNBQVMscUJBQXNCdkosTUFDakRBLEtBQUt5SSxhQUFhYyxTQUFTLGVBQWdCdkosTUFDM0NBLEtBQUt5SSxhQUFhYyxTQUFTLGVBQWdCdkosTUFDM0NBLEtBQUt5SSxhQUFhYyxTQUFTLGdCQUFpQnZKLE1BQzVDQSxLQUFLeUksYUFBYWMsU0FBUyxnQkFBaUJ2SixNQUM1Q0EsS0FBS3lJLGFBQWFjLFNBQVMsdUJBQXdCdkosTUFDbkRBLEtBQUt5SSxhQUFhYyxTQUFTLHNCQUF1QnZKLE1BQ2xEQSxLQUFLeUksYUFBYWMsU0FBUyx1QkFBd0J2SixNQUNuREEsS0FBS3NELEtBQUsxQyxRQUFRMkksU0FBUyxlQUFnQnZKLE1BQzNDQSxLQUFLc0QsS0FBSzFDLFFBQVEySSxTQUFTLGVBQWdCdkosTUFDM0NBLEtBQUtzRCxLQUFLMUMsUUFBUTJJLFNBQVMsZ0JBQWlCdkosTUFPOUMsT0FBT0UsR0FDTCxPQUFRQSxHQUNOLElBQUssaUJBQ0hGLEtBQUtxRCxNQUFNMkMsa0JBQWtCaEcsS0FBS3NELEtBQUtrRyxnQkFDdkMsTUFDRixJQUFLLHFCQUNIeEosS0FBS3lKLGtCQUNMLE1BQ0YsSUFBSyxlQUdMLElBQUssZUFHTCxJQUFLLGdCQUNIekosS0FBS3NKLGFBQ0wsTUFDRixJQUFLLHVCQUNIdEosS0FBSzBKLDBCQUNMLE1BQ0YsSUFBSyxnQkFDSDFKLEtBQUsySixtQkFDTCxNQUNGLElBQUssc0JBQ0gzSixLQUFLNEosbUJBQ0wsTUFDRixJQUFLLHVCQUNINUosS0FBSzZKLG1CQUNMLE1BQ0YsSUFBSyxlQUNIN0osS0FBS3FELE1BQU15RyxzQkFBc0I5SixLQUFLc0QsS0FBS3lHLHlCQUMzQyxNQUNGLElBQUssZUFDSC9KLEtBQUtxRCxNQUFNeUcsc0JBQXNCOUosS0FBS3NELEtBQUswRyx5QkFDM0MsTUFDRixJQUFLLGdCQUNIaEssS0FBS3dFLFFBVUgsYUFHTixHQUZBeEUsS0FBS3FELE1BQU0yQyxrQkFBa0JoRyxLQUFLcUQsTUFBTW1HLGdCQUVwQ3hKLEtBQUtxRCxNQUFNTyxnQkFBaUIsQ0FDOUI1RCxLQUFLc0QsS0FBSzJHLGNBQ1YsTUFBTXZILEVBQU0xQyxLQUFLcUQsTUFBTUssU0FDakJ3RyxFQUFTbEssS0FBS3FELE1BQU04RyxlQUN4Qm5LLEtBQUtzRCxLQUFLOEcsa0JBQWtCMUgsSUFFOUIxQyxLQUFLc0QsS0FBSytHLGVBQWVILFFBRXpCbEssS0FBS3NELEtBQUtnSCxlQU9OLGtCQUNOdEssS0FBS3NELEtBQUtpSCxhQUFhdkssS0FBS3FELE1BQU1tRyxnQkFDbEN4SixLQUFLc0QsS0FBS2tILGFBQWF4SyxLQUFLcUQsTUFBTW9ILG1CQUNsQ3pLLEtBQUtzRCxLQUFLb0gsa0JBQWtCMUssS0FBS3FELE1BQU1zSCx3QkFNakMsMEJBQzhCLGVBQWhDM0ssS0FBS3FELE1BQU1VLGlCQUNiL0QsS0FBS3NELEtBQUtzRixxQkFFVjVJLEtBQUtzRCxLQUFLdUYsbUJBR1o3SSxLQUFLcUQsTUFBTXlGLGNBQWM5SSxLQUFLc0QsS0FBS3lGLGlCQUNuQy9JLEtBQUtzSixhQU1DLG1CQUN1QixXQUF6QnRKLEtBQUtxRCxNQUFNUyxVQUNiOUQsS0FBS3NELEtBQUs0RixpQkFFVmxKLEtBQUtzRCxLQUFLNkYsZ0JBR1puSixLQUFLcUQsTUFBTTJDLGtCQUFrQmhHLEtBQUtxRCxNQUFNbUcsZ0JBTWxDLG1CQUNGeEosS0FBS3FELE1BQU1PLGlCQUNiNUQsS0FBS3NELEtBQUsyRyxjQUNWakssS0FBS3NKLGNBRUx0SixLQUFLc0QsS0FBS2dILGVBT04sbUJBQ0Z0SyxLQUFLcUQsTUFBTVEsa0JBQ2I3RCxLQUFLc0QsS0FBSzhGLGVBQ1ZwSixLQUFLcUQsTUFBTTJDLGtCQUFrQmhHLEtBQUtxRCxNQUFNbUcsaUJBRXhDeEosS0FBS3NELEtBQUsrRixtQixrS0NqTGhCLGdCQUNBLFVBQ0EsV0FDQSxXQUNBLFdBQ0EsV0FDQSxVQStXQSxVQTdXQSxNQVlFLFlBQVl1QixHQUNWNUssS0FBS1ksUUFBVSxJQUFJLFVBQ25CWixLQUFLNkssY0FBZ0JELEVBRXJCNUssS0FBSzhLLFVBQVksSUFBSSxVQUNyQjlLLEtBQUsrSyxNQUFRLElBQUksVUFDakIvSyxLQUFLa0YsU0FBVyxJQUFJLFVBQ3BCbEYsS0FBS21GLFNBQVcsSUFBSSxVQUNwQm5GLEtBQUtxRyxTQUFXLElBQUksVUFDcEJyRyxLQUFLdUcsU0FBVyxJQUFJLFVBQ3BCdkcsS0FBS2dMLFlBQWMsSUFBSSxVQUN2QmhMLEtBQUt1QyxNQUFRLElBQUksVUFFakJ2QyxLQUFLMkksb0JBQ0wzSSxLQUFLaUwsaUJBQ0xqTCxLQUFLa0wsK0JBTUMsK0JBQ05yTCxPQUFPc0wsaUJBQWlCLFNBQVVuTCxLQUFLb0wsYUFBYTdMLEtBQUtTLE9BTW5ELGVBQ05BLEtBQUtZLFFBQVFnRSxPQUFPLGlCQU10QixvQixVQUNFNUUsS0FBS2tGLFNBQVN0RSxRQUFRMkksU0FBUyxpQkFBa0J2SixNQUNwQyxRQUFiLEVBQUFBLEtBQUttRixnQkFBUSxTQUFFdkUsUUFBUTJJLFNBQVMsaUJBQWtCdkosTUFDbERBLEtBQUtrRixTQUFTdEUsUUFBUTJJLFNBQVMsaUJBQWtCdkosTUFDcEMsUUFBYixFQUFBQSxLQUFLbUYsZ0JBQVEsU0FBRXZFLFFBQVEySSxTQUFTLGlCQUFrQnZKLE1BQ2xEQSxLQUFLK0ssTUFBTW5LLFFBQVEySSxTQUFTLGVBQWdCdkosTUFDbEMsUUFBVixFQUFBQSxLQUFLdUMsYUFBSyxTQUFFM0IsUUFBUTJJLFNBQVMsZUFBZ0J2SixNQU12QyxpQkFDTkEsS0FBSzhLLFVBQVVPLE9BQU9yTCxLQUFLK0ssTUFBTU8sY0FDakN0TCxLQUFLOEssVUFBVU8sT0FBT3JMLEtBQUtrRixTQUFTb0csY0FDZCxPQUFsQnRMLEtBQUttRixVQUNQbkYsS0FBSzhLLFVBQVVPLE9BQU9yTCxLQUFLbUYsU0FBU21HLGNBRWhCLE9BQWxCdEwsS0FBS3FHLFVBQ1ByRyxLQUFLOEssVUFBVU8sT0FBT3JMLEtBQUtxRyxTQUFTaUYsY0FFaEIsT0FBbEJ0TCxLQUFLdUcsVUFDUHZHLEtBQUs4SyxVQUFVTyxPQUFPckwsS0FBS3VHLFNBQVMrRSxjQUV0Q3RMLEtBQUs4SyxVQUFVTyxPQUFPckwsS0FBS2dMLFlBQVlNLGNBQ3BCLE9BQWZ0TCxLQUFLdUMsT0FDUHZDLEtBQUs4SyxVQUFVTyxPQUFPckwsS0FBS3VDLE1BQU0rSSxjQUduQ3RMLEtBQUs2SyxjQUFjUSxPQUFPckwsS0FBSzhLLFVBQVVRLGNBTzNDLE9BQU9wTCxHLE1BQ0wsT0FBUUEsR0FDTixJQUFLLGlCQUNIRixLQUFLWSxRQUFRZ0UsT0FBTyxrQkFDcEIsTUFDRixJQUFLLGlCQUNINUUsS0FBS2tGLFNBQVNxRyxjQUNELFFBQWIsRUFBQXZMLEtBQUttRixnQkFBUSxTQUFFb0csY0FDZixNQUNGLElBQUssZUFDSHZMLEtBQUtZLFFBQVFnRSxPQUFPLGdCQUNwQixNQUNGLElBQUssZUFDSDVFLEtBQUtZLFFBQVFnRSxPQUFPLGlCQVUxQixxQixZQUNFNUUsS0FBSzhLLFVBQVVVLGVBQ2Z4TCxLQUFLOEssVUFBVWxDLHFCQUNmNUksS0FBSytLLE1BQU1uQyxxQkFDWDVJLEtBQUtrRixTQUFTMEQscUJBQ0QsUUFBYixFQUFBNUksS0FBS21GLGdCQUFRLFNBQUV5RCxxQkFDRixRQUFiLEVBQUE1SSxLQUFLcUcsZ0JBQVEsU0FBRXVDLHFCQUNGLFFBQWIsRUFBQTVJLEtBQUt1RyxnQkFBUSxTQUFFcUMscUJBQ2Y1SSxLQUFLZ0wsWUFBWXBDLHFCQUNQLFFBQVYsRUFBQTVJLEtBQUt1QyxhQUFLLFNBQUVxRyxxQkFNZCxtQixZQUNFNUksS0FBSzhLLFVBQVVVLGVBQ2Z4TCxLQUFLOEssVUFBVWpDLG1CQUNmN0ksS0FBSytLLE1BQU1sQyxtQkFDWDdJLEtBQUtrRixTQUFTMkQsbUJBQ0QsUUFBYixFQUFBN0ksS0FBS21GLGdCQUFRLFNBQUUwRCxtQkFDRixRQUFiLEVBQUE3SSxLQUFLcUcsZ0JBQVEsU0FBRXdDLG1CQUNGLFFBQWIsRUFBQTdJLEtBQUt1RyxnQkFBUSxTQUFFc0MsbUJBQ2Y3SSxLQUFLZ0wsWUFBWW5DLG1CQUNQLFFBQVYsRUFBQTdJLEtBQUt1QyxhQUFLLFNBQUVzRyxtQkFNZCxpQixZQUNlLFFBQWIsRUFBQTdJLEtBQUttRixnQkFBUSxTQUFFdkUsUUFBUTZLLFlBQVksaUJBQWtCekwsTUFDeEMsUUFBYixFQUFBQSxLQUFLbUYsZ0JBQVEsU0FBRXZFLFFBQVE2SyxZQUFZLGlCQUFrQnpMLE1BRXhDLFFBQWIsRUFBQUEsS0FBS21GLGdCQUFRLFNBQUVyRCxTQUNmOUIsS0FBS21GLFNBQVcsS0FDSCxRQUFiLEVBQUFuRixLQUFLdUcsZ0JBQVEsU0FBRXpFLFNBQ2Y5QixLQUFLdUcsU0FBVyxLQU1sQixnQkFDd0IsT0FBbEJ2RyxLQUFLbUYsV0FDUG5GLEtBQUttRixTQUFXLElBQUksVUFBTW5GLEtBQUs4SyxVQUFVL0csa0JBQ3pDL0QsS0FBSzhLLFVBQVVPLE9BQU9yTCxLQUFLbUYsU0FBU21HLGNBRWQsT0FBbEJ0TCxLQUFLcUcsV0FDUHJHLEtBQUt1RyxTQUFXLElBQUksVUFBTXZHLEtBQUs4SyxVQUFVL0csa0JBQ3pDL0QsS0FBSzhLLFVBQVVPLE9BQU9yTCxLQUFLdUcsU0FBUytFLGVBR3RDdEwsS0FBS21GLFNBQVN2RSxRQUFRMkksU0FBUyxpQkFBa0J2SixNQUNqREEsS0FBS21GLFNBQVN2RSxRQUFRMkksU0FBUyxpQkFBa0J2SixPQU9yRCxnQixRQUNlLFFBQWIsRUFBQUEsS0FBS3FHLGdCQUFRLFNBQUV2RSxTQUNmOUIsS0FBS3FHLFNBQVcsS0FDSCxRQUFiLEVBQUFyRyxLQUFLdUcsZ0JBQVEsU0FBRXpFLFNBQ2Y5QixLQUFLdUcsU0FBVyxLQUVoQnZHLEtBQUs4SyxVQUFVWSxXQUFXMUwsS0FBSzJMLGNBTWpDLGVBQ3dCLE9BQWxCM0wsS0FBS3FHLFdBQ1ByRyxLQUFLcUcsU0FBVyxJQUFJLFVBQU1yRyxLQUFLOEssVUFBVS9HLGtCQUN6Qy9ELEtBQUs4SyxVQUFVTyxPQUFPckwsS0FBS3FHLFNBQVNpRixlQUdsQ3RMLEtBQUs0TCx1Q0FDUDVMLEtBQUt1RyxTQUFXLElBQUksVUFBTXZHLEtBQUs4SyxVQUFVL0csa0JBQ3pDL0QsS0FBSzhLLFVBQVVPLE9BQU9yTCxLQUFLdUcsU0FBUytFLGVBR3RDdEwsS0FBSzhLLFVBQVVZLFdBQVcxTCxLQUFLMkwsY0FRekIscUNBQ04sT0FBeUIsT0FBbEIzTCxLQUFLdUcsVUFBdUMsT0FBbEJ2RyxLQUFLbUYsU0FNeEMsZSxRQUNZLFFBQVYsRUFBQW5GLEtBQUt1QyxhQUFLLFNBQUUzQixRQUFRNkssWUFBWSxlQUFnQnpMLE1BQ3RDLFFBQVYsRUFBQUEsS0FBS3VDLGFBQUssU0FBRVQsU0FDWjlCLEtBQUt1QyxNQUFRLEtBRWJ2QyxLQUFLOEssVUFBVVksV0FBVzFMLEtBQUsyTCxjQU1qQyxjLE1BQ3FCLE9BQWYzTCxLQUFLdUMsUUFDRyxRQUFWLEVBQUF2QyxLQUFLdUMsYUFBSyxTQUFFVCxVQUVkOUIsS0FBS3VDLE1BQVEsSUFBSSxVQUFNdkMsS0FBSzhLLFVBQVUvRyxrQkFDdEMvRCxLQUFLOEssVUFBVU8sT0FBT3JMLEtBQUt1QyxNQUFNK0ksY0FDakN0TCxLQUFLdUMsTUFBTTNCLFFBQVEySSxTQUFTLGVBQWdCdkosTUFFNUNBLEtBQUs4SyxVQUFVWSxXQUFXMUwsS0FBSzJMLGNBT2pDLGVBQ0UsT0FBTzNMLEtBQUtrRixTQUFTMkcsVUFRdkIsZ0JBQ0UsT0FBTzdMLEtBQUs4SyxVQUFVZSxVQU94QixlQUNFLE1BQU0zRyxFQUFXbEYsS0FBS2tGLFNBQVM0RyxjQUMvQixJQUFJM0csRUFBNkIsS0FJakMsT0FIc0IsT0FBbEJuRixLQUFLbUYsV0FDUEEsRUFBV25GLEtBQUttRixTQUFTMkcsZUFFcEIsQ0FBRTVHLFdBQVVDLFlBT3JCLGFBQWE0RyxHLE1BQ1gvTCxLQUFLa0YsU0FBUzhHLE9BQU9ELEVBQWdCN0csVUFDSixPQUE3QjZHLEVBQWdCNUcsV0FDTCxRQUFiLEVBQUFuRixLQUFLbUYsZ0JBQVEsU0FBRTZHLE9BQU9ELEVBQWdCNUcsV0FRMUMsa0JBQWtCcUQsR0FDaEJ4SSxLQUFLZ0wsWUFBWXpLLE9BQU9pSSxHQU8xQixhQUFhQSxHQUNXLE9BQWxCeEksS0FBS3FHLFVBQ1ByRyxLQUFLcUcsU0FBUzlGLE9BQU9pSSxFQUFPbkMsVUFFUixPQUFsQnJHLEtBQUt1RyxVQUNQdkcsS0FBS3VHLFNBQVNoRyxPQUFPaUksRUFBT2pDLFVBU2hDLGtCQUFrQnZILEdBQ2hCLE9BQW1CLE9BQWZnQixLQUFLdUMsTUFDQXZDLEtBQUt1QyxNQUFNMEosYUFBYWpOLEdBRTFCLENBQUV5QyxNQUFPLEVBQUdFLE9BQVEsR0FPN0IsZUFBZXVJLEcsTUFDSCxRQUFWLEVBQUFsSyxLQUFLdUMsYUFBSyxTQUFFMkosVUFBVWhDLEdBQ3RCbEssS0FBSzhLLFVBQVVZLFdBQVcxTCxLQUFLMkwsY0FPakMsd0JBQ0UsT0FBTzNMLEtBQUsrSyxNQUFNZSxjQU9wQix3QkFHRSxPQURpQixPQUFmOUwsS0FBS3VDLE1BQWlCLENBQUV6QixLQUFNLEVBQUdDLElBQUssR0FBTWYsS0FBS3VDLE1BQU11SixjQVNuRCxhQUNOLE1BQU1LLEVBQVUsQ0FDZHJMLEtBQU0sRUFDTkMsSUFBSyxFQUNMcUwsTUFBTyxFQUNQQyxPQUFRLEdBR0pDLEVBQWF0TSxLQUFLOEssVUFBVXlCLFVBQzVCQyxFQUE4QixPQUFsQnhNLEtBQUtxRyxTQUFvQnJHLEtBQUtxRyxTQUFTa0csVUFBWSxLQUMvREUsRUFBMkIsT0FBZnpNLEtBQUt1QyxNQUFpQnZDLEtBQUt1QyxNQUFNZ0ssVUFBWSxLQWtCL0QsTUFoQndDLGVBQXBDdk0sS0FBSzhLLFVBQVUvRyxrQkFDQyxPQUFkeUksSUFDRkwsRUFBUXBMLEtBQU91TCxFQUFXdkwsSUFBTXlMLEVBQVV6TCxLQUUxQixPQUFkMEwsSUFDRk4sRUFBUUUsUUFBVUksRUFBVUosT0FBU0MsRUFBV0QsVUFHaEMsT0FBZEcsSUFDRkwsRUFBUXJMLE1BQVF3TCxFQUFXeEwsS0FBTzBMLEVBQVUxTCxNQUU1QixPQUFkMkwsSUFDRk4sRUFBUUMsT0FBU0ssRUFBVUwsTUFBUUUsRUFBV0YsUUFJM0NELEssa0tDaFlYLGdCQUVBLE1BQU1PLFVBQWtCLFVBQ3RCLGNBQ0VDLE1BQU0sVUFPUixPQUFPQyxHQUNMNU0sS0FBS1MsUUFBUTRLLE9BQU91QixHQVF0QixXQUFXVCxHQUNUbk0sS0FBS1MsUUFBUW9NLE1BQU1DLFdBQWdCWCxFQUFRckwsS0FBWCxLQUNoQ2QsS0FBS1MsUUFBUW9NLE1BQU1FLFVBQWVaLEVBQVFwTCxJQUFYLEtBQy9CZixLQUFLUyxRQUFRb00sTUFBTUcsWUFBaUJiLEVBQVFDLE1BQVgsS0FDakNwTSxLQUFLUyxRQUFRb00sTUFBTUksYUFBa0JkLEVBQVFFLE9BQVgsS0FNcEMsZUFDRXJNLEtBQUtTLFFBQVFvTSxNQUFNSyxPQUFTLEtBSWhDLFVBQWVSLEcsa0tDcENmLGdCQUVBLE1BQU1TLFVBQWMsVUFDbEIsY0FDRVIsTUFBTSxpQkFDTjNNLEtBQUt3RSxPQU1DLE9BQ054RSxLQUFLUyxRQUFRMEssaUJBQWlCLFFBQVNuTCxLQUFLb04sYUFBYTdOLEtBQUtTLE9BT3hELGFBQWFxTixHQUNuQnJOLEtBQUtzTixZQUFZLENBQUV4TSxLQUFNdU0sRUFBTUUsUUFBU3hNLElBQUtzTSxFQUFNRyxVQUNuRHhOLEtBQUtZLFFBQVFnRSxPQUFPLGlCQUl4QixVQUFldUksRyxrS0NyQmYsZ0JBRUEsTUFBTU0sVUFBYyxVQUtsQixZQUFZak4sR0FDVm1NLE1BQU0sZ0JBQWlCbk0sR0FMakIsS0FBQXJELE1BQVEsQ0FBRXVRLE9BQVEsRUFBR0MsT0FBUSxHQUM3QixLQUFBQyxtQkFBcUI1TixLQUFLNk4sS0FBS3RPLEtBQUtTLE1BQ3BDLEtBQUE4TixpQkFBbUI5TixLQUFLK04sUUFBUXhPLEtBQUtTLE1BSzNDQSxLQUFLZ08sNEJBQ0xoTyxLQUFLaU8scUJBT1AsVUFBVTFHLEdBQ1J2SCxLQUFLUyxRQUFRb00sTUFBTXFCLE9BQVMzRyxFQUFNNEcsV0FNNUIscUJBQ05uTyxLQUFLUyxRQUFRMk4sWUFBYyxLQUFNLEVBTTNCLDRCQUNOcE8sS0FBS1MsUUFBUTBLLGlCQUFpQixjQUFlbkwsS0FBS3FPLGFBQWE5TyxLQUFLUyxPQU85RCxhQUFhcU4sR0FDbkJJLEVBQU1hLG1CQUVOLE1BQU1DLEVBQXVCdk8sS0FBS1MsUUFBUWUsd0JBQzFDeEIsS0FBS3dPLGNBQ0gsQ0FBRTFOLEtBQU11TSxFQUFNRSxRQUFTeE0sSUFBS3NNLEVBQU1HLFNBQ2xDLENBQUUxTSxLQUFNeU4sRUFBWXpOLEtBQU1DLElBQUt3TixFQUFZeE4sTUFHN0NMLFNBQVN5SyxpQkFBaUIsY0FBZW5MLEtBQUs0TixvQkFDOUNsTixTQUFTeUssaUJBQWlCLFlBQWFuTCxLQUFLOE4sa0JBRTVDOU4sS0FBS1ksUUFBUWdFLE9BQU8sa0JBQ3BCNUUsS0FBS3lPLGlCQVFDLGNBQWNDLEVBQXNCQyxHQUMxQzNPLEtBQUs3QyxNQUFNdVEsT0FBU2dCLEVBQVU1TixLQUFPNk4sRUFBUzdOLEtBQzlDZCxLQUFLN0MsTUFBTXdRLE9BQVNlLEVBQVUzTixJQUFNNE4sRUFBUzVOLElBTXZDLGlCQUNOLE1BQU1tTixFQUFTbE8sS0FBSzRPLFNBQVMsV0FDN0I1TyxLQUFLUyxRQUFRb00sTUFBTXFCLFFBQVVXLFNBQVNYLEdBQVUsSUFBSyxJQUFNLEdBQUdDLFdBTWhFLGNBQ0VuTyxLQUFLUyxRQUFRb00sTUFBTXFCLE9BQVMsR0FNdEIsS0FBS2IsR0FDWHJOLEtBQUtzTixZQUFZLENBQ2Z4TSxLQUFNdU0sRUFBTUUsUUFDWnhNLElBQUtzTSxFQUFNRyxVQUdieE4sS0FBS1ksUUFBUWdFLE9BQU8sa0JBUVosWUFBWXpELEdBQ3BCd0wsTUFBTVcsWUFBWW5NLEdBQ2xCbkIsS0FBS2EsYUFBYUMsTUFBUWQsS0FBSzdDLE1BQU11USxPQUNyQzFOLEtBQUthLGFBQWFFLEtBQU9mLEtBQUs3QyxNQUFNd1EsT0FNOUIsVUFDTkYsRUFBTXFCLGtCQUVOcE8sU0FBU3FPLG9CQUFvQixjQUFlL08sS0FBSzROLG9CQUNqRGxOLFNBQVNxTyxvQkFBb0IsWUFBYS9PLEtBQUs4TixrQkFPakQsT0FBTzdILEdBQ0xqRyxLQUFLYSxhQUFlb0YsRUFDcEJqRyxLQUFLUyxRQUFRb00sTUFBTS9MLEtBQVVtRixFQUFTbkYsS0FBWixLQUMxQmQsS0FBS1MsUUFBUW9NLE1BQU05TCxJQUFTa0YsRUFBU2xGLElBQVosS0FNbkIsMEJBQ05MLFNBQVNzTyxjQUFnQixLQUFNLEVBQy9CdE8sU0FBU3VPLGNBQWdCLEtBQU0sRUFNekIseUJBQ052TyxTQUFTc08sY0FBZ0IsS0FDekJ0TyxTQUFTdU8sY0FBZ0IsTUFJN0IsVUFBZXhCLEcsa0tDaEpmLGdCQUVBLE1BQU15QixVQUFjLFVBQ2xCLFlBQVkxTyxHQUNWbU0sTUFBTSxpQkFBa0JuTSxHQU8xQixPQUFPZ0ksR0FDTHhJLEtBQUttUCxZQUFZM0csRUFBT3hKLE9BQ3hCZ0IsS0FBS29QLGVBQWU1RyxFQUFPdkMsVUFPckIsWUFBWWpILEdBQ2xCZ0IsS0FBS1MsUUFBUTRPLFVBQVksR0FBR3JRLEVBT3RCLGVBQWVpSCxHQUNyQmpHLEtBQUtTLFFBQVFvTSxNQUFNL0wsS0FBVW1GLEVBQVNuRixLQUFaLEtBQzFCZCxLQUFLUyxRQUFRb00sTUFBTTlMLElBQVNrRixFQUFTbEYsSUFBWixNQUk3QixVQUFlbU8sRyxrS0NsQ2YsZ0JBRUEsTUFBTUksVUFBb0IsVUFDeEIsY0FDRTNDLE1BQU0sd0JBT1IsT0FBT25FLEdBQ0x4SSxLQUFLUyxRQUFRb00sTUFBTS9MLEtBQVUwSCxFQUFPdkMsU0FBU25GLEtBQW5CLEtBQzFCZCxLQUFLUyxRQUFRb00sTUFBTTlMLElBQVN5SCxFQUFPdkMsU0FBU2xGLElBQW5CLEtBQ3pCZixLQUFLUyxRQUFRb00sTUFBTXBMLE1BQVcrRyxFQUFPOUMsS0FBS2pFLE1BQWYsS0FDM0J6QixLQUFLUyxRQUFRb00sTUFBTWxMLE9BQVk2RyxFQUFPOUMsS0FBSy9ELE9BQWYsTUFJaEMsVUFBZTJOLEcsa0tDbEJmLGdCQUVBLE1BQU1DLFVBQWMsVUFDbEIsWUFBWS9PLEdBQ1ZtTSxNQUFNLGdCQUFpQm5NLEdBQ3ZCUixLQUFLd0UsT0FNQyxPQUNOeEUsS0FBS1MsUUFBUTBLLGlCQUFpQixRQUFTbkwsS0FBS3dQLGFBQWFqUSxLQUFLUyxPQU94RCxhQUFhcU4sR0FDbkJyTixLQUFLc04sWUFBWSxDQUFFeE0sS0FBTXVNLEVBQU1FLFFBQVN4TSxJQUFLc00sRUFBTUcsVUFDbkR4TixLQUFLWSxRQUFRZ0UsT0FBTyxnQkFRdEIsYUFBYTVGLEdBQ1hnQixLQUFLeVAsU0FBUyxDQUNaeEosU0FBVSxDQUFFbkYsS0FBTSxFQUFHQyxJQUFLLEdBQzFCMkUsS0FBTSxDQUFFakUsTUFBTyxFQUFHRSxPQUFRLEdBQzFCM0MsVUFHRixNQUFNc0osRUFBWSxDQUFFN0csTUFBTyxFQUFHRSxPQUFRLEdBQ2hDK04sRUFBb0MxUCxLQUFLUyxRQUFRa1AsY0FDckQsd0JBT0YsT0FKQXJILEVBQVU3RyxPQUFRaU8sYUFBVSxFQUFWQSxFQUFZaE8sY0FBZSxFQUM3QzRHLEVBQVUzRyxRQUFTK04sYUFBVSxFQUFWQSxFQUFZOU4sZUFBZ0IsRUFDL0M4TixXQUFZNU4sU0FFTHdHLEVBT1QsVUFBVTRCLEdBQ1IsSUFBSyxJQUFJMEYsRUFBUSxFQUFHQSxFQUFRMUYsRUFBT3hOLE9BQVFrVCxHQUFTLEVBQ2xENVAsS0FBS3lQLFNBQVN2RixFQUFPMEYsSUFRakIsU0FBU0EsR0FDZixNQUFNcFAsRUFBY1IsS0FBSytELGlCQUNuQjJMLEVBQTBCaFAsU0FBU0MsY0FBYyxPQUN2RCtPLEVBQVd6TyxVQUFVQyxJQUNuQixzQkFDQSx1QkFBdUJWLEdBRXJCb1AsRUFBTWxLLEtBQUtqRSxNQUFRLElBQ3JCaU8sRUFBVzdDLE1BQU1wTCxNQUFXbU8sRUFBTWxLLEtBQUtqRSxNQUFkLE1BR1AsZUFBaEJqQixFQUNGUixLQUFLUyxRQUFRb00sTUFBTWxMLE9BQVlpTyxFQUFNbEssS0FBSy9ELE9BQWQsS0FFNUIzQixLQUFLUyxRQUFRb00sTUFBTXBMLE1BQVdtTyxFQUFNbEssS0FBS2pFLE1BQWQsS0FHN0IsTUFBTW9PLEVBQThCblAsU0FBU0MsY0FBYyxPQUMzRGtQLEVBQWU1TyxVQUFVQyxJQUFJLDhCQUU3QixNQUFNNE8sRUFBNkJwUCxTQUFTQyxjQUFjLE9BQzFEbVAsRUFBYzdPLFVBQVVDLElBQ3RCLDRCQUNBLDZCQUE2QlYsR0FFL0JzUCxFQUFjQyxVQUFZSCxFQUFNNVEsTUFBTW1QLFdBRXRDdUIsRUFBVzdDLE1BQU0vTCxLQUFVOE8sRUFBTTNKLFNBQVNuRixLQUFsQixLQUN4QjRPLEVBQVc3QyxNQUFNOUwsSUFBUzZPLEVBQU0zSixTQUFTbEYsSUFBbEIsS0FFdkIyTyxFQUFXckUsT0FBT3dFLEdBQ2xCSCxFQUFXckUsT0FBT3lFLEdBQ2xCOVAsS0FBS1MsUUFBUTRLLE9BQU9xRSxJQUl4QixVQUFlSCxHLCtLQy9GZixpQkFDQSxXQUNBLFdBRUEsQ0FBRW5OLElBQ0EsTUFBTVksRUFBZSxDQUNuQixPQUNFLE9BQU9oRCxLQUFLb0QsTUFBSyxXQUNmLE1BQU1FLEVBQU8sSUFBSSxVQUFpQnRELE1BQzVCcUQsRUFBUSxJQUFJLFVBQWtCakIsRUFBRXBDLE9BQ25CLElBQUksVUFBdUJzRCxFQUFNRCxRQUsxRGpCLEVBQUU4QixHQUFHOEwsYUFBZSxTQUFVNUwsRUFBaUJDLEdBQzdDLElBQUlDLEVBV0osTUFUc0IsaUJBQVhGLEdBQXVCcEIsRUFBUW9CLEdBQ3hDRSxFQUFTdEIsRUFBUW9CLEdBQVF0SCxLQUFLa0QsS0FBTXFFLEdBQ1QsaUJBQVhELEdBQXdCQSxHQUd4Q2hDLEVBQUVtQyxNQUFNLGtCQUFrQkgsMkNBQzFCRSxFQUFTdEUsTUFIVHNFLEVBQVN0QixFQUFRd0IsS0FBSzFILEtBQUtrRCxLQUFNcUUsR0FNNUJDLElBdkJYLENBeUJHRyxLLG1MQ2hDSCxpQkFDQSxXQUNBLFdBQ0EsV0FDQSxXQUVBLFVBRUEsTUFBTXdMLFVBQXlCLFVBYTdCLFlBQVlwRixHQUNWOEIsUUFDQTNNLEtBQUs4SyxVQUFZLElBQUksVUFDckI5SyxLQUFLNkssY0FBZ0JBLEVBQ3JCN0ssS0FBSzRDLGNBQWdCLElBQUksVUFBVSxxQkFDbkM1QyxLQUFLNkMsY0FBZ0IsSUFBSSxVQUFVLHNCQUNuQzdDLEtBQUt5QyxJQUFNLElBQUksVUFBVSxhQUN6QnpDLEtBQUswQyxJQUFNLElBQUksVUFBVSxhQUN6QjFDLEtBQUsyQyxLQUFPLElBQUksVUFBVSxRQUMxQjNDLEtBQUtrUSxVQUFZLElBQUksVUFDbkIsT0FDQSxDQUFFQyxNQUFPLFNBQVVuUixNQUFPLFVBQzFCLENBQUVtUixNQUFPLFFBQVNuUixNQUFPLFVBRTNCZ0IsS0FBS29RLGlCQUFtQixJQUFJLFVBQzFCLGNBQ0EsQ0FBRUQsTUFBTyxhQUFjblIsTUFBTyxjQUM5QixDQUFFbVIsTUFBTyxXQUFZblIsTUFBTyxhQUU5QmdCLEtBQUtxUSxjQUFnQixJQUFJLFVBQVMsQ0FDaENGLE1BQU8sUUFDUDVSLEtBQU0sUUFDTlMsTUFBTyxVQUVUZ0IsS0FBS3NRLGVBQWlCLElBQUksVUFBUyxDQUNqQ0gsTUFBTyxVQUNQNVIsS0FBTSxTQUNOUyxNQUFPLFdBR1RnQixLQUFLMkksb0JBQ0wzSSxLQUFLdVEsY0FHQyxjQUNOdlEsS0FBSzhLLFVBQVVPLE9BQ2IsVUFBYyxDQUNabUYsYUFBYyxtQ0FDZEMsU0FBVSxDQUNSelEsS0FBSzRDLGNBQWM4TixhQUNuQjFRLEtBQUs2QyxjQUFjNk4saUJBS3pCMVEsS0FBSzhLLFVBQVVPLE9BQ2IsVUFBYyxDQUNabUYsYUFBYyxtQ0FDZEMsU0FBVSxDQUNSelEsS0FBS3lDLElBQUlpTyxhQUNUMVEsS0FBSzBDLElBQUlnTyxhQUNUMVEsS0FBSzJDLEtBQUsrTixpQkFLaEIsTUFBTUMsRUFBaUIsVUFBYyxDQUNuQ0MsT0FBUSxPQUNSSixhQUFjLEdBQ2RDLFNBQVUsQ0FBQ3pRLEtBQUtrUSxVQUFVUSxnQkFHdEJHLEVBQXdCLFVBQWMsQ0FDMUNELE9BQVEsY0FDUkosYUFBYyxHQUNkQyxTQUFVLENBQUN6USxLQUFLb1EsaUJBQWlCTSxnQkFHN0JJLEVBQWlCLFVBQWMsQ0FDbkNOLGFBQWMsR0FDZEMsU0FBVSxDQUFDRSxFQUFnQkUsS0FHdkJFLEVBQWtCLFVBQWMsQ0FDcENILE9BQVEsa0JBQ1JKLGFBQWMsR0FDZEMsU0FBVSxDQUNSelEsS0FBS3FRLGNBQWNLLGFBQ25CMVEsS0FBS3NRLGVBQWVJLGdCQUl4QjFRLEtBQUs4SyxVQUFVTyxPQUNiLFVBQWMsQ0FDWm1GLGFBQWMsK0NBQ2RDLFNBQVUsQ0FBQ0ssRUFBZ0JDLE1BSS9CL1EsS0FBSzZLLGNBQWNRLE9BQU9yTCxLQUFLOEssVUFBVVEsY0FHbkMsb0JBQ050TCxLQUFLNEMsY0FBYzJHLFNBQVMsMEJBQTJCdkosTUFDdkRBLEtBQUs2QyxjQUFjMEcsU0FBUywwQkFBMkJ2SixNQUN2REEsS0FBS3lDLElBQUk4RyxTQUFTLDBCQUEyQnZKLE1BQzdDQSxLQUFLMEMsSUFBSTZHLFNBQVMsMEJBQTJCdkosTUFDN0NBLEtBQUsyQyxLQUFLNEcsU0FBUywwQkFBMkJ2SixNQUM5Q0EsS0FBS2tRLFVBQVUzRyxTQUFTLDBCQUEyQnZKLE1BQ25EQSxLQUFLb1EsaUJBQWlCN0csU0FBUywwQkFBMkJ2SixNQUMxREEsS0FBS3FRLGNBQWM5RyxTQUFTLDBCQUEyQnZKLE1BQ3ZEQSxLQUFLc1EsZUFBZS9HLFNBQVMsMEJBQTJCdkosTUFHMUQsT0FBT0UsR0FDYSw0QkFBZEEsSUFDRkYsS0FBSzRFLE9BQU8sMkJBQ1o1RSxLQUFLZ1IscUJBSUQsb0JBQ3dCLGVBQTFCaFIsS0FBSytELGtCQUNQL0QsS0FBSzhLLFVBQVVsQyxxQkFDZjVJLEtBQUs2SyxjQUFjNUosVUFBVWEsT0FBTywyQkFDcEM5QixLQUFLNkssY0FBYzVKLFVBQVVDLElBQUksK0JBRWpDbEIsS0FBSzhLLFVBQVVqQyxtQkFDZjdJLEtBQUs2SyxjQUFjNUosVUFBVWEsT0FBTyw2QkFDcEM5QixLQUFLNkssY0FBYzVKLFVBQVVDLElBQUksNEJBSXJDLGdCQUFnQitQLEdBQ2RqUixLQUFLNEMsY0FBY3NPLFNBQVNELEVBQWEvTCxVQUN6Q2xGLEtBQUs2QyxjQUFjcU8sU0FBU0QsRUFBYTlMLFVBRzNDLFlBQVluRyxHQUNWZ0IsS0FBS3lDLElBQUl5TyxTQUFTbFMsR0FHcEIsWUFBWUEsR0FDVmdCLEtBQUswQyxJQUFJd08sU0FBU2xTLEdBR3BCLFFBQVFBLEdBQ05nQixLQUFLMkMsS0FBS3VPLFNBQVNsUyxHQUdyQixjQUFjbVMsR0FDWm5SLEtBQUtxUSxjQUFjZSxTQUFTRCxHQUc5QixlQUFlQSxHQUNiblIsS0FBS3NRLGVBQWVjLFNBQVNELEdBRy9CLGFBQWFuUyxHQUNYZ0IsS0FBS2tRLFVBQVVtQixTQUFTclMsR0FHMUIsb0JBQW9CQSxHQUNsQmdCLEtBQUtvUSxpQkFBaUJpQixTQUFTclMsR0FHakMsaUJBQ0UsT0FBT2dCLEtBQUtvUSxpQkFBaUJrQixXQUcvQixVQUNFLE9BQU90UixLQUFLa1EsVUFBVW9CLFdBR3hCLGdCQUNFLE9BQU90UixLQUFLcVEsY0FBY2tCLFdBRzVCLGlCQUNFLE9BQU92UixLQUFLc1EsZUFBZWlCLFdBRzdCLFNBQ0UsT0FBT3ZSLEtBQUt5QyxJQUFJNk8sV0FHbEIsU0FDRSxPQUFPdFIsS0FBSzBDLElBQUk0TyxXQUdsQixVQUNFLE9BQU90UixLQUFLMkMsS0FBSzJPLFdBR25CLG1CQUNFLE9BQU90UixLQUFLNEMsY0FBYzBPLFdBRzVCLG1CQUNFLE9BQU90UixLQUFLNkMsY0FBY3lPLFdBRzVCLGtCQUNFLE1BQU8sQ0FDTHBNLFNBQVVsRixLQUFLNEMsY0FBYzBPLFdBQzdCbk0sU0FBVW5GLEtBQUs2QyxjQUFjeU8sYUFLbkMsVUFBZXJCLEcsOEVDdExmLFVBekNBLE1BR0UsY0FDRWpRLEtBQUtTLFFBQVVDLFNBQVNDLGNBQWMsT0FDdENYLEtBQUtTLFFBQVFRLFVBQVVDLElBQUksaUJBTzdCLGFBQ0UsT0FBT2xCLEtBQUtTLFFBT2QsT0FBT21NLEdBQ0w1TSxLQUFLUyxRQUFRNEssT0FBT3VCLEdBTXRCLHFCQUNFNU0sS0FBS1MsUUFBUVEsVUFBVWEsT0FBTywwQkFDOUI5QixLQUFLUyxRQUFRUSxVQUFVQyxJQUFJLDRCQU03QixtQkFDRWxCLEtBQUtTLFFBQVFRLFVBQVVhLE9BQU8sNEJBQzlCOUIsS0FBS1MsUUFBUVEsVUFBVUMsSUFBSSw2QixrS0NyQy9CLGdCQUVBLE1BQU1zUSxVQUFrQixVQUt0QixZQUFZQyxHQUNWOUUsUUFDQTNNLEtBQUs0TSxRQUFVbE0sU0FBU0MsY0FBYyxPQUN0Q1gsS0FBSzBSLE1BQVFoUixTQUFTQyxjQUFjLFNBQ3BDWCxLQUFLbVEsTUFBUXpQLFNBQVNDLGNBQWMsU0FFcENYLEtBQUt3RSxLQUFLaU4sR0FPWixhQUNFLE9BQU96UixLQUFLNE0sUUFPZCxXQUNFLE9BQU9pQyxTQUFTN08sS0FBSzBSLE1BQU0xUyxNQUFPLElBT3BDLFNBQVNBLEdBQ1BnQixLQUFLMFIsTUFBTTFTLE1BQVEsR0FBR0EsRUFRaEIsS0FBS3lTLEdBQ1h6UixLQUFLNE0sUUFBUTNMLFVBQVVDLElBQUksb0NBRTNCbEIsS0FBSzBSLE1BQU16USxVQUFVQyxJQUFJLDZCQUN6QmxCLEtBQUswUixNQUFNdkcsaUJBQWlCLE9BQVFuTCxLQUFLMlIsY0FBY3BTLEtBQUtTLE9BQzVEQSxLQUFLMFIsTUFBTUUsV0FBYUosRUFBVUssbUJBRWxDN1IsS0FBS21RLE1BQU1sUCxVQUFVQyxJQUFJLGtDQUN6QmxCLEtBQUttUSxNQUFNSixVQUFZMEIsRUFDdkJ6UixLQUFLbVEsTUFBTTlFLE9BQU9yTCxLQUFLMFIsT0FFdkIxUixLQUFLNE0sUUFBUXZCLE9BQU9yTCxLQUFLbVEsT0FNbkIsZ0JBQ05uUSxLQUFLNEUsT0FBTywyQkFPTiwwQkFBMEJ5SSxHQUNoQyxNQUFPLFFBQVF5RSxLQUFLekUsRUFBTS9OLE1BSTlCLFVBQWVrUyxHLDhFQzdDZixVQXRCQSxTQUF1QmhKLEdBQ3JCLE1BQU1vQyxFQUEwQmxLLFNBQVNDLGNBQWMsT0FHdkQsR0FGQWlLLEVBQVFtSCxVQUFZdkosRUFBT2dJLGtCQUVMN0wsSUFBbEI2RCxFQUFPb0ksT0FBc0IsQ0FDL0IsTUFBTUEsRUFBU2xRLFNBQVNDLGNBQWMsU0FDdENpUSxFQUFPM1AsVUFBVUMsSUFBSSxxQ0FDckIwUCxFQUFPYixVQUFZdkgsRUFBT29JLE9BQzFCaEcsRUFBUVMsT0FBT3VGLEdBR2pCLElBQ0UsSUFBSW9CLEVBQWUsRUFDbkJBLEVBQWV4SixFQUFPaUksU0FBUy9ULE9BQy9Cc1YsR0FBZ0IsRUFFaEJwSCxFQUFRUyxPQUFPN0MsRUFBT2lJLFNBQVN1QixJQUdqQyxPQUFPcEgsSSxrS0N6QlQsZ0JBR0EsTUFBTXFILFVBQW9CLFVBSXhCLFlBQVkxVCxLQUFpQmlLLEdBQzNCbUUsUUFDQSxNQUFNdUYsRUFBYUQsRUFBWUUsYUFBYTVULEdBQzVDeUIsS0FBSzRNLFFBQVVsTSxTQUFTQyxjQUFjLE9BQ3RDWCxLQUFLNE0sUUFBUTNMLFVBQVVDLElBQUksOEJBQzNCbEIsS0FBS29TLE9BQVMsR0FFZHBTLEtBQUt3RSxLQUFLME4sRUFBWTFKLEdBR3hCLGFBQ0UsT0FBT3hJLEtBQUs0TSxRQUdkLFdBQ0UsSUFBSyxJQUFJeUYsRUFBUSxFQUFHQSxFQUFRclMsS0FBS29TLE9BQU8xVixPQUFRMlYsR0FBUyxFQUN2RCxHQUFJclMsS0FBS29TLE9BQU9DLEdBQU9DLFFBQ3JCLE9BQU90UyxLQUFLb1MsT0FBT0MsR0FBT3JULE1BRzlCLE1BQU8sR0FHRCxLQUFLVCxFQUFjaUssR0FDekIsSUFBSyxJQUFJNkosRUFBUSxFQUFHQSxFQUFRN0osRUFBTzlMLE9BQVEyVixHQUFTLEVBQUcsQ0FDckQsTUFBTUUsRUFBZTdSLFNBQVNDLGNBQWMsT0FDNUM0UixFQUFhdFIsVUFBVUMsSUFBSSxnQ0FFM0IsTUFBTWlQLEVBQVF6UCxTQUFTQyxjQUFjLFNBQ3JDd1AsRUFBTWxQLFVBQVVDLElBQUksOEJBQ3BCaVAsRUFBTUosVUFBWXZILEVBQU82SixHQUFPbEMsTUFFaEMsTUFBTXFDLEVBQWM5UixTQUFTQyxjQUFjLFNBQzNDNlIsRUFBWWxRLEtBQU8sUUFDbkJrUSxFQUFZalUsS0FBT0EsRUFDbkJpVSxFQUFZeFQsTUFBUXdKLEVBQU82SixHQUFPclQsTUFDOUJpVCxFQUFZUSxzQkFBc0JKLEVBQU83SixFQUFPNkosR0FBT0MsV0FDekRFLEVBQVlGLFNBQVUsR0FFeEJFLEVBQVl2UixVQUFVQyxJQUFJLCtCQUMxQnNSLEVBQVlySCxpQkFBaUIsU0FBVW5MLEtBQUswUyxTQUFTblQsS0FBS1MsT0FDMURBLEtBQUtvUyxPQUFPcFYsS0FBS3dWLEdBRWpCckMsRUFBTTlFLE9BQU9tSCxHQUNiRCxFQUFhbEgsT0FBTzhFLEdBQ3BCblEsS0FBSzRNLFFBQVF2QixPQUFPa0gsSUFJaEIsNkJBQ05oTCxFQUNBK0ssR0FFQSxPQUFpQixJQUFWL0ssR0FBZStLLEVBR2hCLFdBQ04sSUFBSyxJQUFJRCxFQUFRLEVBQUdBLEVBQVFyUyxLQUFLb1MsT0FBTzFWLE9BQVEyVixHQUFTLEVBQUcsQ0FDMUQsTUFBTWxDLEVBQVFuUSxLQUFLb1MsT0FBT0MsR0FBTy9RLGNBRTdCdEIsS0FBS29TLE9BQU9DLEdBQU9DLFFBQ3JCbkMsV0FBT2xQLFVBQVVDLElBQUksc0NBRXJCaVAsV0FBT2xQLFVBQVVhLE9BQU8sc0NBSTVCOUIsS0FBSzRFLE9BQU8sMkJBR2QsU0FBUzVGLEdBQ1AsSUFBSyxJQUFJcVQsRUFBUSxFQUFHQSxFQUFRclMsS0FBS29TLE9BQU8xVixPQUFRMlYsR0FBUyxFQUN2RCxHQUFJclMsS0FBS29TLE9BQU9DLEdBQU9yVCxRQUFVQSxFQUFPLENBQ3RDZ0IsS0FBS29TLE9BQU9DLEdBQU9DLFNBQVUsRUFDN0J0UyxLQUFLMFMsV0FDTCxPQUtFLG9CQUFvQm5VLEdBQzFCLElBQUlvVSxFQUFVLEVBQ1ZULEVBQWEsR0FFakIsS0FBc0IsS0FBZkEsR0FBbUIsQ0FDeEIsTUFBTVUsRUFBVSxHQUFHclUsSUFBT29VLElBQzRCLE9BQWxEalMsU0FBU2lQLGNBQWMsVUFBVWlELFNBQ25DVixFQUFhVSxHQUVmRCxHQUFXLEVBR2IsT0FBT1QsR0FJWCxVQUFlRCxHLGtLQ3pHZixnQkFHQSxNQUFNWSxVQUFpQixVQUtyQixZQUFZckssR0FDVm1FLFFBQ0EzTSxLQUFLNE0sUUFBVWxNLFNBQVNDLGNBQWMsT0FDdENYLEtBQUttUSxNQUFRelAsU0FBU0MsY0FBYyxTQUNwQ1gsS0FBSzhTLFNBQVdwUyxTQUFTQyxjQUFjLFNBRXZDWCxLQUFLd0UsS0FBS2dFLEdBUUosS0FBS0EsR0FDWHhJLEtBQUs0TSxRQUFRM0wsVUFBVUMsSUFBSSxtQ0FFM0JsQixLQUFLbVEsTUFBTWxQLFVBQVVDLElBQUksaUNBQ3pCbEIsS0FBS21RLE1BQU1KLFVBQVl2SCxFQUFPMkgsTUFFOUJuUSxLQUFLOFMsU0FBU3hRLEtBQU8sV0FDckJ0QyxLQUFLOFMsU0FBU3ZVLEtBQU9pSyxFQUFPakssS0FDNUJ5QixLQUFLOFMsU0FBUzlULE1BQVF3SixFQUFPeEosTUFDN0JnQixLQUFLOFMsU0FBUzdSLFVBQVVDLElBQUksMkJBQzVCbEIsS0FBSzhTLFNBQVMzSCxpQkFBaUIsU0FBVW5MLEtBQUswUyxTQUFTblQsS0FBS1MsT0FFNURBLEtBQUttUSxNQUFNOUUsT0FBT3JMLEtBQUs4UyxVQUN2QjlTLEtBQUs0TSxRQUFRdkIsT0FBT3JMLEtBQUttUSxPQU8zQixhQUNFLE9BQU9uUSxLQUFLNE0sUUFPTixXQUNGNU0sS0FBSzhTLFNBQVNSLFFBQ2hCdFMsS0FBS21RLE1BQU1sUCxVQUFVQyxJQUFJLHlDQUV6QmxCLEtBQUttUSxNQUFNbFAsVUFBVWEsT0FBTyx5Q0FHOUI5QixLQUFLNEUsT0FBTywyQkFPZCxTQUFTdU0sR0FDUG5SLEtBQUs4UyxTQUFTUixRQUFVbkIsRUFDeEJuUixLQUFLMFMsV0FPUCxXQUNFLE9BQU8xUyxLQUFLOFMsU0FBU1IsU0FJekIsVUFBZU8sRyxrS0N4RWYsZ0JBRUEsTUFBTUUsVUFBMEIsVUFJOUIsWUFBWUMsR0FDVnJHLFFBQ0EzTSxLQUFLZ1QsT0FBU0EsRUFDZGhULEtBQUtZLFFBQVVvUyxFQUFPN08sYUFBYSxtQkFDbkNuRSxLQUFLWSxRQUFRMkksU0FBUyxxQkFBc0J2SixNQUc5QyxPQUFPRSxHQUNhLHVCQUFkQSxHQUNGRixLQUFLNEUsT0FBTyxzQkFJaEIsa0JBQ0UsT0FBTzVFLEtBQUtnVCxPQUFPN08sYUFBYSxtQkFHbEMsU0FDRSxPQUFPbkUsS0FBS2dULE9BQU83TyxhQUFhLFVBR2xDLFNBQ0UsT0FBT25FLEtBQUtnVCxPQUFPN08sYUFBYSxVQUdsQyxVQUNFLE9BQU9uRSxLQUFLZ1QsT0FBTzdPLGFBQWEsV0FHbEMsZ0JBQ0UsT0FBT25FLEtBQUtnVCxPQUFPN08sYUFBYSxpQkFHbEMsaUJBQ0UsT0FBT25FLEtBQUtnVCxPQUFPN08sYUFBYSxrQkFHbEMsVUFDRSxPQUFPbkUsS0FBS2dULE9BQU83TyxhQUFhLFdBR2xDLGlCQUNFLE9BQU9uRSxLQUFLZ1QsT0FBTzdPLGFBQWEsa0JBR2xDLG1CQUFtQkgsR0FDakJoRSxLQUFLZ1QsT0FBTzdPLGFBQWEscUJBQXNCSCxJQUluRCxVQUFlK08sRyw4RUNFZixVQTVEQSxNQUlFLFlBQVl6UCxFQUF3QkQsR0FDbENyRCxLQUFLc0QsS0FBT0EsRUFDWnRELEtBQUtxRCxNQUFRQSxFQUNickQsS0FBS3dFLE9BRUx4RSxLQUFLMkksb0JBTUMsb0JBQ04zSSxLQUFLcUQsTUFBTWtHLFNBQVMscUJBQXNCdkosTUFDMUNBLEtBQUtzRCxLQUFLaUcsU0FBUywwQkFBMkJ2SixNQU1oRCxPQUNFQSxLQUFLc0QsS0FBSzJCLGdCQUFnQmpGLEtBQUtxRCxNQUFNRyxtQkFDckN4RCxLQUFLc0QsS0FBSzJQLFlBQVlqVCxLQUFLcUQsTUFBTUksVUFDakN6RCxLQUFLc0QsS0FBSzRQLFlBQVlsVCxLQUFLcUQsTUFBTUssVUFDakMxRCxLQUFLc0QsS0FBSzZQLFFBQVFuVCxLQUFLcUQsTUFBTU0sV0FDN0IzRCxLQUFLc0QsS0FBSzhQLGNBQWNwVCxLQUFLcUQsTUFBTU8saUJBQ25DNUQsS0FBS3NELEtBQUsrUCxlQUFlclQsS0FBS3FELE1BQU1RLGtCQUNwQzdELEtBQUtzRCxLQUFLZ1EsYUFBYXRULEtBQUtxRCxNQUFNUyxXQUNsQzlELEtBQUtzRCxLQUFLaVEsb0JBQW9CdlQsS0FBS3FELE1BQU1VLGtCQU8zQyxPQUFPN0QsR0FLTCxHQUprQix1QkFBZEEsR0FDRkYsS0FBS3NELEtBQUsyQixnQkFBZ0JqRixLQUFLcUQsTUFBTUcsbUJBR3JCLDRCQUFkdEQsRUFBeUMsQ0FDM0MsTUFBTThELEVBQWlCLENBQ3JCeEQsWUFBYVIsS0FBS3NELEtBQUtTLGlCQUN2QnpCLEtBQU10QyxLQUFLc0QsS0FBS1EsVUFDaEJ2QixNQUFPdkMsS0FBS3NELEtBQUtNLGdCQUNqQnBCLE9BQVF4QyxLQUFLc0QsS0FBS08saUJBQ2xCcEIsSUFBS3pDLEtBQUtzRCxLQUFLRyxTQUNmZixJQUFLMUMsS0FBS3NELEtBQUtJLFNBQ2ZmLEtBQU0zQyxLQUFLc0QsS0FBS0ssVUFDaEJmLGNBQWU1QyxLQUFLc0QsS0FBS2tRLG1CQUN6QjNRLGNBQWU3QyxLQUFLc0QsS0FBS21RLG9CQUUzQnpULEtBQUtxRCxNQUFNWSxtQkFBbUJELE8sMENDM0RwQyxNQUFNMFAsRUFBa0JoVCxTQUFTaVAsY0FBYyx1QkFDL0MsSUFBSWdFLEVBQVlqVCxTQUFTaVAsY0FBYyxlQUN2QyxNQUFNaUUsRUFBZ0JsVCxTQUFTaVAsY0FBYyxtQkFFN0MsU0FBU2tFLEVBQWFoSixHQUNwQkEsRUFBYy9JLFNBQzhDLElBQXhEcEIsU0FBU29ULGlCQUFpQixtQkFBbUJwWCxTQUMvQ2dYLFdBQWlCelMsVUFBVUMsSUFBSSxrQ0FnQ25Dd1MsV0FBaUJ2SSxpQkFBaUIsU0E1QmxDLFdBQ0UsR0FBc0IsT0FBbEJ5SSxFQUF3QixDQUMxQkQsV0FBVzdSLFNBQ1g2UixFQUFZLEtBRVpELFdBQWlCelMsVUFBVWEsT0FBTyxpQ0FFbEMsTUFBTStJLEVBQWdCbkssU0FBU0MsY0FBYyxPQUM3Q2tLLEVBQWM1SixVQUFVQyxJQUFJLGtCQUM1QjBTLEVBQWNHLE9BQU9sSixHQUVyQixNQUFNbUosRUFBT3RULFNBQVNDLGNBQWMsUUFDcENxVCxFQUFLL1MsVUFBVUMsSUFBSSxpQkFBa0IsOEJBQ3JDOFMsRUFBS2pFLFVBQVksUUFFakIsTUFBTWtFLEVBQXFCdlQsU0FBU0MsY0FBYyxVQUNsRHNULEVBQW1CaFQsVUFBVUMsSUFBSSx3QkFDakMrUyxFQUFtQjVJLE9BQU8ySSxHQUMxQkMsRUFBbUI5SSxpQkFDakIsUUFDQTBJLEVBQWF0VSxLQUFLMFUsRUFBb0JwSixJQUV4Q0EsRUFBY1EsT0FBTzRJLEdBRXJCN1IsRUFBRXlJLEdBQWUxRyxlQUFlNkwscUIiLCJmaWxlIjoibWFpbi5iYjZjNDYyOTE0OTEyNTlkNDM1Ny5qcyIsInNvdXJjZXNDb250ZW50IjpbIiBcdC8vIGluc3RhbGwgYSBKU09OUCBjYWxsYmFjayBmb3IgY2h1bmsgbG9hZGluZ1xuIFx0ZnVuY3Rpb24gd2VicGFja0pzb25wQ2FsbGJhY2soZGF0YSkge1xuIFx0XHR2YXIgY2h1bmtJZHMgPSBkYXRhWzBdO1xuIFx0XHR2YXIgbW9yZU1vZHVsZXMgPSBkYXRhWzFdO1xuIFx0XHR2YXIgZXhlY3V0ZU1vZHVsZXMgPSBkYXRhWzJdO1xuXG4gXHRcdC8vIGFkZCBcIm1vcmVNb2R1bGVzXCIgdG8gdGhlIG1vZHVsZXMgb2JqZWN0LFxuIFx0XHQvLyB0aGVuIGZsYWcgYWxsIFwiY2h1bmtJZHNcIiBhcyBsb2FkZWQgYW5kIGZpcmUgY2FsbGJhY2tcbiBcdFx0dmFyIG1vZHVsZUlkLCBjaHVua0lkLCBpID0gMCwgcmVzb2x2ZXMgPSBbXTtcbiBcdFx0Zm9yKDtpIDwgY2h1bmtJZHMubGVuZ3RoOyBpKyspIHtcbiBcdFx0XHRjaHVua0lkID0gY2h1bmtJZHNbaV07XG4gXHRcdFx0aWYoT2JqZWN0LnByb3RvdHlwZS5oYXNPd25Qcm9wZXJ0eS5jYWxsKGluc3RhbGxlZENodW5rcywgY2h1bmtJZCkgJiYgaW5zdGFsbGVkQ2h1bmtzW2NodW5rSWRdKSB7XG4gXHRcdFx0XHRyZXNvbHZlcy5wdXNoKGluc3RhbGxlZENodW5rc1tjaHVua0lkXVswXSk7XG4gXHRcdFx0fVxuIFx0XHRcdGluc3RhbGxlZENodW5rc1tjaHVua0lkXSA9IDA7XG4gXHRcdH1cbiBcdFx0Zm9yKG1vZHVsZUlkIGluIG1vcmVNb2R1bGVzKSB7XG4gXHRcdFx0aWYoT2JqZWN0LnByb3RvdHlwZS5oYXNPd25Qcm9wZXJ0eS5jYWxsKG1vcmVNb2R1bGVzLCBtb2R1bGVJZCkpIHtcbiBcdFx0XHRcdG1vZHVsZXNbbW9kdWxlSWRdID0gbW9yZU1vZHVsZXNbbW9kdWxlSWRdO1xuIFx0XHRcdH1cbiBcdFx0fVxuIFx0XHRpZihwYXJlbnRKc29ucEZ1bmN0aW9uKSBwYXJlbnRKc29ucEZ1bmN0aW9uKGRhdGEpO1xuXG4gXHRcdHdoaWxlKHJlc29sdmVzLmxlbmd0aCkge1xuIFx0XHRcdHJlc29sdmVzLnNoaWZ0KCkoKTtcbiBcdFx0fVxuXG4gXHRcdC8vIGFkZCBlbnRyeSBtb2R1bGVzIGZyb20gbG9hZGVkIGNodW5rIHRvIGRlZmVycmVkIGxpc3RcbiBcdFx0ZGVmZXJyZWRNb2R1bGVzLnB1c2guYXBwbHkoZGVmZXJyZWRNb2R1bGVzLCBleGVjdXRlTW9kdWxlcyB8fCBbXSk7XG5cbiBcdFx0Ly8gcnVuIGRlZmVycmVkIG1vZHVsZXMgd2hlbiBhbGwgY2h1bmtzIHJlYWR5XG4gXHRcdHJldHVybiBjaGVja0RlZmVycmVkTW9kdWxlcygpO1xuIFx0fTtcbiBcdGZ1bmN0aW9uIGNoZWNrRGVmZXJyZWRNb2R1bGVzKCkge1xuIFx0XHR2YXIgcmVzdWx0O1xuIFx0XHRmb3IodmFyIGkgPSAwOyBpIDwgZGVmZXJyZWRNb2R1bGVzLmxlbmd0aDsgaSsrKSB7XG4gXHRcdFx0dmFyIGRlZmVycmVkTW9kdWxlID0gZGVmZXJyZWRNb2R1bGVzW2ldO1xuIFx0XHRcdHZhciBmdWxmaWxsZWQgPSB0cnVlO1xuIFx0XHRcdGZvcih2YXIgaiA9IDE7IGogPCBkZWZlcnJlZE1vZHVsZS5sZW5ndGg7IGorKykge1xuIFx0XHRcdFx0dmFyIGRlcElkID0gZGVmZXJyZWRNb2R1bGVbal07XG4gXHRcdFx0XHRpZihpbnN0YWxsZWRDaHVua3NbZGVwSWRdICE9PSAwKSBmdWxmaWxsZWQgPSBmYWxzZTtcbiBcdFx0XHR9XG4gXHRcdFx0aWYoZnVsZmlsbGVkKSB7XG4gXHRcdFx0XHRkZWZlcnJlZE1vZHVsZXMuc3BsaWNlKGktLSwgMSk7XG4gXHRcdFx0XHRyZXN1bHQgPSBfX3dlYnBhY2tfcmVxdWlyZV9fKF9fd2VicGFja19yZXF1aXJlX18ucyA9IGRlZmVycmVkTW9kdWxlWzBdKTtcbiBcdFx0XHR9XG4gXHRcdH1cblxuIFx0XHRyZXR1cm4gcmVzdWx0O1xuIFx0fVxuXG4gXHQvLyBUaGUgbW9kdWxlIGNhY2hlXG4gXHR2YXIgaW5zdGFsbGVkTW9kdWxlcyA9IHt9O1xuXG4gXHQvLyBvYmplY3QgdG8gc3RvcmUgbG9hZGVkIGFuZCBsb2FkaW5nIGNodW5rc1xuIFx0Ly8gdW5kZWZpbmVkID0gY2h1bmsgbm90IGxvYWRlZCwgbnVsbCA9IGNodW5rIHByZWxvYWRlZC9wcmVmZXRjaGVkXG4gXHQvLyBQcm9taXNlID0gY2h1bmsgbG9hZGluZywgMCA9IGNodW5rIGxvYWRlZFxuIFx0dmFyIGluc3RhbGxlZENodW5rcyA9IHtcbiBcdFx0MDogMFxuIFx0fTtcblxuIFx0dmFyIGRlZmVycmVkTW9kdWxlcyA9IFtdO1xuXG4gXHQvLyBUaGUgcmVxdWlyZSBmdW5jdGlvblxuIFx0ZnVuY3Rpb24gX193ZWJwYWNrX3JlcXVpcmVfXyhtb2R1bGVJZCkge1xuXG4gXHRcdC8vIENoZWNrIGlmIG1vZHVsZSBpcyBpbiBjYWNoZVxuIFx0XHRpZihpbnN0YWxsZWRNb2R1bGVzW21vZHVsZUlkXSkge1xuIFx0XHRcdHJldHVybiBpbnN0YWxsZWRNb2R1bGVzW21vZHVsZUlkXS5leHBvcnRzO1xuIFx0XHR9XG4gXHRcdC8vIENyZWF0ZSBhIG5ldyBtb2R1bGUgKGFuZCBwdXQgaXQgaW50byB0aGUgY2FjaGUpXG4gXHRcdHZhciBtb2R1bGUgPSBpbnN0YWxsZWRNb2R1bGVzW21vZHVsZUlkXSA9IHtcbiBcdFx0XHRpOiBtb2R1bGVJZCxcbiBcdFx0XHRsOiBmYWxzZSxcbiBcdFx0XHRleHBvcnRzOiB7fVxuIFx0XHR9O1xuXG4gXHRcdC8vIEV4ZWN1dGUgdGhlIG1vZHVsZSBmdW5jdGlvblxuIFx0XHRtb2R1bGVzW21vZHVsZUlkXS5jYWxsKG1vZHVsZS5leHBvcnRzLCBtb2R1bGUsIG1vZHVsZS5leHBvcnRzLCBfX3dlYnBhY2tfcmVxdWlyZV9fKTtcblxuIFx0XHQvLyBGbGFnIHRoZSBtb2R1bGUgYXMgbG9hZGVkXG4gXHRcdG1vZHVsZS5sID0gdHJ1ZTtcblxuIFx0XHQvLyBSZXR1cm4gdGhlIGV4cG9ydHMgb2YgdGhlIG1vZHVsZVxuIFx0XHRyZXR1cm4gbW9kdWxlLmV4cG9ydHM7XG4gXHR9XG5cblxuIFx0Ly8gZXhwb3NlIHRoZSBtb2R1bGVzIG9iamVjdCAoX193ZWJwYWNrX21vZHVsZXNfXylcbiBcdF9fd2VicGFja19yZXF1aXJlX18ubSA9IG1vZHVsZXM7XG5cbiBcdC8vIGV4cG9zZSB0aGUgbW9kdWxlIGNhY2hlXG4gXHRfX3dlYnBhY2tfcmVxdWlyZV9fLmMgPSBpbnN0YWxsZWRNb2R1bGVzO1xuXG4gXHQvLyBkZWZpbmUgZ2V0dGVyIGZ1bmN0aW9uIGZvciBoYXJtb255IGV4cG9ydHNcbiBcdF9fd2VicGFja19yZXF1aXJlX18uZCA9IGZ1bmN0aW9uKGV4cG9ydHMsIG5hbWUsIGdldHRlcikge1xuIFx0XHRpZighX193ZWJwYWNrX3JlcXVpcmVfXy5vKGV4cG9ydHMsIG5hbWUpKSB7XG4gXHRcdFx0T2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIG5hbWUsIHsgZW51bWVyYWJsZTogdHJ1ZSwgZ2V0OiBnZXR0ZXIgfSk7XG4gXHRcdH1cbiBcdH07XG5cbiBcdC8vIGRlZmluZSBfX2VzTW9kdWxlIG9uIGV4cG9ydHNcbiBcdF9fd2VicGFja19yZXF1aXJlX18uciA9IGZ1bmN0aW9uKGV4cG9ydHMpIHtcbiBcdFx0aWYodHlwZW9mIFN5bWJvbCAhPT0gJ3VuZGVmaW5lZCcgJiYgU3ltYm9sLnRvU3RyaW5nVGFnKSB7XG4gXHRcdFx0T2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIFN5bWJvbC50b1N0cmluZ1RhZywgeyB2YWx1ZTogJ01vZHVsZScgfSk7XG4gXHRcdH1cbiBcdFx0T2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsICdfX2VzTW9kdWxlJywgeyB2YWx1ZTogdHJ1ZSB9KTtcbiBcdH07XG5cbiBcdC8vIGNyZWF0ZSBhIGZha2UgbmFtZXNwYWNlIG9iamVjdFxuIFx0Ly8gbW9kZSAmIDE6IHZhbHVlIGlzIGEgbW9kdWxlIGlkLCByZXF1aXJlIGl0XG4gXHQvLyBtb2RlICYgMjogbWVyZ2UgYWxsIHByb3BlcnRpZXMgb2YgdmFsdWUgaW50byB0aGUgbnNcbiBcdC8vIG1vZGUgJiA0OiByZXR1cm4gdmFsdWUgd2hlbiBhbHJlYWR5IG5zIG9iamVjdFxuIFx0Ly8gbW9kZSAmIDh8MTogYmVoYXZlIGxpa2UgcmVxdWlyZVxuIFx0X193ZWJwYWNrX3JlcXVpcmVfXy50ID0gZnVuY3Rpb24odmFsdWUsIG1vZGUpIHtcbiBcdFx0aWYobW9kZSAmIDEpIHZhbHVlID0gX193ZWJwYWNrX3JlcXVpcmVfXyh2YWx1ZSk7XG4gXHRcdGlmKG1vZGUgJiA4KSByZXR1cm4gdmFsdWU7XG4gXHRcdGlmKChtb2RlICYgNCkgJiYgdHlwZW9mIHZhbHVlID09PSAnb2JqZWN0JyAmJiB2YWx1ZSAmJiB2YWx1ZS5fX2VzTW9kdWxlKSByZXR1cm4gdmFsdWU7XG4gXHRcdHZhciBucyA9IE9iamVjdC5jcmVhdGUobnVsbCk7XG4gXHRcdF9fd2VicGFja19yZXF1aXJlX18ucihucyk7XG4gXHRcdE9iamVjdC5kZWZpbmVQcm9wZXJ0eShucywgJ2RlZmF1bHQnLCB7IGVudW1lcmFibGU6IHRydWUsIHZhbHVlOiB2YWx1ZSB9KTtcbiBcdFx0aWYobW9kZSAmIDIgJiYgdHlwZW9mIHZhbHVlICE9ICdzdHJpbmcnKSBmb3IodmFyIGtleSBpbiB2YWx1ZSkgX193ZWJwYWNrX3JlcXVpcmVfXy5kKG5zLCBrZXksIGZ1bmN0aW9uKGtleSkgeyByZXR1cm4gdmFsdWVba2V5XTsgfS5iaW5kKG51bGwsIGtleSkpO1xuIFx0XHRyZXR1cm4gbnM7XG4gXHR9O1xuXG4gXHQvLyBnZXREZWZhdWx0RXhwb3J0IGZ1bmN0aW9uIGZvciBjb21wYXRpYmlsaXR5IHdpdGggbm9uLWhhcm1vbnkgbW9kdWxlc1xuIFx0X193ZWJwYWNrX3JlcXVpcmVfXy5uID0gZnVuY3Rpb24obW9kdWxlKSB7XG4gXHRcdHZhciBnZXR0ZXIgPSBtb2R1bGUgJiYgbW9kdWxlLl9fZXNNb2R1bGUgP1xuIFx0XHRcdGZ1bmN0aW9uIGdldERlZmF1bHQoKSB7IHJldHVybiBtb2R1bGVbJ2RlZmF1bHQnXTsgfSA6XG4gXHRcdFx0ZnVuY3Rpb24gZ2V0TW9kdWxlRXhwb3J0cygpIHsgcmV0dXJuIG1vZHVsZTsgfTtcbiBcdFx0X193ZWJwYWNrX3JlcXVpcmVfXy5kKGdldHRlciwgJ2EnLCBnZXR0ZXIpO1xuIFx0XHRyZXR1cm4gZ2V0dGVyO1xuIFx0fTtcblxuIFx0Ly8gT2JqZWN0LnByb3RvdHlwZS5oYXNPd25Qcm9wZXJ0eS5jYWxsXG4gXHRfX3dlYnBhY2tfcmVxdWlyZV9fLm8gPSBmdW5jdGlvbihvYmplY3QsIHByb3BlcnR5KSB7IHJldHVybiBPYmplY3QucHJvdG90eXBlLmhhc093blByb3BlcnR5LmNhbGwob2JqZWN0LCBwcm9wZXJ0eSk7IH07XG5cbiBcdC8vIF9fd2VicGFja19wdWJsaWNfcGF0aF9fXG4gXHRfX3dlYnBhY2tfcmVxdWlyZV9fLnAgPSBcIlwiO1xuXG4gXHR2YXIganNvbnBBcnJheSA9IHdpbmRvd1tcIndlYnBhY2tKc29ucFwiXSA9IHdpbmRvd1tcIndlYnBhY2tKc29ucFwiXSB8fCBbXTtcbiBcdHZhciBvbGRKc29ucEZ1bmN0aW9uID0ganNvbnBBcnJheS5wdXNoLmJpbmQoanNvbnBBcnJheSk7XG4gXHRqc29ucEFycmF5LnB1c2ggPSB3ZWJwYWNrSnNvbnBDYWxsYmFjaztcbiBcdGpzb25wQXJyYXkgPSBqc29ucEFycmF5LnNsaWNlKCk7XG4gXHRmb3IodmFyIGkgPSAwOyBpIDwganNvbnBBcnJheS5sZW5ndGg7IGkrKykgd2VicGFja0pzb25wQ2FsbGJhY2soanNvbnBBcnJheVtpXSk7XG4gXHR2YXIgcGFyZW50SnNvbnBGdW5jdGlvbiA9IG9sZEpzb25wRnVuY3Rpb247XG5cblxuIFx0Ly8gYWRkIGVudHJ5IG1vZHVsZSB0byBkZWZlcnJlZCBsaXN0XG4gXHRkZWZlcnJlZE1vZHVsZXMucHVzaChbMywxXSk7XG4gXHQvLyBydW4gZGVmZXJyZWQgbW9kdWxlcyB3aGVuIHJlYWR5XG4gXHRyZXR1cm4gY2hlY2tEZWZlcnJlZE1vZHVsZXMoKTtcbiIsIi8qIGVzbGludC1kaXNhYmxlIGZ1bmN0aW9uLXBhcmVuLW5ld2xpbmUgKi9cbi8qIGVzbGludC1kaXNhYmxlIGltcGxpY2l0LWFycm93LWxpbmVicmVhayAqL1xuLyogZXNsaW50LWRpc2FibGUgY29tbWEtZGFuZ2xlICovXG5cbmltcG9ydCB7IElTdWJqZWN0LCBJT2JzZXJ2ZXJzTGlzdCwgSU9ic2VydmVyIH0gZnJvbSAnLi4vaW50ZXJmYWNlcyc7XG5cbi8qKlxuICog0KDQtdCw0LvQuNC30LDRhtC40Y8g0YHRg9Cx0YrQtdC60YLQsCwg0L7Qv9C+0LLQtdGJ0LDRjtGJ0LXQs9C+INC/0L7QtNC/0LjRgdCw0L3QvdGL0YUg0L3QsCDQvdC10LPQviDQvdCw0LHQu9GO0LTQsNGC0LXQu9C10LlcbiAqINC+INC90LDRgdGC0YPQv9C70LXQvdC40Lgg0L7Qv9GA0LXQtNC10LvRkdC90L3QvtCz0L4g0YHQvtCx0YvRgtC40Y8uXG4gKiDQmtC70LDRgdGBINGP0LLQu9GP0LXRgtGB0Y8g0YfQsNGB0YLRjNGOINC/0LDRgtGC0LXRgNC90LAgJ9C90LDQsdC70Y7QtNCw0YLQtdC70YwnINC4INGB0L7Qt9C00LDQvSDRgSDRhtC10LvRjNGOINC+0YHQu9Cw0LHQu9C10L3QuNGPINGB0LLRj9C30LXQuVxuICog0LzQtdC20LTRgyBNb2RlbCwgVmlldyDQuCBDb250cm9sbGVyXG4gKi9cbmNsYXNzIFN1YmplY3QgaW1wbGVtZW50cyBJU3ViamVjdCB7XG4gIHByaXZhdGUgb2JzZXJ2ZXJzOiBJT2JzZXJ2ZXJzTGlzdDtcblxuICBjb25zdHJ1Y3RvcigpIHtcbiAgICB0aGlzLm9ic2VydmVycyA9IHt9O1xuICB9XG5cbiAgLyoqXG4gICAqINCg0LXQs9C40YHRgtGA0LDRhtC40Y8g0L3QvtCy0L7Qs9C+INC90LDQsdC70Y7QtNCw0YLQtdC70Y8sINC/0L7QtNC/0LjRgdCw0L3QvdC+0LPQviDQvdCwINGB0L7QsdGL0YLQuNC1IGV2ZW50VHlwZVxuICAgKiBAcGFyYW0ge0lPYnNlcnZlcn0gb2JzZXJ2ZXIgLSDRgNC10LPQuNGB0YLRgNC40YDRg9C10LzRi9C5INC90LDQsdC70Y7QtNCw0YLQtdC70YxcbiAgICogQHBhcmFtIHtzdHJpbmd9IGV2ZW50VHlwZSAtINGC0LjQvyDRgdC+0LHRi9GC0LjRjywg0L/RgNC4INC90LDRgdGC0YPQv9C70LXQvdC40Lgg0LrQvtGC0L7RgNC+0LPQviDQsdGD0LTQtdGCINC/0YDQvtC40YHRhdC+0LTQuNGC0Ywg0L7Qv9C+0LLQtdGJ0LXQvdC40LVcbiAgICog0LfQsNGA0LXQs9C40YHRgtGA0LjRgNC+0LLQsNC90L3Ri9GFINC90LDQsdC70Y7QtNCw0YLQtdC70LXQuVxuICAgKi9cbiAgcmVnaXN0ZXIoZXZlbnRUeXBlOiBzdHJpbmcsIG9ic2VydmVyOiBJT2JzZXJ2ZXIpOiB2b2lkIHtcbiAgICBpZiAoIU9iamVjdC5wcm90b3R5cGUuaGFzT3duUHJvcGVydHkuY2FsbCh0aGlzLm9ic2VydmVycywgZXZlbnRUeXBlKSkge1xuICAgICAgdGhpcy5vYnNlcnZlcnNbZXZlbnRUeXBlXSA9IFtdO1xuICAgIH1cbiAgICB0aGlzLm9ic2VydmVyc1tldmVudFR5cGVdLnB1c2gob2JzZXJ2ZXIpO1xuICB9XG5cbiAgLyoqXG4gICAqINCj0LTQsNC70LXQvdC40LUg0L3QsNCx0LvRjtC00LDRgtC10LvRjywg0L/QvtC00L/QuNGB0LDQvdC90L7Qs9C+INC90LAg0YHQvtCx0YvRgtC40LUgZXZlbnRUeXBlXG4gICAqIEBwYXJhbSB7SU9ic2VydmVyfSBvYnNlcnZlciAtINGD0LTQsNC70Y/QtdC80YvQuSDQvdCw0LHQu9GO0LTQsNGC0LXQu9GMXG4gICAqIEBwYXJhbSB7c3RyaW5nfSBldmVudFR5cGUgLSDRgtC40L8g0YHQvtCx0YvRgtC40Y8sINC90LAg0LrQvtGC0L7RgNC+0LUg0L/QvtC00L/QuNGB0LDQvSDRg9C00LDQu9GP0LXQvNGL0Lkg0L3QsNCx0LvRjtC00LDRgtC10LvRjFxuICAgKi9cbiAgdW5zdWJzY3JpYmUoZXZlbnRUeXBlOiBzdHJpbmcsIG9ic2VydmVyOiBJT2JzZXJ2ZXIpOiB2b2lkIHtcbiAgICB0aGlzLm9ic2VydmVyc1tldmVudFR5cGVdID0gdGhpcy5vYnNlcnZlcnNbZXZlbnRUeXBlXS5maWx0ZXIoXG4gICAgICAocmVnaXN0ZXJlZE9ic2VydmVyKSA9PiByZWdpc3RlcmVkT2JzZXJ2ZXIgIT09IG9ic2VydmVyXG4gICAgKTtcbiAgfVxuXG4gIC8qKlxuICAgKiDQntC/0L7QstC10YnQtdC90LjQtSDQvdCw0LHQu9GO0LTQsNGC0LXQu9C10LksINC/0L7QtNC/0LjRgdCw0L3QvdGL0YUg0L3QsCDRgdC+0LHRi9GC0LjQtSBldmVudFR5cGUg0L4g0LXQs9C+INC90LDRgdGC0YPQv9C70LXQvdC40LhcbiAgICogQHBhcmFtIHtzdHJpbmd9IGV2ZW50VHlwZSAtINGC0LjQvyDRgdC+0LHRi9GC0LjRjywg0L/RgNC4INC90LDRgdGC0YPQv9C70LXQvdC40Lgg0LrQvtGC0L7RgNC+0LPQvlxuICAgKiDQsdGD0LTRg9GCINC+0L/QvtCy0LXRidC10L3RiyDQv9C+0LTQv9C40YHQsNC90L3Ri9C1INC90LAg0L3QtdCz0L4g0L3QsNCx0LvRjtC00LDRgtC10LvQuFxuICAgKi9cbiAgbm90aWZ5KGV2ZW50VHlwZTogc3RyaW5nKTogdm9pZCB7XG4gICAgaWYgKE9iamVjdC5wcm90b3R5cGUuaGFzT3duUHJvcGVydHkuY2FsbCh0aGlzLm9ic2VydmVycywgZXZlbnRUeXBlKSkge1xuICAgICAgdGhpcy5vYnNlcnZlcnNbZXZlbnRUeXBlXS5mb3JFYWNoKChyZWdpc3RlcmVkT2JzZXJ2ZXIpID0+XG4gICAgICAgIHJlZ2lzdGVyZWRPYnNlcnZlci51cGRhdGUoZXZlbnRUeXBlKVxuICAgICAgKTtcbiAgICB9XG4gIH1cbn1cblxuZXhwb3J0IGRlZmF1bHQgU3ViamVjdDtcbiIsImltcG9ydCB7IElQb3NpdGlvbiwgSVNpemUgfSBmcm9tICcuLi8uLi9pbnRlcmZhY2VzJztcbmltcG9ydCBTdWJqZWN0IGZyb20gJy4uLy4uL3N1YmplY3Qvc3ViamVjdCc7XG5cbmNsYXNzIEVsZW1lbnQge1xuICBwcm90ZWN0ZWQgZWxlbWVudDogSFRNTERpdkVsZW1lbnQ7XG4gIHByb3RlY3RlZCBsYXN0UG9zaXRpb246IElQb3NpdGlvbjtcbiAgc3ViamVjdDogU3ViamVjdDtcblxuICBjb25zdHJ1Y3RvcihuYW1lOiBzdHJpbmcsIG9yaWVudGF0aW9uPzogc3RyaW5nKSB7XG4gICAgY29uc3QgZWxlbWVudCA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoJ2RpdicpO1xuICAgIHRoaXMuZWxlbWVudCA9IGVsZW1lbnQ7XG4gICAgdGhpcy5zdWJqZWN0ID0gbmV3IFN1YmplY3QoKTtcbiAgICB0aGlzLmxhc3RQb3NpdGlvbiA9IHsgbGVmdDogMCwgdG9wOiAwIH07XG5cbiAgICBsZXQgb3JpZW50YXRpb25DbGFzcyA9IGAke25hbWV9X2hvcml6b250YWxgO1xuICAgIGlmIChvcmllbnRhdGlvbikge1xuICAgICAgb3JpZW50YXRpb25DbGFzcyA9IGAke25hbWV9XyR7b3JpZW50YXRpb259YDtcbiAgICB9XG4gICAgdGhpcy5lbGVtZW50LmNsYXNzTGlzdC5hZGQoYCR7bmFtZX1gLCBvcmllbnRhdGlvbkNsYXNzKTtcbiAgfVxuXG4gIC8qKlxuICAgKiDQodC+0YXRgNCw0L3Rj9C10YIg0L/QvtC30LjRhtC40Y4g0LrRg9GA0YHQvtGA0LAg0L7RgtC90L7RgdC40YLQtdC70YzQvdC+INC70LXQstC+0LPQviDQuCDQstC10YDRhdC90LXQs9C+INC60YDQsNGPINGA0L7QtNC40YLQtdC70YzRgdC60L7Qs9C+INC60L7QvdGC0LXQudC90LXRgNCwXG4gICAqIEBwYXJhbSB7SVBvc2l0aW9ufSBjdXJzb3JQb3NpdGlvbiAtINC+0LHRitC10LrRgiDRgSDQv9C+0LfQuNGG0LjQtdC5INC60YPRgNGB0L7RgNCwXG4gICAqINC+0YLQvdC+0YHQuNGC0LXQu9GM0L3QviDQu9C10LLQvtCz0L4g0Lgg0LLQtdGA0YXQvdC10LPQviDQutGA0LDRjyDRjdC60YDQsNC90LBcbiAgICovXG4gIHByb3RlY3RlZCBzZXRQb3NpdGlvbihjdXJzb3JQb3NpdGlvbjogSVBvc2l0aW9uKTogdm9pZCB7XG4gICAgY29uc3QgcG9zaXRpb25JbnNpZGVQYXJlbnQgPSB7XG4gICAgICBsZWZ0OiBjdXJzb3JQb3NpdGlvbi5sZWZ0LFxuICAgICAgdG9wOiBjdXJzb3JQb3NpdGlvbi50b3AsXG4gICAgfTtcblxuICAgIGNvbnN0IHBhcmVudDogSFRNTEVsZW1lbnQgfCBudWxsID0gdGhpcy5lbGVtZW50LnBhcmVudEVsZW1lbnQ7XG5cbiAgICBpZiAocGFyZW50ICE9PSBudWxsKSB7XG4gICAgICBjb25zdCBwYXJlbnRDb29yZHM6IERPTVJlY3QgPSBwYXJlbnQuZ2V0Qm91bmRpbmdDbGllbnRSZWN0KCk7XG4gICAgICBwb3NpdGlvbkluc2lkZVBhcmVudC5sZWZ0IC09IHBhcmVudENvb3Jkcy5sZWZ0O1xuICAgICAgcG9zaXRpb25JbnNpZGVQYXJlbnQudG9wIC09IHBhcmVudENvb3Jkcy50b3A7XG4gICAgfVxuXG4gICAgdGhpcy5sYXN0UG9zaXRpb24gPSBwb3NpdGlvbkluc2lkZVBhcmVudDtcbiAgfVxuXG4gIC8qKlxuICAgKiDQktC+0LfQstGA0LDRidCw0LXRgiDQv9C+0YHQu9C10LTQvdGO0Y4g0YHQvtGF0YDQsNC90ZHQvdC90YPRjiDQv9C+0LfQuNGG0LjRjiDQutGD0YDRgdC+0YDQsFxuICAgKiBAcmV0dXJucyB7SUN1cnNvclBvc2l0aW9ufSAtINC+0LHRitC10LrRgiDRgSDQv9C+0LfQuNGG0LjQtdC5INC60YPRgNGB0L7RgNCwINC+0YLQvdC+0YHQuNGC0LXQu9GM0L3QvlxuICAgKiDQu9C10LLQvtCz0L4g0Lgg0LLQtdGA0YXQvdC10LPQviDQutGA0LDRjyDRgNC+0LTQuNGC0LXQu9GM0YHQutC+0LPQviDQutC+0L3RgtC10LnQvdC10YDQsFxuICAgKi9cbiAgZ2V0UG9zaXRpb24oKTogSVBvc2l0aW9uIHtcbiAgICByZXR1cm4gdGhpcy5sYXN0UG9zaXRpb247XG4gIH1cblxuICAvKipcbiAgICog0JLQvtC30LLRgNCw0YnQsNC10YIgZGl2INGN0LvQtdC80LXQvdGCXG4gICAqIEByZXR1cm5zIHtIVE1MRGl2RWxlbWVudH0gLSBIVE1MIGRpdiDRjdC70LXQvNC10L3RglxuICAgKi9cbiAgZ2V0RWxlbWVudCgpOiBIVE1MRGl2RWxlbWVudCB7XG4gICAgcmV0dXJuIHRoaXMuZWxlbWVudDtcbiAgfVxuXG4gIC8qKlxuICAgKiDQktC+0LfQstGA0LDRidCw0LXRgiDRgNCw0LfQvNC10YAg0Y3Qu9C10LzQtdC90YLQsFxuICAgKiBAcmV0dXJucyB7SVNpemV9IC0g0L7QsdGK0LXQutGCINGBINGI0LjRgNC40L3QvtC5INC4INCy0YvRgdC+0YLQvtC5INGN0LvQtdC80LXQvdGC0LBcbiAgICovXG4gIGdldFNpemUoKTogSVNpemUge1xuICAgIHJldHVybiB7XG4gICAgICB3aWR0aDogdGhpcy5lbGVtZW50Lm9mZnNldFdpZHRoLFxuICAgICAgaGVpZ2h0OiB0aGlzLmVsZW1lbnQub2Zmc2V0SGVpZ2h0LFxuICAgIH07XG4gIH1cblxuICAvKipcbiAgICog0JzQtdC90Y/QtdGCINC+0YDQuNC10L3RgtCw0YbQuNGOINGN0LvQtdC80LXQvdGC0LAg0L3QsCDQs9C+0YDQuNC30L7QvdGC0LDQu9GM0L3Rg9GOXG4gICAqL1xuICBzd2l0Y2hUb0hvcml6b250YWwoKTogdm9pZCB7XG4gICAgY29uc3QgbWFpbkNsYXNzID0gdGhpcy5lbGVtZW50LmNsYXNzTGlzdFswXTtcbiAgICB0aGlzLmVsZW1lbnQuY2xhc3NMaXN0LnJlbW92ZShgJHttYWluQ2xhc3N9X3ZlcnRpY2FsYCk7XG4gICAgdGhpcy5lbGVtZW50LmNsYXNzTGlzdC5hZGQoYCR7bWFpbkNsYXNzfV9ob3Jpem9udGFsYCk7XG4gIH1cblxuICAvKipcbiAgICog0JzQtdC90Y/QtdGCINC+0YDQuNC10L3RgtCw0YbQuNGOINGN0LvQtdC80LXQvdGC0LAg0L3QsCDQstC10YDRgtC40LrQsNC70YzQvdGD0Y5cbiAgICovXG4gIHN3aXRjaFRvVmVydGljYWwoKTogdm9pZCB7XG4gICAgY29uc3QgbWFpbkNsYXNzID0gdGhpcy5lbGVtZW50LmNsYXNzTGlzdFswXTtcbiAgICB0aGlzLmVsZW1lbnQuY2xhc3NMaXN0LnJlbW92ZShgJHttYWluQ2xhc3N9X2hvcml6b250YWxgKTtcbiAgICB0aGlzLmVsZW1lbnQuY2xhc3NMaXN0LmFkZChgJHttYWluQ2xhc3N9X3ZlcnRpY2FsYCk7XG4gIH1cblxuICAvKipcbiAgICog0KPQtNCw0LvRj9C10YIg0Y3Qu9C10LzQtdC90YJcbiAgICovXG4gIHJlbW92ZSgpOiB2b2lkIHtcbiAgICB0aGlzLmVsZW1lbnQucmVtb3ZlKCk7XG4gIH1cblxuICAvKipcbiAgICog0JLQvtC30LLRgNCw0YnQsNC10YIg0YLQtdC60YPRidGD0Y4g0L7RgNC40LXQvdGC0LDRhtC40Y4g0Y3Qu9C10LzQtdC90YLQsFxuICAgKiBAcmV0dXJucyB7c3RyaW5nfSAtINGC0LXQutGD0YnQsNGPINC+0YDQuNC10L3RgtCw0YbQuNGPINGN0LvQtdC80LXQvdGC0LBcbiAgICovXG4gIGdldE9yaWVudGF0aW9uKCk6IHN0cmluZyB7XG4gICAgY29uc3QgbWFpbkNsYXNzID0gdGhpcy5lbGVtZW50LmNsYXNzTGlzdFswXTtcbiAgICBjb25zdCBjbGFzc1dpdGhPcmllbnRhdGlvbiA9IHRoaXMuZWxlbWVudC5jbGFzc0xpc3RbMV07XG4gICAgcmV0dXJuIGNsYXNzV2l0aE9yaWVudGF0aW9uLnJlcGxhY2UoYCR7bWFpbkNsYXNzfV9gLCAnJyk7XG4gIH1cblxuICAvKipcbiAgICog0JLQvtC30LLRgNCw0YnQsNC10YIgRE9NUmVjdCDQvtCx0YrQtdC60YIg0Y3Qu9C10LzQtdC90YLQsFxuICAgKiBAcmV0dXJucyB7RE9NUmVjdH0gLSBET01SZWN0INC+0LHRitC10LrRgiDRjdC70LXQvNC10L3RgtCwXG4gICAqL1xuICBnZXRSZWN0KCk6IERPTVJlY3Qge1xuICAgIHJldHVybiB0aGlzLmVsZW1lbnQuZ2V0Qm91bmRpbmdDbGllbnRSZWN0KCk7XG4gIH1cblxuICAvKipcbiAgICog0JLQvtC30LLRgNCw0YnQsNC10YIg0LfQvdCw0YfQtdC90LjQtSDQt9Cw0L/RgNCw0YjQuNCy0LDQtdC80L7Qs9C+INGB0YLQuNC70Y9cbiAgICogQHJldHVybnMge3N0cmluZyB8IHVuZGVmaW5lZH0gLSDQt9C90LDRh9C10L3QuNC1INC30LDQv9GA0LDRiNC40LLQsNC10LzQvtCz0L4g0YHRgtC40LvRj1xuICAgKi9cbiAgZ2V0U3R5bGUoc3R5bGVOYW1lOiBzdHJpbmcpOiBzdHJpbmcgfCB1bmRlZmluZWQge1xuICAgIHJldHVybiBkb2N1bWVudC5kZWZhdWx0Vmlld1xuICAgICAgPy5nZXRDb21wdXRlZFN0eWxlKHRoaXMuZWxlbWVudCwgbnVsbClcbiAgICAgIC5nZXRQcm9wZXJ0eVZhbHVlKHN0eWxlTmFtZSk7XG4gIH1cbn1cblxuZXhwb3J0IGRlZmF1bHQgRWxlbWVudDtcbiIsImltcG9ydCAnQC9wbHVnaW5zL3NpbXBsZS1zbGlkZXIvc2ltcGxlLXNsaWRlci50cyc7XG5pbXBvcnQgJ0AvcGx1Z2lucy9jb250cm9sLXBhbmVsL2NvbnRyb2wtcGFuZWwudHMnO1xuaW1wb3J0ICdAL2RlbW8vZGVtby50cyc7XG5cbmltcG9ydCAnQC9kZW1vL3Njc3Mvc3R5bGUuc2Nzcyc7XG5pbXBvcnQgJ0AvZGVtby9zY3NzL25vcm1hbGl6ZS5zY3NzJztcbmltcG9ydCAnQC9mb250cy9mb250cy5zY3NzJztcbmltcG9ydCAnQC9wbHVnaW5zL3NpbXBsZS1zbGlkZXIvc2ltcGxlLXNsaWRlci5zY3NzJztcbmltcG9ydCAnQC9wbHVnaW5zL2NvbnRyb2wtcGFuZWwvY29udHJvbC1wYW5lbC5zY3NzJztcbiIsIi8qIGVzbGludC1kaXNhYmxlIG5vLXBhcmFtLXJlYXNzaWduICovXG4vKiBlc2xpbnQtZGlzYWJsZSBAdHlwZXNjcmlwdC1lc2xpbnQvbm8tZXhwbGljaXQtYW55ICovXG4vKiBlc2xpbnQtZGlzYWJsZSBjb21tYS1kYW5nbGUgKi9cblxuaW1wb3J0IHsgSVNsaWRlclNldHRpbmdzLCBJU3ViamVjdCwgSVRodW1ic1ZhbHVlcyB9IGZyb20gJy4vaW50ZXJmYWNlcyc7XG5pbXBvcnQgU2ltcGxlU2xpZGVyTW9kZWwgZnJvbSAnLi9tb2RlbC9zaW1wbGUtc2xpZGVyLW1vZGVsJztcbmltcG9ydCBTaW1wbGVTbGlkZXJDb250cm9sbGVyIGZyb20gJy4vY29udHJvbGxlci9zaW1wbGUtc2xpZGVyLWNvbnRyb2xsZXInO1xuaW1wb3J0IFNpbXBsZVNsaWRlclZpZXcgZnJvbSAnLi92aWV3L3NpbXBsZS1zbGlkZXItdmlldyc7XG5cbigoJCkgPT4ge1xuICAvLyDQndCw0YHRgtGA0L7QudC60Lgg0L/Qu9Cw0LPQuNC90LAg0L/QviDRg9C80L7Qu9GH0LDQvdC40Y5cbiAgY29uc3QgZGVmYXVsdFNldHRpbmdzID0ge1xuICAgIG9yaWVudGF0aW9uOiAnaG9yaXpvbnRhbCcsXG4gICAgdHlwZTogJ3JhbmdlJyxcbiAgICBzY2FsZTogdHJ1ZSxcbiAgICBwb3BVcHM6IHRydWUsXG4gICAgbWluOiAwLFxuICAgIG1heDogMTAsXG4gICAgc3RlcDogMSxcbiAgICB0aHVtYk9uZVZhbHVlOiAzLFxuICAgIHRodW1iVHdvVmFsdWU6IDcsXG4gICAgc2xpZGVyU2l6ZTogeyB3aWR0aDogNTAwLCBoZWlnaHQ6IDEwIH0sXG4gICAgdGh1bWJTaXplOiB7IHdpZHRoOiAyMCwgaGVpZ2h0OiAyMCB9LFxuICB9O1xuXG4gIC8vIEFQSSDQvNC10YLQvtC00Ysg0L/Qu9Cw0LPQuNC90LBcbiAgY29uc3QgbWV0aG9kczogYW55ID0ge1xuICAgIGluaXQob3B0aW9uczogSVNsaWRlclNldHRpbmdzKTogdm9pZCB7XG4gICAgICAvLyDQntCx0L3QvtCy0LvQtdC90LjQtSDQvdCw0YHRgtGA0L7QtdC6INC/0LvQsNCz0LjQvdCwINCyINGB0L7QvtGC0LLQtdGC0YHRgtCy0LjQuCDRgSDQv9C+0LvRg9GH0LXQvdC90YvQvNC4INC/0LDRgNCw0LzQtdGC0YDQsNC80LhcbiAgICAgIGNvbnN0IHNldHRpbmdzOiBJU2xpZGVyU2V0dGluZ3MgPSAkLmV4dGVuZChkZWZhdWx0U2V0dGluZ3MsIG9wdGlvbnMpO1xuXG4gICAgICAvLyDQodC+0LfQtNCw0L3QuNC1INGB0LvQsNC50LTQtdGA0L7QslxuICAgICAgcmV0dXJuIHRoaXMuZWFjaChmdW5jdGlvbiBjcmVhdGVTbGlkZXIodGhpczogSFRNTERpdkVsZW1lbnQpIHtcbiAgICAgICAgY29uc3QgbW9kZWwgPSBuZXcgU2ltcGxlU2xpZGVyTW9kZWwoc2V0dGluZ3MpO1xuICAgICAgICBjb25zdCB2aWV3ID0gbmV3IFNpbXBsZVNsaWRlclZpZXcodGhpcyk7XG4gICAgICAgIGNvbnN0IGNvbnRyb2xsZXIgPSBuZXcgU2ltcGxlU2xpZGVyQ29udHJvbGxlcih7XG4gICAgICAgICAgbW9kZWwsXG4gICAgICAgICAgdmlldyxcbiAgICAgICAgfSk7XG5cbiAgICAgICAgJCh0aGlzKS5kYXRhKCdzZXR0aW5ncycsIHNldHRpbmdzKTtcbiAgICAgICAgJCh0aGlzKS5kYXRhKCdjb250cm9sbGVyJywgY29udHJvbGxlcik7XG4gICAgICAgICQodGhpcykuZGF0YSgnbW9kZWwnLCBtb2RlbCk7XG4gICAgICB9KTtcbiAgICB9LFxuICAgIGdldE1vZGVsU3ViamVjdCgpOiBJU3ViamVjdCB7XG4gICAgICByZXR1cm4gJCh0aGlzKS5kYXRhKCkubW9kZWwuc3ViamVjdDtcbiAgICB9LFxuICAgIGdldFRodW1ic1ZhbHVlcygpOiBJVGh1bWJzVmFsdWVzIHtcbiAgICAgIHJldHVybiAkKHRoaXMpLmRhdGEoKS5tb2RlbC5nZXRUaHVtYnNWYWx1ZXMoKTtcbiAgICB9LFxuICAgIGdldE1pbigpOiBudW1iZXIge1xuICAgICAgcmV0dXJuICQodGhpcykuZGF0YSgpLm1vZGVsLmdldE1pbigpO1xuICAgIH0sXG4gICAgZ2V0TWF4KCk6IG51bWJlciB7XG4gICAgICByZXR1cm4gJCh0aGlzKS5kYXRhKCkubW9kZWwuZ2V0TWF4KCk7XG4gICAgfSxcbiAgICBnZXRTdGVwKCk6IG51bWJlciB7XG4gICAgICByZXR1cm4gJCh0aGlzKS5kYXRhKCkubW9kZWwuZ2V0U3RlcCgpO1xuICAgIH0sXG4gICAgZ2V0U2NhbGVTdGF0ZSgpOiBib29sZWFuIHtcbiAgICAgIHJldHVybiAkKHRoaXMpLmRhdGEoKS5tb2RlbC5nZXRTY2FsZVN0YXRlKCk7XG4gICAgfSxcbiAgICBnZXRQb3BVcHNTdGF0ZSgpOiBib29sZWFuIHtcbiAgICAgIHJldHVybiAkKHRoaXMpLmRhdGEoKS5tb2RlbC5nZXRQb3BVcHNTdGF0ZSgpO1xuICAgIH0sXG4gICAgZ2V0VHlwZSgpOiBzdHJpbmcge1xuICAgICAgcmV0dXJuICQodGhpcykuZGF0YSgpLm1vZGVsLmdldFR5cGUoKTtcbiAgICB9LFxuICAgIGdldE9yaWVudGF0aW9uKCk6IHN0cmluZyB7XG4gICAgICByZXR1cm4gJCh0aGlzKS5kYXRhKCkubW9kZWwuZ2V0T3JpZW50YXRpb24oKTtcbiAgICB9LFxuICAgIHJlZnJlc2hTbGlkZXJTdGF0ZShzbGlkZXJTZXR0aW5nczogSVNsaWRlclNldHRpbmdzKTogdm9pZCB7XG4gICAgICAkKHRoaXMpLmRhdGEoKS5tb2RlbC5yZWZyZXNoU2xpZGVyU3RhdGUoc2xpZGVyU2V0dGluZ3MpO1xuICAgIH0sXG4gIH07XG5cbiAgJC5mbi5zaW1wbGVTbGlkZXIgPSBmdW5jdGlvbiBwbHVnKFxuICAgIGFjdGlvbj86IHN0cmluZyB8IElTbGlkZXJTZXR0aW5ncyxcbiAgICBhcmdzPyxcbiAgKTogYW55IHtcbiAgICBsZXQgbWV0aG9kOiBhbnk7XG5cbiAgICBpZiAodHlwZW9mIGFjdGlvbiA9PT0gJ3N0cmluZycgJiYgbWV0aG9kc1thY3Rpb25dKSB7XG4gICAgICBtZXRob2QgPSBtZXRob2RzW2FjdGlvbl0uY2FsbCh0aGlzLCBhcmdzKTtcbiAgICB9IGVsc2UgaWYgKHR5cGVvZiBhY3Rpb24gPT09ICdvYmplY3QnIHx8ICFhY3Rpb24pIHtcbiAgICAgIG1ldGhvZCA9IG1ldGhvZHMuaW5pdC5jYWxsKHRoaXMsIGFjdGlvbik7XG4gICAgfSBlbHNlIHtcbiAgICAgICQuZXJyb3IoYNCc0LXRgtC+0LQg0YEg0LjQvNC10L3QtdC8ICR7YWN0aW9ufSDQvdC1INGB0YPRidC10YHRgtCy0YPQtdGCINC00LvRjyBqUXVlcnkuc2ltcGxlU2xpZGVyYCk7XG4gICAgICBtZXRob2QgPSB0aGlzO1xuICAgIH1cblxuICAgIHJldHVybiBtZXRob2Q7XG4gIH07XG59KShqUXVlcnkpO1xuIiwiLyogZXNsaW50LWRpc2FibGUgZnVuY3Rpb24tcGFyZW4tbmV3bGluZSAqL1xuLyogZXNsaW50LWRpc2FibGUgb3BlcmF0b3ItbGluZWJyZWFrICovXG4vKiBlc2xpbnQtZGlzYWJsZSBjb21tYS1kYW5nbGUgKi9cblxuaW1wb3J0IHtcbiAgSVNpbXBsZVNsaWRlck1vZGVsLFxuICBJU2l6ZSxcbiAgSVRodW1ic1Bvc2l0aW9ucyxcbiAgSVBvc2l0aW9uLFxuICBJU2xpZGVyU2V0dGluZ3MsXG4gIElQcm9ncmVzc0JhclBhcmFtcyxcbiAgSVBvcFVwcyxcbiAgSVNjYWxlUG9pbnRQYXJhbXMsXG4gIElUaHVtYnNWYWx1ZXMsXG4gIElTdWJqZWN0LFxufSBmcm9tICcuLi9pbnRlcmZhY2VzJztcbmltcG9ydCBTdWJqZWN0IGZyb20gJy4uL3N1YmplY3Qvc3ViamVjdCc7XG5cbmNsYXNzIFNpbXBsZVNsaWRlck1vZGVsIGltcGxlbWVudHMgSVNpbXBsZVNsaWRlck1vZGVsIHtcbiAgc3ViamVjdDogSVN1YmplY3Q7XG4gIHByaXZhdGUgb3JpZW50YXRpb24gPSAnaG9yaXpvbnRhbCc7XG4gIHByaXZhdGUgdHlwZSA9ICdyYW5nZSc7XG4gIHByaXZhdGUgc2NhbGUgPSB0cnVlO1xuICBwcml2YXRlIHBvcFVwcyA9IHRydWU7XG4gIHByaXZhdGUgbWluID0gMDtcbiAgcHJpdmF0ZSBtYXggPSAxMDtcbiAgcHJpdmF0ZSBzdGVwID0gMTtcbiAgcHJpdmF0ZSB0aHVtYk9uZVZhbHVlID0gMztcbiAgcHJpdmF0ZSB0aHVtYlR3b1ZhbHVlID0gNztcbiAgcHJpdmF0ZSBzbGlkZXJTaXplID0geyB3aWR0aDogNTAwLCBoZWlnaHQ6IDEwIH07XG4gIHByaXZhdGUgdGh1bWJTaXplID0geyB3aWR0aDogMjAsIGhlaWdodDogMTAgfTtcblxuICBjb25zdHJ1Y3RvcihzZXR0aW5nczogSVNsaWRlclNldHRpbmdzKSB7XG4gICAgdGhpcy5zdWJqZWN0ID0gbmV3IFN1YmplY3QoKTtcbiAgICB0aGlzLnJlZnJlc2hTbGlkZXJTdGF0ZShzZXR0aW5ncyk7XG4gIH1cblxuICAvKipcbiAgICog0J/QvtC70L3QvtGB0YLRjNGOINC+0LHQvdC+0LLQu9GP0LXRgiDRgdC+0YHRgtC+0Y/QvdC40LUg0LzQvtC00LXQu9C4INCyINGB0L7QvtGC0LLQtdGC0YHRgtCy0LjQuCDRgSDQv9C+0LvRg9GH0LXQvdC90YvQvCDQvtCx0YrQtdC60YLQvtC8XG4gICAqIEBwYXJhbSBzZXR0aW5ncyAtINC+0LHRitC10LrRgiDRgSDQvdCw0YHRgtGA0L7QudC60LDQvNC4INC80L7QtNC10LvQuFxuICAgKi9cbiAgcmVmcmVzaFNsaWRlclN0YXRlKHNldHRpbmdzOiBJU2xpZGVyU2V0dGluZ3MpOiB2b2lkIHtcbiAgICBpZiAoc2V0dGluZ3Muc2xpZGVyU2l6ZSAhPT0gdW5kZWZpbmVkKSB7XG4gICAgICB0aGlzLnNsaWRlclNpemUgPSBzZXR0aW5ncy5zbGlkZXJTaXplO1xuICAgIH1cbiAgICBpZiAoc2V0dGluZ3MudGh1bWJTaXplICE9PSB1bmRlZmluZWQpIHtcbiAgICAgIHRoaXMudGh1bWJTaXplID0gc2V0dGluZ3MudGh1bWJTaXplO1xuICAgIH1cbiAgICBpZiAodGhpcy5vcmllbnRhdGlvbiAhPT0gc2V0dGluZ3Mub3JpZW50YXRpb24pIHtcbiAgICAgIHRoaXMub3JpZW50YXRpb24gPSBzZXR0aW5ncy5vcmllbnRhdGlvbjtcbiAgICAgIHRoaXMuc3ViamVjdC5ub3RpZnkoJ29yaWVudGF0aW9uSXNVcGRhdGVkJyk7XG4gICAgfVxuICAgIGlmICh0aGlzLnR5cGUgIT09IHNldHRpbmdzLnR5cGUpIHtcbiAgICAgIHRoaXMudHlwZSA9IHNldHRpbmdzLnR5cGU7XG4gICAgICBpZiAodGhpcy50eXBlSXNSYW5nZUFuZFNlY29uZFRodW1iVmFsdWVMZXNzVGhhbkZpcnN0KCkpIHtcbiAgICAgICAgdGhpcy50aHVtYlR3b1ZhbHVlID0gdGhpcy50aHVtYk9uZVZhbHVlO1xuICAgICAgfVxuICAgICAgdGhpcy5zdWJqZWN0Lm5vdGlmeSgndHlwZUlzVXBkYXRlZCcpO1xuICAgIH1cbiAgICBpZiAodGhpcy5taW4gIT09IHNldHRpbmdzLm1pbikge1xuICAgICAgdGhpcy51cGRhdGVNaW5WYWx1ZShzZXR0aW5ncy5taW4pO1xuICAgIH1cbiAgICBpZiAodGhpcy5tYXggIT09IHNldHRpbmdzLm1heCkge1xuICAgICAgdGhpcy51cGRhdGVNYXhWYWx1ZShzZXR0aW5ncy5tYXgpO1xuICAgIH1cbiAgICBpZiAodGhpcy5zdGVwICE9PSBzZXR0aW5ncy5zdGVwKSB7XG4gICAgICB0aGlzLnVwZGF0ZVN0ZXAoc2V0dGluZ3Muc3RlcCk7XG4gICAgfVxuICAgIGlmICh0aGlzLnNjYWxlICE9PSBzZXR0aW5ncy5zY2FsZSkge1xuICAgICAgdGhpcy5zY2FsZSA9IHNldHRpbmdzLnNjYWxlO1xuICAgICAgdGhpcy5zdWJqZWN0Lm5vdGlmeSgnc2NhbGVTdGF0ZUlzVXBkYXRlZCcpO1xuICAgIH1cbiAgICBpZiAodGhpcy5wb3BVcHMgIT09IHNldHRpbmdzLnBvcFVwcykge1xuICAgICAgdGhpcy5wb3BVcHMgPSBzZXR0aW5ncy5wb3BVcHM7XG4gICAgICB0aGlzLnN1YmplY3Qubm90aWZ5KCdwb3BVcHNTdGF0ZUlzVXBkYXRlZCcpO1xuICAgIH1cbiAgICBpZiAoXG4gICAgICB0aGlzLnRodW1iT25lVmFsdWUgIT09IHNldHRpbmdzLnRodW1iT25lVmFsdWUgfHxcbiAgICAgIHRoaXMudGh1bWJUd29WYWx1ZSAhPT0gc2V0dGluZ3MudGh1bWJUd29WYWx1ZVxuICAgICkge1xuICAgICAgdGhpcy5zZXRUaHVtYnNWYWx1ZXMoe1xuICAgICAgICB0aHVtYk9uZTogc2V0dGluZ3MudGh1bWJPbmVWYWx1ZSxcbiAgICAgICAgdGh1bWJUd286IHNldHRpbmdzLnRodW1iVHdvVmFsdWUsXG4gICAgICB9KTtcbiAgICB9XG4gIH1cblxuICAvKipcbiAgICog0JLQvtC30LLRgNCw0YnQsNC10YIg0LjRgdGC0LjQvdGDLCDQtdGB0LvQuCDRgtC40L8g0YHQu9Cw0LnQtNC10YDQsCAtINC00LjQsNC/0LDQt9C+0L0g0Lgg0LfQvdCw0YfQtdC90LjQtSDQstGC0L7RgNC+0LPQvlxuICAgKiDQsdC10LPRg9C90LrQsCDQvNC10L3RjNGI0LUg0LfQvdCw0YfQtdC90LjRjyDQv9C10YDQstC+0LPQvlxuICAgKiBAcmV0dXJucyB7Ym9vbGVhbn0gLSDRgNC10LfRg9C70YzRgtCw0YIg0LLRi9GH0LjRgdC70LXQvdC40Y8g0LvQvtCz0LjRh9C10YHQutC+0LPQviDQstGL0YDQsNC20LXQvdC40Y9cbiAgICovXG4gIHByaXZhdGUgdHlwZUlzUmFuZ2VBbmRTZWNvbmRUaHVtYlZhbHVlTGVzc1RoYW5GaXJzdCgpOiBib29sZWFuIHtcbiAgICByZXR1cm4gdGhpcy50eXBlID09PSAncmFuZ2UnICYmIHRoaXMudGh1bWJUd29WYWx1ZSA8IHRoaXMudGh1bWJPbmVWYWx1ZTtcbiAgfVxuXG4gIC8qKlxuICAgKiDQntCx0L3QvtCy0LvQtdC90LjQtSDRgdC+0YHRgtC+0Y/QvdC40Y8g0LHQtdCz0YPQvdC60L7QsiDQuCDQvtC/0L7QstC10YnQtdC90LjQtSDQvdCw0LHQu9GO0LTQsNGC0LXQu9C10Lkg0L7QsSDQuNC30LzQtdC90LXQvdC40LhcbiAgICogQHBhcmFtIHtJVGh1bWJzUG9zaXRpb25zfSBwb3NpdGlvbnMgLSDRgtC10LrRg9GJ0LDRjyDQv9C+0LfQuNGG0LjRjyDQsdC10LPRg9C90LrQvtCyXG4gICAqL1xuICB1cGRhdGVUaHVtYnNTdGF0ZShwb3NpdGlvbnM6IElUaHVtYnNQb3NpdGlvbnMpOiB2b2lkIHtcbiAgICBjb25zdCB0aHVtYk9uZVZhbHVlID0gdGhpcy52YWx1ZVdpdGhTdGVwKFxuICAgICAgdGhpcy5wb3NCeU9yaWVudGF0aW9uKHBvc2l0aW9ucy50aHVtYk9uZSksXG4gICAgKTtcbiAgICBsZXQgdGh1bWJUd29WYWx1ZTogbnVsbCB8IG51bWJlciA9IG51bGw7XG5cbiAgICBpZiAocG9zaXRpb25zLnRodW1iVHdvICE9PSBudWxsKSB7XG4gICAgICB0aHVtYlR3b1ZhbHVlID0gdGhpcy52YWx1ZVdpdGhTdGVwKFxuICAgICAgICB0aGlzLnBvc0J5T3JpZW50YXRpb24ocG9zaXRpb25zLnRodW1iVHdvKSxcbiAgICAgICk7XG4gICAgfVxuXG4gICAgaWYgKFxuICAgICAgU2ltcGxlU2xpZGVyTW9kZWwudmFsdWVUd29Jc051bGxPck1vcmVPckVxdWFsVGhlblZhbHVlT25lKFxuICAgICAgICB0aHVtYk9uZVZhbHVlLFxuICAgICAgICB0aHVtYlR3b1ZhbHVlLFxuICAgICAgKVxuICAgICkge1xuICAgICAgdGhpcy50aHVtYk9uZVZhbHVlID0gdGh1bWJPbmVWYWx1ZTtcbiAgICAgIGlmICh0aHVtYlR3b1ZhbHVlICE9PSBudWxsKSB7XG4gICAgICAgIHRoaXMudGh1bWJUd29WYWx1ZSA9IHRodW1iVHdvVmFsdWU7XG4gICAgICB9XG4gICAgfVxuXG4gICAgdGhpcy5zdWJqZWN0Lm5vdGlmeSgndGh1bWJzUG9zSXNVcGRhdGVkJyk7XG4gIH1cblxuICAvKipcbiAgICog0JLQvtC30LLRgNCw0YnQsNC10YIg0LjRgdGC0LjQvdGDLCDQt9C90LDRh9C10L3QuNC1INCy0YLQvtGA0L7Qs9C+INGA0LDQstC90L4g0L3Rg9C70Y4g0LjQu9C4INC80LXQvdGM0YjQtSDQu9C40LHQviDRgNCw0LLQvdC+INC30L3QsNGH0LXQvdC40Y4g0L/QtdGA0LLQvtCz0L5cbiAgICogQHJldHVybnMge2Jvb2xlYW59IC0g0YDQtdC30YPQu9GM0YLQsNGCINCy0YvRh9C40YHQu9C10L3QuNGPINC70L7Qs9C40YfQtdGB0LrQvtCz0L4g0LLRi9GA0LDQttC10L3QuNGPXG4gICAqL1xuICBwcml2YXRlIHN0YXRpYyB2YWx1ZVR3b0lzTnVsbE9yTW9yZU9yRXF1YWxUaGVuVmFsdWVPbmUoXG4gICAgdmFsdWVPbmU6IG51bWJlcixcbiAgICB2YWx1ZVR3bzogbnVtYmVyIHwgbnVsbCxcbiAgKTogYm9vbGVhbiB7XG4gICAgcmV0dXJuIHZhbHVlVHdvID09PSBudWxsIHx8IHZhbHVlT25lIDw9IHZhbHVlVHdvO1xuICB9XG5cbiAgLyoqXG4gICAqINCj0YHRgtCw0L3QsNCy0LvQuNCy0LDQtdGCINGA0LDQt9C80LXRgCDRgdC70LDQudC00LXRgNCwXG4gICAqIEBwYXJhbSB7SVNpemV9IHNpemUgLSDQvtCx0YrQtdC60YIg0YEg0YjQuNGA0LjQvdC+0Lkg0Lgg0LLRi9GB0L7RgtC+0Lkg0YHQu9Cw0LnQtNC10YDQsFxuICAgKi9cbiAgc2V0U2xpZGVyU2l6ZShzaXplOiBJU2l6ZSk6IHZvaWQge1xuICAgIHRoaXMuc2xpZGVyU2l6ZSA9IFNpbXBsZVNsaWRlck1vZGVsLmdldENvcnJlY3RTaXplKHNpemUsIDApO1xuICB9XG5cbiAgLyoqXG4gICAqINCj0YHRgtCw0L3QsNCy0LvQuNCy0LDQtdGCINGA0LDQt9C80LXRgCDQsdC10LPRg9C90LrQvtCyXG4gICAqIEBwYXJhbSB7SVNpemV9IHNpemUgLSDQvtCx0YrQtdC60YIg0YEg0YjQuNGA0LjQvdC+0Lkg0Lgg0LLRi9GB0L7RgtC+0Lkg0LHQtdCz0YPQvdC60LBcbiAgICovXG4gIHNldFRodW1iU2l6ZShzaXplOiBJU2l6ZSk6IHZvaWQge1xuICAgIHRoaXMudGh1bWJTaXplID0gU2ltcGxlU2xpZGVyTW9kZWwuZ2V0Q29ycmVjdFNpemUoc2l6ZSwgMCk7XG4gIH1cblxuICAvKipcbiAgICog0KHQvtGF0YDQsNC90Y/QtdGCINC30L3QsNGH0LXQvdC40Y8g0LHQtdCz0YPQvdC60L7QslxuICAgKiBAcGFyYW0ge0lUaHVtYnNWYWx1ZXN9IHRodW1icyAtINC+0LHRitC10LrRgiDRgdC+INC30L3QsNGH0LXQvdC40Y/QvNC4INCx0LXQs9GD0L3QutC+0LJcbiAgICovXG4gIHNldFRodW1ic1ZhbHVlcyh0aHVtYnM6IElUaHVtYnNWYWx1ZXMpOiB2b2lkIHtcbiAgICBjb25zdCB0aHVtYk9uZVBvcyA9IHRoaXMudGh1bWJWYWx1ZVRvUG9zKHRodW1icy50aHVtYk9uZSk7XG4gICAgbGV0IHRodW1iVHdvUG9zID0gbnVsbDtcbiAgICBpZiAodGhpcy50eXBlID09PSAncmFuZ2UnKSB7XG4gICAgICB0aHVtYlR3b1BvcyA9IHRoaXMudGh1bWJWYWx1ZVRvUG9zKHRodW1icy50aHVtYlR3byk7XG4gICAgfVxuICAgIHRoaXMudXBkYXRlVGh1bWJzU3RhdGUoeyB0aHVtYk9uZTogdGh1bWJPbmVQb3MsIHRodW1iVHdvOiB0aHVtYlR3b1BvcyB9KTtcbiAgfVxuXG4gIC8qKlxuICAgKiDQktC+0LfQstGA0LDRidCw0LXRgiDQvNC40L3QuNC80LDQu9GM0L3QvtC1INC30L3QsNGH0LXQvdC40LUg0YHQu9Cw0LnQtNC10YDQsFxuICAgKiBAcmV0dXJucyB7bnVtYmVyfSAtINC80LjQvdC40LzQsNC70YzQvdC+0LUg0LfQvdCw0YfQtdC90LjQtVxuICAgKi9cbiAgZ2V0TWluKCk6IG51bWJlciB7XG4gICAgcmV0dXJuIHRoaXMubWluO1xuICB9XG5cbiAgLyoqXG4gICAqINCS0L7Qt9Cy0YDQsNGJ0LDQtdGCINC80LDQutGB0LjQvNCw0LvRjNC90L7QtSDQt9C90LDRh9C10L3QuNC1INGB0LvQsNC50LTQtdGA0LBcbiAgICogQHJldHVybnMge251bWJlcn0gLSDQvNCw0LrRgdC40LzQsNC70YzQvdC+0LUg0LfQvdCw0YfQtdC90LjQtVxuICAgKi9cbiAgZ2V0TWF4KCk6IG51bWJlciB7XG4gICAgcmV0dXJuIHRoaXMubWF4O1xuICB9XG5cbiAgLyoqXG4gICAqINCS0L7Qt9Cy0YDQsNGJ0LDQtdGCINGI0LDQsyDRgSDQutC+0YLQvtGA0YvQvCDQv9C10YDQtdC80LXRidCw0LXRgtGB0Y8g0LHQtdCz0YPQvdC+0LpcbiAgICogQHJldHVybnMge251bWJlcn0gLSDQt9C90LDRh9C10L3QuNC1INGI0LDQs9CwXG4gICAqL1xuICBnZXRTdGVwKCk6IG51bWJlciB7XG4gICAgcmV0dXJuIHRoaXMuc3RlcDtcbiAgfVxuXG4gIC8qKlxuICAgKiDQktC+0LfQstGA0LDRidCw0LXRgiDRgdC+0YHRgtC+0Y/QvdC40LUg0YjQutCw0LvRiyAo0LLRi9C60LvRjtGH0LXQvdCwINC40LvQuCDQstC60LvRjtGH0LXQvdCwKVxuICAgKiBAcmV0dXJucyB7Ym9vbGVhbn0gLSDRgdC+0YHRgtC+0Y/QvdC40LUg0YjQutCw0LvRi1xuICAgKi9cbiAgZ2V0U2NhbGVTdGF0ZSgpOiBib29sZWFuIHtcbiAgICByZXR1cm4gdGhpcy5zY2FsZTtcbiAgfVxuXG4gIC8qKlxuICAgKiDQktC+0LfQstGA0LDRidCw0LXRgiDRgdC+0YHRgtC+0Y/QvdC40LUg0LLRgdC/0LvRi9Cy0LDRjtGJ0LjRhSDQv9C+0LTRgdC60LDQt9C+0LogKNCy0YvQutC70Y7Rh9C10L3RiyDQuNC70Lgg0L7RgtC60LvRjtGH0LXQvdGLKVxuICAgKiBAcmV0dXJucyB7Ym9vbGVhbn0gLSDRgdC+0YHRgtC+0Y/QvdC40LUg0LLRgdC/0LvRi9Cy0LDRjtGJ0LjRhSDQv9C+0LTRgdC60LDQt9C+0Log0L3QsNC0INCx0LXQs9GD0L3QutCw0LzQuFxuICAgKi9cbiAgZ2V0UG9wVXBzU3RhdGUoKTogYm9vbGVhbiB7XG4gICAgcmV0dXJuIHRoaXMucG9wVXBzO1xuICB9XG5cbiAgLyoqXG4gICAqINCS0L7Qt9Cy0YDQsNGJ0LDQtdGCINGC0LjQvyDRgdC70LDQudC00LXRgNCwICjQvtC00LjQvdC+0YfQvdGL0Lkg0LjQu9C4INC00LjQsNC/0LDQt9C+0L0pXG4gICAqIEByZXR1cm5zIHtzdHJpbmd9IC0g0YLQuNC/INGB0LvQsNC50LTQtdGA0LBcbiAgICovXG4gIGdldFR5cGUoKTogc3RyaW5nIHtcbiAgICByZXR1cm4gdGhpcy50eXBlO1xuICB9XG5cbiAgLyoqXG4gICAqINCS0L7Qt9Cy0YDQsNGJ0LDQtdGCINC+0YDQuNC10L3RgtCw0YbQuNGOINGB0LvQsNC50LTQtdGA0LAgKNCz0L7RgNC40LfQvtC90YLQsNC70YzQvdGL0Lkg0LjQu9C4INCy0LXRgNGC0LjQutCw0LvRjNC90YvQuSlcbiAgICogQHJldHVybnMge3N0cmluZ30gLSDQvtGA0LjQtdC90YLQsNGG0LjRjyDRgdC70LDQudC00LXRgNCwXG4gICAqL1xuICBnZXRPcmllbnRhdGlvbigpOiBzdHJpbmcge1xuICAgIHJldHVybiB0aGlzLm9yaWVudGF0aW9uO1xuICB9XG5cbiAgLyoqXG4gICAqINCS0L7Qt9Cy0YDQsNGJ0LDQtdGCINC+0LHRitC10LrRgiDRgSDQv9Cw0YDQsNC80LXRgtGA0LDQvNC4INC00LvRjyDQv9GA0L7Qs9GA0LXRgdGBLdCx0LDRgNCwXG4gICAqIEByZXR1cm5zIHtJUHJvZ3Jlc3NCYXJQYXJhbXN9IC0g0J7QsdGK0LXQutGCINGBINC/0L7Qt9C40YbQuNC10Lkg0Lgg0YDQsNC30LzQtdGA0LDQvNC4INC/0YDQvtCz0YDQtdGB0YEt0LHQsNGA0LBcbiAgICovXG4gIGdldFByb2dyZXNzQmFyUGFyYW1zKCk6IElQcm9ncmVzc0JhclBhcmFtcyB7XG4gICAgY29uc3QgdGh1bWJPbmVQb3MgPSB0aGlzLnRodW1iVmFsdWVUb1Bvcyh0aGlzLnRodW1iT25lVmFsdWUpO1xuICAgIGNvbnN0IHRodW1iVHdvUG9zID0gdGhpcy50aHVtYlZhbHVlVG9Qb3ModGhpcy50aHVtYlR3b1ZhbHVlKTtcbiAgICBjb25zdCBzaXplID0geyAuLi50aGlzLnNsaWRlclNpemUgfTtcbiAgICBjb25zdCBwb3NpdGlvbiA9IHsgbGVmdDogMCwgdG9wOiAwIH07XG4gICAgbGV0IHN0YXJ0ID0gMDtcbiAgICBsZXQgZW5kID0gMDtcblxuICAgIGlmICh0aGlzLnR5cGUgPT09ICdzaW5nbGUnKSB7XG4gICAgICBlbmQgPVxuICAgICAgICB0aGlzLnBvc0J5T3JpZW50YXRpb24odGh1bWJPbmVQb3MpICtcbiAgICAgICAgdGhpcy5zaXplQnlPcmllbnRhdGlvbih0aGlzLnRodW1iU2l6ZSk7XG4gICAgfSBlbHNlIHtcbiAgICAgIHN0YXJ0ID0gdGhpcy5wb3NCeU9yaWVudGF0aW9uKHRodW1iT25lUG9zKTtcbiAgICAgIGVuZCA9XG4gICAgICAgIHRoaXMucG9zQnlPcmllbnRhdGlvbih0aHVtYlR3b1BvcykgLVxuICAgICAgICB0aGlzLnBvc0J5T3JpZW50YXRpb24odGh1bWJPbmVQb3MpICtcbiAgICAgICAgdGhpcy5zaXplQnlPcmllbnRhdGlvbih0aGlzLnRodW1iU2l6ZSk7XG4gICAgfVxuXG4gICAgaWYgKHRoaXMub3JpZW50YXRpb24gPT09ICdob3Jpem9udGFsJykge1xuICAgICAgcG9zaXRpb24ubGVmdCA9IHN0YXJ0O1xuICAgICAgc2l6ZS53aWR0aCA9IGVuZDtcbiAgICB9IGVsc2Uge1xuICAgICAgcG9zaXRpb24udG9wID0gc3RhcnQ7XG4gICAgICBzaXplLmhlaWdodCA9IGVuZDtcbiAgICB9XG5cbiAgICByZXR1cm4geyBwb3NpdGlvbiwgc2l6ZSB9O1xuICB9XG5cbiAgLyoqXG4gICAqINCS0L7Qt9Cy0YDQsNGCINC+0LHRitC10LrRgtCwINGBINC/0L7Qt9C40YbQuNGP0LzQuCDQsdC10LPRg9C90LrQvtCyXG4gICAqIEByZXR1cm5zIHtJVGh1bWJzUG9zaXRpb25zfSAtINC+0LHRitC10LrRgiDRgSDQv9C+0LfQuNGG0LjRj9C80Lgg0LHQtdCz0YPQvdC60L7QsiDQvtGC0L3QvtGB0LjRgtC10LvRjNC90L4g0LvQtdCy0L7Qs9C+INC4INCy0LXRgNGF0L3QtdCz0L4g0LrRgNCw0Y9cbiAgICog0YDQvtC00LjRgtC10LvRjNGB0LrQvtCz0L4g0LrQvtC90YLQtdC50L3QtdGA0LBcbiAgICovXG4gIGdldFRodW1ic1BvcygpOiBJVGh1bWJzUG9zaXRpb25zIHtcbiAgICByZXR1cm4ge1xuICAgICAgdGh1bWJPbmU6IHRoaXMudGh1bWJWYWx1ZVRvUG9zKHRoaXMudGh1bWJPbmVWYWx1ZSksXG4gICAgICB0aHVtYlR3bzogdGhpcy50aHVtYlZhbHVlVG9Qb3ModGhpcy50aHVtYlR3b1ZhbHVlKSxcbiAgICB9O1xuICB9XG5cbiAgLyoqXG4gICAqINCS0L7Qt9Cy0YDQsNGJ0LDQtdGCINC+0LHRitC10LrRgiDRgSDQv9Cw0YDQsNC80LXRgtGA0LDQvNC4INC00LvRjyDQstGB0L/Qu9GL0LLQsNGO0YnQuNGFINC/0L7QtNGB0LrQsNC30L7QulxuICAgKiBAcmV0dXJucyB7SVBvcFVwc30gLSDQvtCx0YrQtdC60YIg0YEg0L/QvtC30LjRhtC40Y/QvNC4INC4INC30L3QsNGH0LXQvdC40Y/QvNC4INCy0YHQv9C70YvQstCw0Y7RidC40YUg0L/QvtC00YHQutCw0LfQvtC6XG4gICAqL1xuICBnZXRQb3BVcHNQYXJhbXMoKTogSVBvcFVwcyB7XG4gICAgcmV0dXJuIHtcbiAgICAgIHBvcFVwT25lOiB7XG4gICAgICAgIHZhbHVlOiB0aGlzLnRodW1iT25lVmFsdWUsXG4gICAgICAgIHBvc2l0aW9uOiB0aGlzLmdldFBvcFVwUG9zaXRpb24oXG4gICAgICAgICAgdGhpcy50aHVtYlZhbHVlVG9Qb3ModGhpcy50aHVtYk9uZVZhbHVlKSxcbiAgICAgICAgKSxcbiAgICAgIH0sXG4gICAgICBwb3BVcFR3bzoge1xuICAgICAgICB2YWx1ZTogdGhpcy50aHVtYlR3b1ZhbHVlLFxuICAgICAgICBwb3NpdGlvbjogdGhpcy5nZXRQb3BVcFBvc2l0aW9uKFxuICAgICAgICAgIHRoaXMudGh1bWJWYWx1ZVRvUG9zKHRoaXMudGh1bWJUd29WYWx1ZSksXG4gICAgICAgICksXG4gICAgICB9LFxuICAgIH07XG4gIH1cblxuICAvKipcbiAgICog0JLQvtC30LLRgNCw0YnQsNC10YIg0L7QsdGK0LXQutGCINGBINGC0LXQutGD0YnQuNC80Lgg0LfQvdCw0YfQtdC90LjRj9C80Lgg0LHQtdCz0YPQvdC60L7QslxuICAgKiBAcmV0dXJucyB7SVRodW1ic1ZhbHVlc30gLSDQvtCx0YrQtdC60YIg0YHQviDQt9C90LDRh9C10L3QuNGP0LzQuCDQsdC10LPRg9C90LrQvtCyXG4gICAqL1xuICBnZXRUaHVtYnNWYWx1ZXMoKTogSVRodW1ic1ZhbHVlcyB7XG4gICAgcmV0dXJuIHsgdGh1bWJPbmU6IHRoaXMudGh1bWJPbmVWYWx1ZSwgdGh1bWJUd286IHRoaXMudGh1bWJUd29WYWx1ZSB9O1xuICB9XG5cbiAgLyoqXG4gICAqINCS0L7Qt9Cy0YDQsNGJ0LDQtdGCINC80LDRgdGB0LjQsiDQvtCx0YrQtdC60YLQvtCyINGBINC90LDRgdGC0YDQvtC50LrQsNC80Lgg0LTQtdC70LXQvdC40Lkg0YjQutCw0LvRi1xuICAgKiBAcGFyYW0ge0lTaXplfSBzY2FsZVBvaW50U2l6ZSAtINC+0LHRitC10LrRgiDRgSDRgNCw0LfQvNC10YDQsNC80Lgg0YjQutCw0LvRi1xuICAgKiBAcmV0dXJucyB7SVNjYWxlUG9pbnRQYXJhbXNbXX0gLSDQvNCw0YHRgdC40LIg0L7QsdGK0LXQutGC0L7QsiDRgSDQvdCw0YHRgtGA0L7QudC60LDQvNC4INC00LXQu9C10L3QuNC5INGI0LrQsNC70YtcbiAgICovXG4gIGdldFNjYWxlUG9pbnRzKHNjYWxlUG9pbnRTaXplOiBJU2l6ZSk6IElTY2FsZVBvaW50UGFyYW1zW10ge1xuICAgIGNvbnN0IHNjYWxlUGFyYW1zID0gW107XG4gICAgY29uc3Qgc3RlcHNDb3VudCA9IHRoaXMuZ2V0U3RlcHNDb3VudCgpO1xuICAgIGNvbnN0IHN0ZXBTaXplOiBudW1iZXIgPSB0aGlzLmdldFN0ZXBTaXplKCk7XG4gICAgbGV0IHByZXZQb2ludFBvcyA9IDA7XG5cbiAgICBsZXQgcG9zaXRpb24gPVxuICAgICAgdGhpcy5zaXplQnlPcmllbnRhdGlvbih0aGlzLnRodW1iU2l6ZSkgLyAyIC1cbiAgICAgIHRoaXMuc2l6ZUJ5T3JpZW50YXRpb24oc2NhbGVQb2ludFNpemUpIC8gMjtcblxuICAgIGNvbnN0IHNjYWxlUG9pbnRzQ291bnQgPSBzdGVwc0NvdW50ICsgMTtcblxuICAgIGZvciAobGV0IGkgPSAwOyBpIDw9IE1hdGgucm91bmQoc2NhbGVQb2ludHNDb3VudCAtIDEpOyBpICs9IDEpIHtcbiAgICAgIGNvbnN0IHBvaW50VmFsdWUgPSB0aGlzLnRodW1iUG9zVG9WYWx1ZShcbiAgICAgICAgcG9zaXRpb24gLVxuICAgICAgICAgIHRoaXMuc2l6ZUJ5T3JpZW50YXRpb24odGhpcy50aHVtYlNpemUpIC8gMiArXG4gICAgICAgICAgdGhpcy5zaXplQnlPcmllbnRhdGlvbihzY2FsZVBvaW50U2l6ZSkgLyAyLFxuICAgICAgKTtcblxuICAgICAgcG9zaXRpb24gPSB0aGlzLmdldE5leHRTY2FsZVBvaW50UG9zKHBvc2l0aW9uLCBzY2FsZVBvaW50U2l6ZSk7XG5cbiAgICAgIGlmICh0aGlzLmlzUG9pbnRGaXRzKGksIHBvc2l0aW9uLCBwcmV2UG9pbnRQb3MsIHNjYWxlUG9pbnRTaXplKSkge1xuICAgICAgICBjb25zdCBwb2ludFBvcyA9IHsgbGVmdDogMCwgdG9wOiAwIH07XG4gICAgICAgIGlmICh0aGlzLm9yaWVudGF0aW9uID09PSAnaG9yaXpvbnRhbCcpIHtcbiAgICAgICAgICBwb2ludFBvcy5sZWZ0ID0gcG9zaXRpb247XG4gICAgICAgIH0gZWxzZSB7XG4gICAgICAgICAgcG9pbnRQb3MudG9wID0gcG9zaXRpb247XG4gICAgICAgIH1cblxuICAgICAgICBzY2FsZVBhcmFtcy5wdXNoKHtcbiAgICAgICAgICBwb3NpdGlvbjogcG9pbnRQb3MsXG4gICAgICAgICAgc2l6ZTogc2NhbGVQb2ludFNpemUsXG4gICAgICAgICAgdmFsdWU6IHBvaW50VmFsdWUsXG4gICAgICAgIH0pO1xuXG4gICAgICAgIHByZXZQb2ludFBvcyA9IHBvc2l0aW9uO1xuICAgICAgfVxuXG4gICAgICBwb3NpdGlvbiArPSBzdGVwU2l6ZTtcbiAgICB9XG4gICAgcmV0dXJuIHNjYWxlUGFyYW1zO1xuICB9XG5cbiAgLyoqXG4gICAqINCf0YDQvtCy0LXRgNGP0LXRgiDQv9C+0LzQtdGJ0LDQtdGC0YHRjyDQu9C4INGC0L7Rh9C60LAg0L3QsCDRiNC60LDQu9C1INCx0LXQtyDQv9C10YDQtdGB0LXRh9C10L3QuNGPINGBINC00YDRg9Cz0LjQvNC4INGC0L7Rh9C60LDQvNC4LCDQtdGB0LvQuCDQvdC10YIsINGC0L4g0L7QvdCwXG4gICAqINC90LUg0LTQvtCx0LDQstC70Y/QtdGC0YHRjyDQvdCwINGI0LrQsNC70YNcbiAgICogQHBhcmFtIHtudW1iZXJ9IGluZGV4IC0g0LjQvdC00LXQutGBINGC0L7Rh9C60LhcbiAgICogQHBhcmFtIHtudW1iZXJ9IHBvaW50UG9zIC0g0YLQtdC60YPRidCw0Y8g0L/QvtC30LjRhtC40Y8g0YLQvtGH0LrQuFxuICAgKiBAcGFyYW0ge251bWJlcn0gcHJldlBvaW50UG9zIC0g0L/QvtC30LjRhtC40Y8g0L/RgNC10LTRi9C00YPRidC10Lkg0YLQvtGH0LrQuFxuICAgKiBAcGFyYW0ge0lTaXplfSBzY2FsZVBvaW50U2l6ZSAtINC+0LHRitC10LrRgiDRgSDRgNCw0LfQvNC10YDQvtC8INGC0L7Rh9C60LhcbiAgICogQHJldHVybnMge2Jvb2xlYW59IC0g0YDQtdC30YPQu9GM0YLQsNGCINC70L7Qs9C40YfQtdGB0LrQvtCz0L4g0LLRi9GA0LDQttC10L3QuNGPXG4gICAqL1xuICBwcml2YXRlIGlzUG9pbnRGaXRzKFxuICAgIGluZGV4OiBudW1iZXIsXG4gICAgcG9pbnRQb3M6IG51bWJlcixcbiAgICBwcmV2UG9pbnRQb3M6IG51bWJlcixcbiAgICBzY2FsZVBvaW50U2l6ZTogSVNpemUsXG4gICk6IGJvb2xlYW4ge1xuICAgIHJldHVybiAoXG4gICAgICBpbmRleCA9PT0gMCB8fFxuICAgICAgcG9pbnRQb3MgLSBwcmV2UG9pbnRQb3MgPiB0aGlzLnNpemVCeU9yaWVudGF0aW9uKHNjYWxlUG9pbnRTaXplKVxuICAgICk7XG4gIH1cblxuICAvKipcbiAgICog0KHQvtGF0YDQsNC90Y/QtdGCINC30L3QsNGH0LXQvdC40LUg0LHQtdCz0YPQvdC60LAsINCx0LvQuNC20LDQudGI0LXQs9C+INC6INC80LXRgdGC0YMg0LrQu9C40LrQsCDQv9C+INGI0LrQsNC70LUsINC70LjQsdC+INGC0YDQtdC60YNcbiAgICogQHBhcmFtIHtJUG9zaXRpb259IGNsaWNrUG9zaXRpb24gLSDQvtCx0YrQtdC60YIg0YEg0L/QvtC30LjRhtC40LXQuSDQutC70LjQutCwXG4gICAqL1xuICBzZXRUaHVtYlBvc09uQ2xpY2tQb3MoY2xpY2tQb3NpdGlvbjogSVBvc2l0aW9uKTogdm9pZCB7XG4gICAgY29uc3QgcG9zaXRpb24gPSB7XG4gICAgICBsZWZ0OiBjbGlja1Bvc2l0aW9uLmxlZnQgLSB0aGlzLnRodW1iU2l6ZS53aWR0aCAvIDIsXG4gICAgICB0b3A6IGNsaWNrUG9zaXRpb24udG9wIC0gdGhpcy50aHVtYlNpemUuaGVpZ2h0IC8gMixcbiAgICB9O1xuICAgIGxldCB0aHVtYk9uZSA9IHRoaXMudGh1bWJPbmVWYWx1ZTtcbiAgICBsZXQgdGh1bWJUd28gPSB0aGlzLnRodW1iVHdvVmFsdWU7XG5cbiAgICBpZiAodGhpcy50aHVtYlR3b0lzTmVhclRvQ2xpY2socG9zaXRpb24pKSB7XG4gICAgICB0aHVtYlR3byA9IHRoaXMudGh1bWJQb3NUb1ZhbHVlKHRoaXMucG9zQnlPcmllbnRhdGlvbihwb3NpdGlvbikpO1xuICAgIH0gZWxzZSB7XG4gICAgICB0aHVtYk9uZSA9IHRoaXMudGh1bWJQb3NUb1ZhbHVlKHRoaXMucG9zQnlPcmllbnRhdGlvbihwb3NpdGlvbikpO1xuICAgIH1cblxuICAgIHRoaXMuc2V0VGh1bWJzVmFsdWVzKHsgdGh1bWJPbmUsIHRodW1iVHdvIH0pO1xuICB9XG5cbiAgLyoqXG4gICAqINCS0YvRh9C40YHQu9GP0LXRgiwg0L3QsNGF0L7QtNC40YLRgdGPINC70Lgg0LLRgtC+0YDQvtC5INCx0LXQs9GD0L3QvtC6INCx0LvQuNC20LUg0Log0LzQtdGB0YLRgyDQutC70LjQutCwINC/0L4g0YjQutCw0LvQtSDQuNC70Lgg0YLRgNC10LrRg1xuICAgKiBAcGFyYW0ge0lQb3NpdGlvbn0gcG9zaXRpb24gLSDQvtCx0YrQtdC60YIg0YEg0L/QvtC30LjRhtC40LXQuSDQutC70LjQutCwXG4gICAqIEByZXR1cm5zIHtib29sZWFufSAtINC30L3QsNGH0LXQvdC40LUg0L/QvtC60LDQt9GL0LLQsNGO0YnQtdC1INC40YHRgtC40L3QvdC+0YHRgtGMINGC0L7Qs9C+LCDRh9GC0L4g0LLRgtC+0YDQvtC5INCx0LXQs9GD0L3QvtC6INC90LDRhdC+0LTQuNGC0YHRjyDQsdC70LjQttC1XG4gICAqINC6INC80LXRgdGC0YMg0LrQu9C40LrQsCwg0YfQtdC8INC/0LXRgNCy0YvQuVxuICAgKi9cbiAgcHJpdmF0ZSB0aHVtYlR3b0lzTmVhclRvQ2xpY2socG9zaXRpb246IElQb3NpdGlvbik6IGJvb2xlYW4ge1xuICAgIGlmICh0aGlzLnR5cGUgPT09ICdyYW5nZScpIHtcbiAgICAgIHJldHVybiAoXG4gICAgICAgIE1hdGguYWJzKFxuICAgICAgICAgIHRoaXMucG9zQnlPcmllbnRhdGlvbihwb3NpdGlvbikgLVxuICAgICAgICAgICAgdGhpcy5wb3NCeU9yaWVudGF0aW9uKHRoaXMudGh1bWJWYWx1ZVRvUG9zKHRoaXMudGh1bWJUd29WYWx1ZSkpLFxuICAgICAgICApIDxcbiAgICAgICAgTWF0aC5hYnMoXG4gICAgICAgICAgdGhpcy5wb3NCeU9yaWVudGF0aW9uKHBvc2l0aW9uKSAtXG4gICAgICAgICAgICB0aGlzLnBvc0J5T3JpZW50YXRpb24odGhpcy50aHVtYlZhbHVlVG9Qb3ModGhpcy50aHVtYk9uZVZhbHVlKSksXG4gICAgICAgIClcbiAgICAgICk7XG4gICAgfVxuXG4gICAgcmV0dXJuIGZhbHNlO1xuICB9XG5cbiAgLyoqXG4gICAqINCS0L7Qt9Cy0YDQsNGJ0LDQtdGCINC60L7RgNGA0LXQutGC0L3Ri9C5INGA0LDQt9C80LXRgCDQsiDRgdC+0L7RgtCy0LXRgtGB0YLQstC40Lgg0YEg0LfQsNC00LDQvdC90YvQvCDQvNC40L3QuNC80YPQvNC+0LxcbiAgICogQHBhcmFtIHtJU2l6ZX0gc2l6ZSAtINC+0LHRitC10LrRgiDRgSDRiNC40YDQuNC90L7QuSDQuCDQstGL0YHQvtGC0L7QuVxuICAgKiBAcGFyYW0ge251bWJlcn0gbWluIC0g0LzQuNC90LjQvNCw0LvRjNC90L7QtSDQt9C90LDRh9C10L3QuNC1INGI0LjRgNC40L3RiyDQuCDQstGL0YHQvtGC0YtcbiAgICogQHJldHVybnMge0lTaXplfSAtINC+0LHRitC10LrRgiDRgSDQutC+0YDRgNC10LrRgtC90YvQvNC4INGA0LDQt9C80LXRgNCw0LzQuFxuICAgKi9cbiAgcHJpdmF0ZSBzdGF0aWMgZ2V0Q29ycmVjdFNpemUoc2l6ZTogSVNpemUsIG1pbjogbnVtYmVyKTogSVNpemUge1xuICAgIGNvbnN0IHdpZHRoID0gc2l6ZS53aWR0aCA+PSBtaW4gPyBzaXplLndpZHRoIDogbWluO1xuICAgIGNvbnN0IGhlaWdodCA9IHNpemUuaGVpZ2h0ID49IG1pbiA/IHNpemUuaGVpZ2h0IDogbWluO1xuICAgIHJldHVybiB7IHdpZHRoLCBoZWlnaHQgfTtcbiAgfVxuXG4gIC8qKlxuICAgKiDQktC+0LfQstGA0LDRidCw0LXRgiDQv9C+0LfQuNGG0LjRjiDQstGB0L/Qu9GL0LLQsNGO0YnQtdC5INC/0L7QtNGB0LrQsNC30LrQuFxuICAgKiBAcGFyYW0ge0lQb3NpdGlvbn0gdGh1bWJQb3NpdGlvbiAtINC+0LHRitC10LrRgiDRgSDQv9C+0LfQuNGG0LjQtdC5INCx0LXQs9GD0L3QutCwLFxuICAgKiDRgNGP0LTQvtC8INGBINC60L7RgtC+0YDRi9C8INCx0YPQtNC10YIg0YDQsNGB0L/QvtC70LDQs9Cw0YLRjNGB0Y8g0LLRgdC/0LvRi9Cy0LDRjtGJ0LDRjyDQv9C+0LTRgdC60LDQt9C60LBcbiAgICogQHJldHVybnMge0lQb3NpdGlvbn0gLSDQvtCx0YrQtdC60YIg0YEg0L/QvtC30LjRhtC40LXQuSDQstGB0L/Qu9GL0LLQsNGO0YnQtdC5INC/0L7QtNGB0LrQsNC30LrQuFxuICAgKi9cbiAgcHJpdmF0ZSBnZXRQb3BVcFBvc2l0aW9uKHRodW1iUG9zaXRpb246IElQb3NpdGlvbik6IElQb3NpdGlvbiB7XG4gICAgbGV0IGxlZnQgPSAwO1xuICAgIGxldCB0b3AgPSAwO1xuXG4gICAgaWYgKHRoaXMub3JpZW50YXRpb24gPT09ICdob3Jpem9udGFsJykge1xuICAgICAgbGVmdCA9IHRodW1iUG9zaXRpb24ubGVmdCArIHRoaXMudGh1bWJTaXplLndpZHRoIC8gMjtcbiAgICB9IGVsc2Uge1xuICAgICAgdG9wID0gdGh1bWJQb3NpdGlvbi50b3AgKyB0aGlzLnRodW1iU2l6ZS5oZWlnaHQgLyAyO1xuICAgIH1cblxuICAgIHJldHVybiB7IGxlZnQsIHRvcCB9O1xuICB9XG5cbiAgLyoqXG4gICAqINCj0YHRgtCw0L3QsNCy0LvQuNCy0LDQtdGCINC80LjQvdC40LzQsNC70YzQvdC+0LUg0LfQvdCw0YfQtdC90LjQtSDRgdC70LDQudC00LXRgNCwXG4gICAqIEBwYXJhbSB7bnVtYmVyfSB2YWx1ZSAtINC90L7QstC+0LUg0LfQvdCw0YfQtdC90LjQtSDQvNC40L3QuNC80YPQvNCwXG4gICAqL1xuICBwcml2YXRlIHVwZGF0ZU1pblZhbHVlKHZhbHVlOiBudW1iZXIpOiB2b2lkIHtcbiAgICBsZXQgbmV3TWluID0gdmFsdWU7XG4gICAgaWYgKG5ld01pbiA+PSB0aGlzLm1heCkge1xuICAgICAgbmV3TWluID0gdGhpcy5tYXggLSAxO1xuICAgIH1cbiAgICB0aGlzLm1pbiA9IG5ld01pbjtcbiAgICB0aGlzLnN1YmplY3Qubm90aWZ5KCdtaW5Jc1VwZGF0ZWQnKTtcbiAgfVxuXG4gIC8qKlxuICAgKiDQo9GB0YLQsNC90LDQstC70LjQstCw0LXRgiDQvNCw0LrRgdC40LzQsNC70YzQvdC+0LUg0LfQvdCw0YfQtdC90LjQtSDRgdC70LDQudC00LXRgNCwXG4gICAqIEBwYXJhbSB7bnVtYmVyfSB2YWx1ZSAtINC90L7QstC+0LUg0LfQvdCw0YfQtdC90LjQtSDQvNCw0LrRgdC40LzRg9C80LBcbiAgICovXG4gIHByaXZhdGUgdXBkYXRlTWF4VmFsdWUodmFsdWU6IG51bWJlcik6IHZvaWQge1xuICAgIGxldCBuZXdNYXggPSB2YWx1ZTtcbiAgICBpZiAobmV3TWF4IDw9IHRoaXMubWluKSB7XG4gICAgICBuZXdNYXggPSB0aGlzLm1pbiArIDE7XG4gICAgfVxuICAgIHRoaXMubWF4ID0gbmV3TWF4O1xuICAgIHRoaXMuc3ViamVjdC5ub3RpZnkoJ21heElzVXBkYXRlZCcpO1xuICB9XG5cbiAgLyoqXG4gICAqINCj0YHRgtCw0L3QsNCy0LvQuNCy0LDQtdGCINGA0LDQt9C80LXRgCDRiNCw0LPQsCDQsdC10LPRg9C90LrQsFxuICAgKiBAcGFyYW0ge251bWJlcn0gdmFsdWUgLSDQvdC+0LLQvtC1INC30L3QsNGH0LXQvdC40LUg0YjQsNCz0LBcbiAgICovXG4gIHByaXZhdGUgdXBkYXRlU3RlcCh2YWx1ZTogbnVtYmVyKTogdm9pZCB7XG4gICAgbGV0IG5ld1N0ZXAgPSB2YWx1ZTtcbiAgICBpZiAobmV3U3RlcCA8PSAwKSB7XG4gICAgICBuZXdTdGVwID0gMTtcbiAgICB9XG4gICAgdGhpcy5zdGVwID0gbmV3U3RlcDtcbiAgICB0aGlzLnN1YmplY3Qubm90aWZ5KCdzdGVwSXNVcGRhdGVkJyk7XG4gIH1cblxuICAvKipcbiAgICog0JLQvtC30LLRgNCw0YnQtdC90LjQtSDQt9C90LDRh9C10L3QuNC1INCx0LXQs9GD0L3QutCwINCyINGB0L7QvtGC0LLQtdGC0YHRgtCy0LjQuCDRgSDQt9Cw0LTQsNC90L3Ri9C8INGI0LDQs9C+0Lwg0LjRgdGF0L7QtNGPINC40LdcbiAgICog0LXQs9C+INC/0L7Qt9C40YbQuNC4XG4gICAqIEBwYXJhbSB7bnVtYmVyfSBwb3NpdGlvbiAtINC/0L7Qt9C40YbQuNGPINCx0LXQs9GD0L3QutCwINC+0YLQvdC+0YHQuNGC0LXQu9GM0L3QviDQu9C10LLQvtCz0L4g0LjQu9C4INCy0LXRgNGF0L3QtdCz0L5cbiAgICog0LrRgNCw0Y8g0YDQvtC00LjRgtC10LvRjNGB0LrQvtCz0L4g0LrQvtC90YLQtdC50L3QtdGA0LBcbiAgICogQHJldHVybnMge251bWJlcn0gLSDQt9C90LDRh9C10L3QuNC1INCx0LXQs9GD0L3QutCwINCyINGB0L7QvtGC0LLQtdGC0YHRgtCy0LjQuCDRgSDQt9Cw0LTQsNC90L3Ri9C8INGI0LDQs9C+0LxcbiAgICovXG4gIHByaXZhdGUgdmFsdWVXaXRoU3RlcChwb3NpdGlvbjogbnVtYmVyKTogbnVtYmVyIHtcbiAgICBpZiAodGhpcy50aHVtYlBvc1RvVmFsdWUocG9zaXRpb24pID49IHRoaXMubWF4KSB7XG4gICAgICByZXR1cm4gdGhpcy50aHVtYlBvc1RvVmFsdWUocG9zaXRpb24pO1xuICAgIH1cblxuICAgIGNvbnN0IHN0ZXBTaXplID0gdGhpcy5nZXRTdGVwU2l6ZSgpO1xuICAgIGNvbnN0IG5ld1Bvc2l0aW9uID0gTWF0aC5yb3VuZChwb3NpdGlvbiAvIHN0ZXBTaXplKSAqIHN0ZXBTaXplO1xuXG4gICAgcmV0dXJuIHRoaXMudGh1bWJQb3NUb1ZhbHVlKG5ld1Bvc2l0aW9uKTtcbiAgfVxuXG4gIC8qKlxuICAgKiDQktC+0LfQstGA0LDRidCw0LXRgiDQutC+0LvQuNGH0LXRgdGC0LLQviDRiNCw0LPQvtCyINCx0LXQs9GD0L3QutCwXG4gICAqIEByZXR1cm5zIHtudW1iZXJ9IC0g0LrQvtC70LjRh9C10YHRgtCy0L4g0YjQsNCz0L7QsiDQsdC10LPRg9C90LrQsFxuICAgKi9cbiAgcHJpdmF0ZSBnZXRTdGVwc0NvdW50KCk6IG51bWJlciB7XG4gICAgcmV0dXJuICh0aGlzLm1heCAtIHRoaXMubWluKSAvIHRoaXMuc3RlcDtcbiAgfVxuXG4gIC8qKlxuICAgKiDQktC+0LfQstGA0LDRidCw0LXRgiDRgNCw0LfQvNC10YAg0L7QtNC90L7Qs9C+INGI0LDQs9CwINCx0LXQs9GD0L3QutCwXG4gICAqIEByZXR1cm5zIHtudW1iZXJ9IC0g0YDQsNC30LzQtdGAINC+0LTQvdC+0LPQviDRiNCw0LPQsCDQsdC10LPRg9C90LrQsFxuICAgKi9cbiAgcHJpdmF0ZSBnZXRTdGVwU2l6ZSgpOiBudW1iZXIge1xuICAgIGNvbnN0IHN0ZXBzQ291bnQgPSB0aGlzLmdldFN0ZXBzQ291bnQoKTtcbiAgICByZXR1cm4gKFxuICAgICAgKHRoaXMuc2l6ZUJ5T3JpZW50YXRpb24odGhpcy5zbGlkZXJTaXplKSAtXG4gICAgICAgIHRoaXMuc2l6ZUJ5T3JpZW50YXRpb24odGhpcy50aHVtYlNpemUpKSAvXG4gICAgICBzdGVwc0NvdW50XG4gICAgKTtcbiAgfVxuXG4gIC8qKlxuICAgKiDQktC+0LfQstGA0LDRidC10L3QuNC1INC30L3QsNGH0LXQvdC40Y8g0LHQtdCz0YPQvdC60LAg0LjRgdGF0L7QtNGPINC40Lcg0LXQs9C+INC/0L7Qt9C40YbQuNC4XG4gICAqIEBwYXJhbSB7bnVtYmVyfSBwb3NpdGlvbiAtINC/0L7Qt9C40YbQuNGPINCx0LXQs9GD0L3QutCwINC+0YLQvdC+0YHQuNGC0LXQu9GM0L3QviDQu9C10LLQvtCz0L4g0LjQu9C4INCy0LXRgNGF0L3QtdCz0L5cbiAgICog0LrRgNCw0Y8g0YDQvtC00LjRgtC10LvRjNGB0LrQvtCz0L4g0LrQvtC90YLQtdC50L3QtdGA0LBcbiAgICogQHJldHVybnMge251bWJlcn0gLSDQt9C90LDRh9C10L3QuNC1INCx0LXQs9GD0L3QutCwXG4gICAqL1xuICBwcml2YXRlIHRodW1iUG9zVG9WYWx1ZShwb3NpdGlvbjogbnVtYmVyKTogbnVtYmVyIHtcbiAgICBjb25zdCBwaXhlbHNQZXJWYWx1ZSA9IHRoaXMuZ2V0UHhQZXJWYWx1ZSgpO1xuXG4gICAgbGV0IG5ld1ZhbHVlID0gTWF0aC5yb3VuZChcbiAgICAgIHRoaXMubWluICtcbiAgICAgICAgKCh0aGlzLm1heCAtIHRoaXMubWluKSAvIHRoaXMubWF4KSAqXG4gICAgICAgICAgTWF0aC5yb3VuZChwb3NpdGlvbiAvIHBpeGVsc1BlclZhbHVlKSxcbiAgICApO1xuXG4gICAgbmV3VmFsdWUgPSBuZXdWYWx1ZSA8IHRoaXMubWluID8gdGhpcy5taW4gOiBuZXdWYWx1ZTtcbiAgICBuZXdWYWx1ZSA9IG5ld1ZhbHVlID4gdGhpcy5tYXggPyB0aGlzLm1heCA6IG5ld1ZhbHVlO1xuXG4gICAgcmV0dXJuIG5ld1ZhbHVlO1xuICB9XG5cbiAgLyoqXG4gICAqINCS0L7Qt9Cy0YDQsNGJ0LXQvdC40LUg0L/QvtC30LjRhtC40Lgg0LHQtdCz0YPQvdC60LAg0LjRgdGF0L7QtNGPINC40Lcg0LXQs9C+INC30L3QsNGH0LXQvdC40Y9cbiAgICogQHBhcmFtIHtudW1iZXJ9IHZhbHVlIC0g0LfQvdCw0YfQtdC90LjQtSDQsdC10LPRg9C90LrQsFxuICAgKiBAcmV0dXJucyB7SVRodW1iUG9zaXRpb259IC0g0L7QsdGK0LXQutGCINGBINC/0L7Qt9C40YbQuNC10Lkg0LHQtdCz0YPQvdC60LAg0L7RgtC90L7RgdC40YLQtdC70YzQvdC+INC70LXQstC+0LPQviDQuCDQstC10YDRhdC90LXQs9C+INC60YDQsNGPXG4gICAqINGA0L7QtNC40YLQtdC70YzRgdC60L7Qs9C+INC60L7QvdGC0LXQudC90LXRgNCwXG4gICAqL1xuICBwcml2YXRlIHRodW1iVmFsdWVUb1Bvcyh2YWx1ZTogbnVtYmVyKTogSVBvc2l0aW9uIHtcbiAgICBjb25zdCBwb3NpdGlvbiA9IHsgbGVmdDogMCwgdG9wOiAwIH07XG4gICAgY29uc3QgcHhQZXJWYWwgPSB0aGlzLmdldFB4UGVyVmFsdWUoKTtcbiAgICBsZXQgdGh1bWJWYWx1ZSA9IHZhbHVlO1xuXG4gICAgaWYgKHRodW1iVmFsdWUgPCB0aGlzLm1pbikge1xuICAgICAgdGh1bWJWYWx1ZSA9IHRoaXMubWluO1xuICAgIH0gZWxzZSBpZiAodGh1bWJWYWx1ZSA+IHRoaXMubWF4KSB7XG4gICAgICB0aHVtYlZhbHVlID0gdGhpcy5tYXg7XG4gICAgfVxuXG4gICAgY29uc3QgcG9zVmFsdWUgPVxuICAgICAgKCh0aHVtYlZhbHVlIC0gdGhpcy5taW4pIC8gKHRoaXMubWF4IC0gdGhpcy5taW4pKSAqIHB4UGVyVmFsICogdGhpcy5tYXg7XG5cbiAgICBpZiAodGhpcy5vcmllbnRhdGlvbiA9PT0gJ2hvcml6b250YWwnKSB7XG4gICAgICBwb3NpdGlvbi5sZWZ0ID0gcG9zVmFsdWU7XG4gICAgfSBlbHNlIHtcbiAgICAgIHBvc2l0aW9uLnRvcCA9IHBvc1ZhbHVlO1xuICAgIH1cblxuICAgIHJldHVybiBwb3NpdGlvbjtcbiAgfVxuXG4gIC8qKlxuICAgKiDQktC+0LfQstGA0LDRidCw0LXRgiDQutC+0LvQuNGH0LXRgdGC0LLQviDQv9C40LrRgdC10LvQtdC5INCyINC10LTQuNC90LjRhtC1INGI0LjRgNC40L3RiyDRgdC70LDQudC00LXRgNCwLCDRgSDQstGL0YfQtdGC0L7QvCDQutGA0LDQudC90LjRhSDQt9C+0L1cbiAgICogQHJldHVybnMge251bWJlcn0gLSDQutC+0LvQuNGH0LXRgdGC0LLQviDQv9C40LrRgdC10LvQtdC5INCyINC10LTQuNC90LjRhtC1INGI0LjRgNC40L3RiyDRgdC70LDQudC00LXRgNCwXG4gICAqL1xuICBwcml2YXRlIGdldFB4UGVyVmFsdWUoKTogbnVtYmVyIHtcbiAgICByZXR1cm4gKFxuICAgICAgKHRoaXMuc2l6ZUJ5T3JpZW50YXRpb24odGhpcy5zbGlkZXJTaXplKSAtXG4gICAgICAgIHRoaXMuc2l6ZUJ5T3JpZW50YXRpb24odGhpcy50aHVtYlNpemUpKSAvXG4gICAgICB0aGlzLm1heFxuICAgICk7XG4gIH1cblxuICAvKipcbiAgICog0JLQvtC30LLRgNCw0YnQtdC90LjQtSDRiNC40YDQuNC90Ysg0LjQu9C4INCy0YvRgdC+0YLRiyDQvtCx0YrQtdC60YLQsCwg0LIg0LfQsNCy0LjRgdC40LzQvtGB0YLQuCDQvtGCINC+0YDQuNC10L3RgtCw0YbQuNC4INGB0LvQsNC50LTQtdGA0LBcbiAgICogQHBhcmFtIHtJU2l6ZX0gc2l6ZSAtINC+0LHRitC10LrRgiDRgSDRiNC40YDQuNC90L7QuSDQuCDQstGL0YHQvtGC0L7QuSDQvtCx0YrQtdC60YLQsFxuICAgKiBAcmV0dXJucyB7bnVtYmVyfSAtINC30L3QsNGH0LXQvdC40LUg0YjQuNGA0LjQvdGLINC40LvQuCDQstGL0YHQvtGC0Ysg0L7QsdGK0LXQutGC0LBcbiAgICovXG4gIHByaXZhdGUgc2l6ZUJ5T3JpZW50YXRpb24oc2l6ZTogSVNpemUpOiBudW1iZXIge1xuICAgIGlmICh0aGlzLm9yaWVudGF0aW9uID09PSAnaG9yaXpvbnRhbCcpIHtcbiAgICAgIHJldHVybiBzaXplLndpZHRoO1xuICAgIH1cblxuICAgIHJldHVybiBzaXplLmhlaWdodDtcbiAgfVxuXG4gIC8qKlxuICAgKiDQktC+0LfQstGA0LDRidC10L3QuNC1INC70LXQstC+0LPQviDQuNC70Lgg0LLQtdGA0YXQvdC10LPQviDQvtGC0YHRgtGD0L/QsCDQvtCx0YrQtdC60YLQsCwg0LIg0LfQsNCy0LjRgdC40LzQvtGB0YLQuCDQvtGCINC+0YDQuNC10L3RgtCw0YbQuNC4INGB0LvQsNC50LTQtdGA0LBcbiAgICogQHBhcmFtIHtJUG9zaXRpb259IHBvc2l0aW9uIC0g0L7QsdGK0LXQutGCINGBINC/0L7Qt9C40YbQuNC10LlcbiAgICogQHJldHVybnMge251bWJlcn0gLSDQt9C90LDRh9C10L3QuNC1INC70LXQstC+0LPQviDQuNC70Lgg0LLQtdGA0YXQvdC10LPQviDQvtGC0YHRgtGD0L/QsCDQvtCx0YrQtdC60YLQsFxuICAgKi9cbiAgcHJpdmF0ZSBwb3NCeU9yaWVudGF0aW9uKHBvc2l0aW9uOiBJUG9zaXRpb24pOiBudW1iZXIge1xuICAgIGlmICh0aGlzLm9yaWVudGF0aW9uID09PSAnaG9yaXpvbnRhbCcpIHtcbiAgICAgIHJldHVybiBwb3NpdGlvbi5sZWZ0O1xuICAgIH1cblxuICAgIHJldHVybiBwb3NpdGlvbi50b3A7XG4gIH1cblxuICAvKipcbiAgICog0JLQvtC30LLRgNCw0YnQsNC10YIg0L/QvtC30LjRhtC40Y4g0YHQu9C10LTRg9GO0YnQtdCz0L4g0LTQtdC70LXQvdC40Y8g0YjQutCw0LvRi1xuICAgKiBAcGFyYW0ge251bWJlcn0gcG9zaXRpb24gLSDQv9C+0LfQuNGG0LjRjyDQv9C+0YHQu9C10LTQvdC10LPQviDQtNC10LvQtdC90LjRj1xuICAgKiBAcGFyYW0ge0lTaXplfSBwb2ludFNpemUgLSDQvtCx0YrQtdC60YIg0YEg0YDQsNC30LzQtdGA0LDQvNC4INC00LXQu9C10L3QuNGPXG4gICAqIEByZXR1cm5zIHtudW1iZXJ9IC0g0L/QvtC30LjRhtC40Y8g0YHQu9C10LTRg9GO0YnQtdCz0L4g0LTQtdC70LXQvdC40Y9cbiAgICovXG4gIHByaXZhdGUgZ2V0TmV4dFNjYWxlUG9pbnRQb3MocG9zaXRpb246IG51bWJlciwgcG9pbnRTaXplOiBJU2l6ZSk6IG51bWJlciB7XG4gICAgbGV0IG5ld1Bvc2l0aW9uID0gcG9zaXRpb247XG5cbiAgICBjb25zdCBleHRyZW1lUG9zaXRpb24gPVxuICAgICAgdGhpcy5zaXplQnlPcmllbnRhdGlvbih0aGlzLnNsaWRlclNpemUpIC1cbiAgICAgIHRoaXMuc2l6ZUJ5T3JpZW50YXRpb24odGhpcy50aHVtYlNpemUpIC8gMiAtXG4gICAgICB0aGlzLnNpemVCeU9yaWVudGF0aW9uKHBvaW50U2l6ZSkgLyAyO1xuXG4gICAgaWYgKG5ld1Bvc2l0aW9uID4gZXh0cmVtZVBvc2l0aW9uKSB7XG4gICAgICBuZXdQb3NpdGlvbiA9IGV4dHJlbWVQb3NpdGlvbjtcbiAgICB9XG5cbiAgICByZXR1cm4gbmV3UG9zaXRpb247XG4gIH1cbn1cblxuZXhwb3J0IGRlZmF1bHQgU2ltcGxlU2xpZGVyTW9kZWw7XG4iLCIvKiBlc2xpbnQtZGlzYWJsZSBjb21tYS1kYW5nbGUgKi9cblxuaW1wb3J0IHtcbiAgSUNvbnRyb2xsZXJQYXJhbXMsXG4gIElPYnNlcnZlcixcbiAgSVNpbXBsZVNsaWRlck1vZGVsLFxuICBJU2ltcGxlU2xpZGVyVmlldyxcbiAgSVN1YmplY3QsXG59IGZyb20gJy4uL2ludGVyZmFjZXMnO1xuXG5jbGFzcyBTaW1wbGVTbGlkZXJDb250cm9sbGVyIGltcGxlbWVudHMgSU9ic2VydmVyIHtcbiAgcHJpdmF0ZSBtb2RlbDogSVNpbXBsZVNsaWRlck1vZGVsO1xuICBwcml2YXRlIHZpZXc6IElTaW1wbGVTbGlkZXJWaWV3O1xuICBwcml2YXRlIG1vZGVsU3ViamVjdDogSVN1YmplY3Q7XG4gIHByaXZhdGUgdmlld1N1YmplY3Q6IElTdWJqZWN0O1xuXG4gIGNvbnN0cnVjdG9yKHBhcmFtczogSUNvbnRyb2xsZXJQYXJhbXMpIHtcbiAgICB0aGlzLm1vZGVsID0gcGFyYW1zLm1vZGVsO1xuICAgIHRoaXMudmlldyA9IHBhcmFtcy52aWV3O1xuICAgIHRoaXMubW9kZWxTdWJqZWN0ID0gdGhpcy5tb2RlbC5zdWJqZWN0O1xuICAgIHRoaXMudmlld1N1YmplY3QgPSB0aGlzLnZpZXcuc3ViamVjdDtcblxuICAgIHRoaXMuc3Vic2NyaWJlVG9FdmVudHMoKTtcbiAgICB0aGlzLmluaXQoKTtcbiAgfVxuXG4gIC8qKlxuICAgKiDQmNC90LjRhtC40LDQu9C40LfQsNGG0LjRjyDRgdC70LDQudC00LXRgNCwINCyINGB0L7QvtGC0LLQtdGC0YHRgtCy0LjQuCDRgSDQv9C10YDQstC40YfQvdGL0LzQuCDQvdCw0YHRgtGA0L7QudC60LDQvNC4XG4gICAqL1xuICBwcml2YXRlIGluaXQoKTogdm9pZCB7XG4gICAgaWYgKHRoaXMubW9kZWwuZ2V0T3JpZW50YXRpb24oKSA9PT0gJ2hvcml6b250YWwnKSB7XG4gICAgICB0aGlzLnZpZXcuc3dpdGNoVG9Ib3Jpem9udGFsKCk7XG4gICAgfSBlbHNlIHtcbiAgICAgIHRoaXMudmlldy5zd2l0Y2hUb1ZlcnRpY2FsKCk7XG4gICAgfVxuXG4gICAgdGhpcy5tb2RlbC5zZXRTbGlkZXJTaXplKHRoaXMudmlldy5nZXRTbGlkZXJTaXplKCkpO1xuICAgIHRoaXMubW9kZWwuc2V0VGh1bWJTaXplKHRoaXMudmlldy5nZXRUaHVtYlNpemUoKSk7XG5cbiAgICBpZiAodGhpcy5tb2RlbC5nZXRUeXBlKCkgPT09ICdzaW5nbGUnKSB7XG4gICAgICB0aGlzLnZpZXcuc3dpdGNoVG9TaW5nbGUoKTtcbiAgICB9IGVsc2Uge1xuICAgICAgdGhpcy52aWV3LnN3aXRjaFRvUmFuZ2UoKTtcbiAgICB9XG5cbiAgICBpZiAodGhpcy5tb2RlbC5nZXRQb3BVcHNTdGF0ZSgpKSB7XG4gICAgICB0aGlzLnZpZXcuZW5hYmxlUG9wVXBzKCk7XG4gICAgfSBlbHNlIHtcbiAgICAgIHRoaXMudmlldy5kaXNhYmxlUG9wVXBzKCk7XG4gICAgfVxuXG4gICAgdGhpcy51cGRhdGVWaWV3KCk7XG4gIH1cblxuICAvKipcbiAgICog0J/QvtC00L/QuNGB0YvQstCw0LXRgiBDb250cm9sbGVyINC90LAg0L3QtdC+0LHRhdC+0LTQuNC80YvQtSDRgdC+0LHRi9GC0LjRjywg0LLQvtC30L3QuNC60LDRjtGJ0LjQtSDQstC+IFZpZXcg0LggTW9kZWxcbiAgICovXG4gIHByaXZhdGUgc3Vic2NyaWJlVG9FdmVudHMoKTogdm9pZCB7XG4gICAgdGhpcy52aWV3U3ViamVjdC5yZWdpc3RlcigndGh1bWJJc0RyYWdnZWQnLCB0aGlzKTtcbiAgICB0aGlzLm1vZGVsU3ViamVjdC5yZWdpc3RlcigndGh1bWJzUG9zSXNVcGRhdGVkJywgdGhpcyk7XG4gICAgdGhpcy5tb2RlbFN1YmplY3QucmVnaXN0ZXIoJ21pbklzVXBkYXRlZCcsIHRoaXMpO1xuICAgIHRoaXMubW9kZWxTdWJqZWN0LnJlZ2lzdGVyKCdtYXhJc1VwZGF0ZWQnLCB0aGlzKTtcbiAgICB0aGlzLm1vZGVsU3ViamVjdC5yZWdpc3Rlcignc3RlcElzVXBkYXRlZCcsIHRoaXMpO1xuICAgIHRoaXMubW9kZWxTdWJqZWN0LnJlZ2lzdGVyKCd0eXBlSXNVcGRhdGVkJywgdGhpcyk7XG4gICAgdGhpcy5tb2RlbFN1YmplY3QucmVnaXN0ZXIoJ29yaWVudGF0aW9uSXNVcGRhdGVkJywgdGhpcyk7XG4gICAgdGhpcy5tb2RlbFN1YmplY3QucmVnaXN0ZXIoJ3NjYWxlU3RhdGVJc1VwZGF0ZWQnLCB0aGlzKTtcbiAgICB0aGlzLm1vZGVsU3ViamVjdC5yZWdpc3RlcigncG9wVXBzU3RhdGVJc1VwZGF0ZWQnLCB0aGlzKTtcbiAgICB0aGlzLnZpZXcuc3ViamVjdC5yZWdpc3RlcignY2xpY2tUb1RyYWNrJywgdGhpcyk7XG4gICAgdGhpcy52aWV3LnN1YmplY3QucmVnaXN0ZXIoJ2NsaWNrVG9TY2FsZScsIHRoaXMpO1xuICAgIHRoaXMudmlldy5zdWJqZWN0LnJlZ2lzdGVyKCd3aW5kb3dSZXNpemVkJywgdGhpcyk7XG4gIH1cblxuICAvKipcbiAgICog0J/QtdGA0LXRhdCy0LDRgtGL0LLQsNC90LjQtSDQuCDRgNC10LDQs9C40YDQvtCy0LDQvdC40LUg0L3QsCDRgdC+0LHRi9GC0LjRjywg0LLQvtC30L3QuNC60LDRjtGJ0LjQtSDQsiBNb2RlbCDQuCBWaWV3XG4gICAqIEBwYXJhbSB7c3RyaW5nfSBldmVudFR5cGUgLSDRgtC40L8g0YPQstC10LTQvtC80LvQtdC90LjRj1xuICAgKi9cbiAgdXBkYXRlKGV2ZW50VHlwZTogc3RyaW5nKTogdm9pZCB7XG4gICAgc3dpdGNoIChldmVudFR5cGUpIHtcbiAgICAgIGNhc2UgJ3RodW1iSXNEcmFnZ2VkJzpcbiAgICAgICAgdGhpcy5tb2RlbC51cGRhdGVUaHVtYnNTdGF0ZSh0aGlzLnZpZXcuZ2V0VGh1bWJzUG9zKCkpO1xuICAgICAgICBicmVhaztcbiAgICAgIGNhc2UgJ3RodW1ic1Bvc0lzVXBkYXRlZCc6XG4gICAgICAgIHRoaXMudXBkYXRlVGh1bWJzUG9zKCk7XG4gICAgICAgIGJyZWFrO1xuICAgICAgY2FzZSAnbWluSXNVcGRhdGVkJzpcbiAgICAgICAgdGhpcy51cGRhdGVWaWV3KCk7XG4gICAgICAgIGJyZWFrO1xuICAgICAgY2FzZSAnbWF4SXNVcGRhdGVkJzpcbiAgICAgICAgdGhpcy51cGRhdGVWaWV3KCk7XG4gICAgICAgIGJyZWFrO1xuICAgICAgY2FzZSAnc3RlcElzVXBkYXRlZCc6XG4gICAgICAgIHRoaXMudXBkYXRlVmlldygpO1xuICAgICAgICBicmVhaztcbiAgICAgIGNhc2UgJ29yaWVudGF0aW9uSXNVcGRhdGVkJzpcbiAgICAgICAgdGhpcy51cGRhdGVTbGlkZXJPcmllbnRhdGlvbigpO1xuICAgICAgICBicmVhaztcbiAgICAgIGNhc2UgJ3R5cGVJc1VwZGF0ZWQnOlxuICAgICAgICB0aGlzLnVwZGF0ZVNsaWRlclR5cGUoKTtcbiAgICAgICAgYnJlYWs7XG4gICAgICBjYXNlICdzY2FsZVN0YXRlSXNVcGRhdGVkJzpcbiAgICAgICAgdGhpcy51cGRhdGVTY2FsZVN0YXRlKCk7XG4gICAgICAgIGJyZWFrO1xuICAgICAgY2FzZSAncG9wVXBzU3RhdGVJc1VwZGF0ZWQnOlxuICAgICAgICB0aGlzLnVwZGF0ZVBvcFVwc1NhdGUoKTtcbiAgICAgICAgYnJlYWs7XG4gICAgICBjYXNlICdjbGlja1RvVHJhY2snOlxuICAgICAgICB0aGlzLm1vZGVsLnNldFRodW1iUG9zT25DbGlja1Bvcyh0aGlzLnZpZXcuZ2V0VHJhY2tDbGlja1Bvc2l0aW9uKCkpO1xuICAgICAgICBicmVhaztcbiAgICAgIGNhc2UgJ2NsaWNrVG9TY2FsZSc6XG4gICAgICAgIHRoaXMubW9kZWwuc2V0VGh1bWJQb3NPbkNsaWNrUG9zKHRoaXMudmlldy5nZXRTY2FsZUNsaWNrUG9zaXRpb24oKSk7XG4gICAgICAgIGJyZWFrO1xuICAgICAgY2FzZSAnd2luZG93UmVzaXplZCc6XG4gICAgICAgIHRoaXMuaW5pdCgpO1xuICAgICAgICBicmVhaztcbiAgICAgIGRlZmF1bHQ6XG4gICAgICAgIGJyZWFrO1xuICAgIH1cbiAgfVxuXG4gIC8qKlxuICAgKiDQntCx0L3QvtCy0LvRj9C10YIg0LHQtdCz0YPQvdC60LgsINC/0YDQvtCz0YDQtdGB0YEt0LHQsNGAINC4INGI0LrQsNC70YMg0LLQviBWaWV3INCyINGB0L7QvtGC0LLQtdGC0YHRgtCy0LjQuCDRgSDQuNGFINGB0L7RgdGC0L7Rj9C90LjQtdC8XG4gICAqL1xuICBwcml2YXRlIHVwZGF0ZVZpZXcoKTogdm9pZCB7XG4gICAgdGhpcy5tb2RlbC51cGRhdGVUaHVtYnNTdGF0ZSh0aGlzLm1vZGVsLmdldFRodW1ic1BvcygpKTtcblxuICAgIGlmICh0aGlzLm1vZGVsLmdldFNjYWxlU3RhdGUoKSkge1xuICAgICAgdGhpcy52aWV3LmVuYWJsZVNjYWxlKCk7XG4gICAgICBjb25zdCBtYXggPSB0aGlzLm1vZGVsLmdldE1heCgpO1xuICAgICAgY29uc3QgcG9pbnRzID0gdGhpcy5tb2RlbC5nZXRTY2FsZVBvaW50cyhcbiAgICAgICAgdGhpcy52aWV3LmdldFNjYWxlUG9pbnRTaXplKG1heCksXG4gICAgICApO1xuICAgICAgdGhpcy52aWV3LmFkZFNjYWxlUG9pbnRzKHBvaW50cyk7XG4gICAgfSBlbHNlIHtcbiAgICAgIHRoaXMudmlldy5kaXNhYmxlU2NhbGUoKTtcbiAgICB9XG4gIH1cblxuICAvKipcbiAgICog0J7QsdC90L7QstC70Y/QtdGCINC/0L7Qt9C40YbQuNC4INCx0LXQs9GD0L3QutC+0LIg0LLQviB2aWV3XG4gICAqL1xuICBwcml2YXRlIHVwZGF0ZVRodW1ic1BvcygpOiB2b2lkIHtcbiAgICB0aGlzLnZpZXcudXBkYXRlVGh1bWJzKHRoaXMubW9kZWwuZ2V0VGh1bWJzUG9zKCkpO1xuICAgIHRoaXMudmlldy51cGRhdGVQb3BVcHModGhpcy5tb2RlbC5nZXRQb3BVcHNQYXJhbXMoKSk7XG4gICAgdGhpcy52aWV3LnVwZGF0ZVByb2dyZXNzQmFyKHRoaXMubW9kZWwuZ2V0UHJvZ3Jlc3NCYXJQYXJhbXMoKSk7XG4gIH1cblxuICAvKipcbiAgICog0J7QsdC90L7QstC70Y/QtdGCINC+0YDQuNC10L3RgtCw0YbQuNGOINGB0LvQsNC50LTQtdGA0LAg0Lgg0LXQs9C+INGN0LvQtdC80LXQvdGC0L7QsiDQstC+IHZpZXdcbiAgICovXG4gIHByaXZhdGUgdXBkYXRlU2xpZGVyT3JpZW50YXRpb24oKTogdm9pZCB7XG4gICAgaWYgKHRoaXMubW9kZWwuZ2V0T3JpZW50YXRpb24oKSA9PT0gJ2hvcml6b250YWwnKSB7XG4gICAgICB0aGlzLnZpZXcuc3dpdGNoVG9Ib3Jpem9udGFsKCk7XG4gICAgfSBlbHNlIHtcbiAgICAgIHRoaXMudmlldy5zd2l0Y2hUb1ZlcnRpY2FsKCk7XG4gICAgfVxuXG4gICAgdGhpcy5tb2RlbC5zZXRTbGlkZXJTaXplKHRoaXMudmlldy5nZXRTbGlkZXJTaXplKCkpO1xuICAgIHRoaXMudXBkYXRlVmlldygpO1xuICB9XG5cbiAgLyoqXG4gICAqINCe0LHQvdC+0LLQu9GP0LXRgiDRgdC70LDQudC00LXRgCDQstC+IHZpZXcg0LIg0YHQvtC+0YLQstC10YLRgdGC0LLQuNC4INGBINGC0LjQv9C+0LxcbiAgICovXG4gIHByaXZhdGUgdXBkYXRlU2xpZGVyVHlwZSgpOiB2b2lkIHtcbiAgICBpZiAodGhpcy5tb2RlbC5nZXRUeXBlKCkgPT09ICdzaW5nbGUnKSB7XG4gICAgICB0aGlzLnZpZXcuc3dpdGNoVG9TaW5nbGUoKTtcbiAgICB9IGVsc2Uge1xuICAgICAgdGhpcy52aWV3LnN3aXRjaFRvUmFuZ2UoKTtcbiAgICB9XG5cbiAgICB0aGlzLm1vZGVsLnVwZGF0ZVRodW1ic1N0YXRlKHRoaXMubW9kZWwuZ2V0VGh1bWJzUG9zKCkpO1xuICB9XG5cbiAgLyoqXG4gICAqINCe0LHQvdC+0LLQu9GP0LXRgiDQvtGC0L7QsdGA0LDQttC10L3QuNC1INGI0LrQsNC70Ysg0YHQu9Cw0LnQtNC10YDQsCDQstC+IHZpZXdcbiAgICovXG4gIHByaXZhdGUgdXBkYXRlU2NhbGVTdGF0ZSgpIHtcbiAgICBpZiAodGhpcy5tb2RlbC5nZXRTY2FsZVN0YXRlKCkpIHtcbiAgICAgIHRoaXMudmlldy5lbmFibGVTY2FsZSgpO1xuICAgICAgdGhpcy51cGRhdGVWaWV3KCk7XG4gICAgfSBlbHNlIHtcbiAgICAgIHRoaXMudmlldy5kaXNhYmxlU2NhbGUoKTtcbiAgICB9XG4gIH1cblxuICAvKipcbiAgICog0J7QsdC90L7QstC70Y/QtdGCINC+0YLQvtCx0YDQsNC20LXQvdC40LUg0LLRgdC/0LvRi9Cy0LDRjtGJ0LjRhSDQv9C+0LTRgdC60LDQt9C+0Log0LLQviB2aWV3XG4gICAqL1xuICBwcml2YXRlIHVwZGF0ZVBvcFVwc1NhdGUoKTogdm9pZCB7XG4gICAgaWYgKHRoaXMubW9kZWwuZ2V0UG9wVXBzU3RhdGUoKSkge1xuICAgICAgdGhpcy52aWV3LmVuYWJsZVBvcFVwcygpO1xuICAgICAgdGhpcy5tb2RlbC51cGRhdGVUaHVtYnNTdGF0ZSh0aGlzLm1vZGVsLmdldFRodW1ic1BvcygpKTtcbiAgICB9IGVsc2Uge1xuICAgICAgdGhpcy52aWV3LmRpc2FibGVQb3BVcHMoKTtcbiAgICB9XG4gIH1cbn1cblxuZXhwb3J0IGRlZmF1bHQgU2ltcGxlU2xpZGVyQ29udHJvbGxlcjtcbiIsIi8qIGVzbGludC1kaXNhYmxlIG9wZXJhdG9yLWxpbmVicmVhayAqL1xuLyogZXNsaW50LWRpc2FibGUgY29tbWEtZGFuZ2xlICovXG5cbmltcG9ydCB7XG4gIElPYnNlcnZlcixcbiAgSVBvcFVwcyxcbiAgSVBvc2l0aW9uLFxuICBJUHJvZ3Jlc3NCYXJQYXJhbXMsXG4gIElTY2FsZVBvaW50UGFyYW1zLFxuICBJU2ltcGxlU2xpZGVyVmlldyxcbiAgSVNpemUsXG4gIElTbGlkZXJNYXJnaW5zLFxuICBJU3ViamVjdCxcbiAgSVRodW1ic1Bvc2l0aW9ucyxcbn0gZnJvbSAnLi4vaW50ZXJmYWNlcyc7XG5cbmltcG9ydCBDb250YWluZXIgZnJvbSAnLi9jb250YWluZXIvY29udGFpbmVyJztcbmltcG9ydCBUcmFjayBmcm9tICcuL3RyYWNrL3RyYWNrJztcbmltcG9ydCBUaHVtYiBmcm9tICcuL3RodW1iL3RodW1iJztcbmltcG9ydCBQb3BVcCBmcm9tICcuL3BvcC11cC9wb3AtdXAnO1xuaW1wb3J0IFByb2dyZXNzQmFyIGZyb20gJy4vcHJvZ3Jlc3MtYmFyL3Byb2dyZXNzLWJhcic7XG5pbXBvcnQgU2NhbGUgZnJvbSAnLi9zY2FsZS9zY2FsZSc7XG5pbXBvcnQgU3ViamVjdCBmcm9tICcuLi9zdWJqZWN0L3N1YmplY3QnO1xuXG5jbGFzcyBTaW1wbGVTbGlkZXJWaWV3IGltcGxlbWVudHMgSVNpbXBsZVNsaWRlclZpZXcsIElPYnNlcnZlciB7XG4gIHN1YmplY3Q6IElTdWJqZWN0O1xuICBwcml2YXRlIGNvbnRhaW5lcjogQ29udGFpbmVyO1xuICBwcml2YXRlIHNsaWRlcldyYXBwZXI6IEhUTUxEaXZFbGVtZW50O1xuICBwcml2YXRlIHRyYWNrOiBUcmFjaztcbiAgcHJpdmF0ZSB0aHVtYk9uZTogVGh1bWI7XG4gIHByaXZhdGUgdGh1bWJUd286IFRodW1iIHwgbnVsbDtcbiAgcHJpdmF0ZSBwb3BVcE9uZTogUG9wVXAgfCBudWxsO1xuICBwcml2YXRlIHBvcFVwVHdvOiBQb3BVcCB8IG51bGw7XG4gIHByaXZhdGUgcHJvZ3Jlc3NCYXI6IFByb2dyZXNzQmFyO1xuICBwcml2YXRlIHNjYWxlOiBTY2FsZSB8IG51bGw7XG5cbiAgY29uc3RydWN0b3Iod3JhcHBlcjogSFRNTERpdkVsZW1lbnQpIHtcbiAgICB0aGlzLnN1YmplY3QgPSBuZXcgU3ViamVjdCgpO1xuICAgIHRoaXMuc2xpZGVyV3JhcHBlciA9IHdyYXBwZXI7XG5cbiAgICB0aGlzLmNvbnRhaW5lciA9IG5ldyBDb250YWluZXIoKTtcbiAgICB0aGlzLnRyYWNrID0gbmV3IFRyYWNrKCk7XG4gICAgdGhpcy50aHVtYk9uZSA9IG5ldyBUaHVtYigpO1xuICAgIHRoaXMudGh1bWJUd28gPSBuZXcgVGh1bWIoKTtcbiAgICB0aGlzLnBvcFVwT25lID0gbmV3IFBvcFVwKCk7XG4gICAgdGhpcy5wb3BVcFR3byA9IG5ldyBQb3BVcCgpO1xuICAgIHRoaXMucHJvZ3Jlc3NCYXIgPSBuZXcgUHJvZ3Jlc3NCYXIoKTtcbiAgICB0aGlzLnNjYWxlID0gbmV3IFNjYWxlKCk7XG5cbiAgICB0aGlzLnN1YnNjcmliZVRvRXZlbnRzKCk7XG4gICAgdGhpcy5hc3NlbWJsZVNsaWRlcigpO1xuICAgIHRoaXMuYWRkV2luZG93UmVzaXplRXZlbnRMaXN0ZW5lcigpO1xuICB9XG5cbiAgLyoqXG4gICAqINCU0L7QsdCw0LLQu9GP0LXRgiDRgdC+0LHRi9GC0LjQtSDQvdCwINC40LfQvNC10L3QtdC90LjQtSDRgNCw0LfQvNC10YDQsCDQvtC60L3QsFxuICAgKi9cbiAgcHJpdmF0ZSBhZGRXaW5kb3dSZXNpemVFdmVudExpc3RlbmVyKCk6IHZvaWQge1xuICAgIHdpbmRvdy5hZGRFdmVudExpc3RlbmVyKCdyZXNpemUnLCB0aGlzLndpbmRvd1Jlc2l6ZS5iaW5kKHRoaXMpKTtcbiAgfVxuXG4gIC8qKlxuICAgKiDQntCx0YDQsNCx0L7RgtC60LAg0LjQt9C80LXQvdC10L3QuNGPINGA0LDQt9C80LXRgNCwINC+0LrQvdCwXG4gICAqL1xuICBwcml2YXRlIHdpbmRvd1Jlc2l6ZSgpOiB2b2lkIHtcbiAgICB0aGlzLnN1YmplY3Qubm90aWZ5KCd3aW5kb3dSZXNpemVkJyk7XG4gIH1cblxuICAvKipcbiAgICog0J/QvtC00L/QuNGB0YvQstCw0LXRgiBDb250cm9sbGVyINC90LAg0L3QtdC+0LHRhdC+0LTQuNC80YvQtSDRgdC+0LHRi9GC0LjRjywg0LLQvtC30L3QuNC60LDRjtGJ0LjQtSDQstC+IFZpZXcg0LggTW9kZWxcbiAgICovXG4gIHN1YnNjcmliZVRvRXZlbnRzKCk6IHZvaWQge1xuICAgIHRoaXMudGh1bWJPbmUuc3ViamVjdC5yZWdpc3RlcigndGh1bWJJc0RyYWdnZWQnLCB0aGlzKTtcbiAgICB0aGlzLnRodW1iVHdvPy5zdWJqZWN0LnJlZ2lzdGVyKCd0aHVtYklzRHJhZ2dlZCcsIHRoaXMpO1xuICAgIHRoaXMudGh1bWJPbmUuc3ViamVjdC5yZWdpc3RlcigndGh1bWJJc0NhdGNoZWQnLCB0aGlzKTtcbiAgICB0aGlzLnRodW1iVHdvPy5zdWJqZWN0LnJlZ2lzdGVyKCd0aHVtYklzQ2F0Y2hlZCcsIHRoaXMpO1xuICAgIHRoaXMudHJhY2suc3ViamVjdC5yZWdpc3RlcignY2xpY2tUb1RyYWNrJywgdGhpcyk7XG4gICAgdGhpcy5zY2FsZT8uc3ViamVjdC5yZWdpc3RlcignY2xpY2tUb1NjYWxlJywgdGhpcyk7XG4gIH1cblxuICAvKipcbiAgICog0KHQsdC+0YDQutCwINGB0LvQsNC50LTQtdGA0LAg0LjQtyDQvtGC0LTQtdC70YzQvdGL0YUg0Y3Qu9C10LzQtdC90YLQvtCyXG4gICAqL1xuICBwcml2YXRlIGFzc2VtYmxlU2xpZGVyKCk6IHZvaWQge1xuICAgIHRoaXMuY29udGFpbmVyLmFwcGVuZCh0aGlzLnRyYWNrLmdldEVsZW1lbnQoKSk7XG4gICAgdGhpcy5jb250YWluZXIuYXBwZW5kKHRoaXMudGh1bWJPbmUuZ2V0RWxlbWVudCgpKTtcbiAgICBpZiAodGhpcy50aHVtYlR3byAhPT0gbnVsbCkge1xuICAgICAgdGhpcy5jb250YWluZXIuYXBwZW5kKHRoaXMudGh1bWJUd28uZ2V0RWxlbWVudCgpKTtcbiAgICB9XG4gICAgaWYgKHRoaXMucG9wVXBPbmUgIT09IG51bGwpIHtcbiAgICAgIHRoaXMuY29udGFpbmVyLmFwcGVuZCh0aGlzLnBvcFVwT25lLmdldEVsZW1lbnQoKSk7XG4gICAgfVxuICAgIGlmICh0aGlzLnBvcFVwVHdvICE9PSBudWxsKSB7XG4gICAgICB0aGlzLmNvbnRhaW5lci5hcHBlbmQodGhpcy5wb3BVcFR3by5nZXRFbGVtZW50KCkpO1xuICAgIH1cbiAgICB0aGlzLmNvbnRhaW5lci5hcHBlbmQodGhpcy5wcm9ncmVzc0Jhci5nZXRFbGVtZW50KCkpO1xuICAgIGlmICh0aGlzLnNjYWxlICE9PSBudWxsKSB7XG4gICAgICB0aGlzLmNvbnRhaW5lci5hcHBlbmQodGhpcy5zY2FsZS5nZXRFbGVtZW50KCkpO1xuICAgIH1cblxuICAgIHRoaXMuc2xpZGVyV3JhcHBlci5hcHBlbmQodGhpcy5jb250YWluZXIuZ2V0RWxlbWVudCgpKTtcbiAgfVxuXG4gIC8qKlxuICAgKiDQn9C10YDQtdGF0LLQsNGC0YvQstCw0L3QuNC1INC4INGA0LXQsNCz0LjRgNC+0LLQsNC90LjQtSDQvdCwINGD0LLQtdC00L7QvNC70LXQvdC40Y8g0L7RgiDRgdGD0LHRitC10LrRgtC+0LIsINC90LAg0LrQvtGC0L7RgNGL0LUg0L/QvtC00L/QuNGB0LDQvdC+IFZpZXdcbiAgICogQHBhcmFtIHtzdHJpbmd9IGV2ZW50VHlwZSAtINGC0LjQvyDRg9Cy0LXQtNC+0LzQu9C10L3QuNGPXG4gICAqL1xuICB1cGRhdGUoZXZlbnRUeXBlOiBzdHJpbmcpOiB2b2lkIHtcbiAgICBzd2l0Y2ggKGV2ZW50VHlwZSkge1xuICAgICAgY2FzZSAndGh1bWJJc0RyYWdnZWQnOlxuICAgICAgICB0aGlzLnN1YmplY3Qubm90aWZ5KCd0aHVtYklzRHJhZ2dlZCcpO1xuICAgICAgICBicmVhaztcbiAgICAgIGNhc2UgJ3RodW1iSXNDYXRjaGVkJzpcbiAgICAgICAgdGhpcy50aHVtYk9uZS5yZXNldFpJbmRleCgpO1xuICAgICAgICB0aGlzLnRodW1iVHdvPy5yZXNldFpJbmRleCgpO1xuICAgICAgICBicmVhaztcbiAgICAgIGNhc2UgJ2NsaWNrVG9UcmFjayc6XG4gICAgICAgIHRoaXMuc3ViamVjdC5ub3RpZnkoJ2NsaWNrVG9UcmFjaycpO1xuICAgICAgICBicmVhaztcbiAgICAgIGNhc2UgJ2NsaWNrVG9TY2FsZSc6XG4gICAgICAgIHRoaXMuc3ViamVjdC5ub3RpZnkoJ2NsaWNrVG9TY2FsZScpO1xuICAgICAgICBicmVhaztcbiAgICAgIGRlZmF1bHQ6XG4gICAgICAgIGJyZWFrO1xuICAgIH1cbiAgfVxuXG4gIC8qKlxuICAgKiDQnNC10L3Rj9C10YIg0L7RgNC40LXQvdGC0LDRhtC40Y4g0YHQu9Cw0LnQtNC10YDQsCDQvdCwINCz0L7RgNC40LfQvtC90YLQsNC70YzQvdGD0Y5cbiAgICovXG4gIHN3aXRjaFRvSG9yaXpvbnRhbCgpOiB2b2lkIHtcbiAgICB0aGlzLmNvbnRhaW5lci5yZXNldE1hcmdpbnMoKTtcbiAgICB0aGlzLmNvbnRhaW5lci5zd2l0Y2hUb0hvcml6b250YWwoKTtcbiAgICB0aGlzLnRyYWNrLnN3aXRjaFRvSG9yaXpvbnRhbCgpO1xuICAgIHRoaXMudGh1bWJPbmUuc3dpdGNoVG9Ib3Jpem9udGFsKCk7XG4gICAgdGhpcy50aHVtYlR3bz8uc3dpdGNoVG9Ib3Jpem9udGFsKCk7XG4gICAgdGhpcy5wb3BVcE9uZT8uc3dpdGNoVG9Ib3Jpem9udGFsKCk7XG4gICAgdGhpcy5wb3BVcFR3bz8uc3dpdGNoVG9Ib3Jpem9udGFsKCk7XG4gICAgdGhpcy5wcm9ncmVzc0Jhci5zd2l0Y2hUb0hvcml6b250YWwoKTtcbiAgICB0aGlzLnNjYWxlPy5zd2l0Y2hUb0hvcml6b250YWwoKTtcbiAgfVxuXG4gIC8qKlxuICAgKiDQnNC10L3Rj9C10YIg0L7RgNC40LXQvdGC0LDRhtC40Y4g0YHQu9Cw0LnQtNC10YDQsCDQvdCwINCy0LXRgNGC0LjQutCw0LvRjNC90YPRjlxuICAgKi9cbiAgc3dpdGNoVG9WZXJ0aWNhbCgpOiB2b2lkIHtcbiAgICB0aGlzLmNvbnRhaW5lci5yZXNldE1hcmdpbnMoKTtcbiAgICB0aGlzLmNvbnRhaW5lci5zd2l0Y2hUb1ZlcnRpY2FsKCk7XG4gICAgdGhpcy50cmFjay5zd2l0Y2hUb1ZlcnRpY2FsKCk7XG4gICAgdGhpcy50aHVtYk9uZS5zd2l0Y2hUb1ZlcnRpY2FsKCk7XG4gICAgdGhpcy50aHVtYlR3bz8uc3dpdGNoVG9WZXJ0aWNhbCgpO1xuICAgIHRoaXMucG9wVXBPbmU/LnN3aXRjaFRvVmVydGljYWwoKTtcbiAgICB0aGlzLnBvcFVwVHdvPy5zd2l0Y2hUb1ZlcnRpY2FsKCk7XG4gICAgdGhpcy5wcm9ncmVzc0Jhci5zd2l0Y2hUb1ZlcnRpY2FsKCk7XG4gICAgdGhpcy5zY2FsZT8uc3dpdGNoVG9WZXJ0aWNhbCgpO1xuICB9XG5cbiAgLyoqXG4gICAqINCc0LXQvdGP0LXRgiDRgtC40L8g0YHQu9Cw0LnQtNC10YDQsCDQvdCwINC+0LTQuNC90L7Rh9C90YvQuSwg0YPQtNCw0LvRj9GPINCy0YLQvtGA0L7QuSDQsdC10LPRg9C90L7QulxuICAgKi9cbiAgc3dpdGNoVG9TaW5nbGUoKTogdm9pZCB7XG4gICAgdGhpcy50aHVtYlR3bz8uc3ViamVjdC51bnN1YnNjcmliZSgndGh1bWJJc0NhdGNoZWQnLCB0aGlzKTtcbiAgICB0aGlzLnRodW1iVHdvPy5zdWJqZWN0LnVuc3Vic2NyaWJlKCd0aHVtYklzQ2F0Y2hlZCcsIHRoaXMpO1xuXG4gICAgdGhpcy50aHVtYlR3bz8ucmVtb3ZlKCk7XG4gICAgdGhpcy50aHVtYlR3byA9IG51bGw7XG4gICAgdGhpcy5wb3BVcFR3bz8ucmVtb3ZlKCk7XG4gICAgdGhpcy5wb3BVcFR3byA9IG51bGw7XG4gIH1cblxuICAvKipcbiAgICog0JzQtdC90Y/QtdGCINGC0LjQvyDRgdC70LDQudC00LXRgNCwINC90LAg0LTQuNCw0L/QsNC30L7QvSwg0LTQvtCx0LDQstC70Y/RjyDQstGC0L7RgNC+0Lkg0LHQtdCz0YPQvdC+0LosINC10YHQu9C4INC+0L0g0L7RgtGB0YPRgtGB0YLQstGD0LXRglxuICAgKi9cbiAgc3dpdGNoVG9SYW5nZSgpOiB2b2lkIHtcbiAgICBpZiAodGhpcy50aHVtYlR3byA9PT0gbnVsbCkge1xuICAgICAgdGhpcy50aHVtYlR3byA9IG5ldyBUaHVtYih0aGlzLmNvbnRhaW5lci5nZXRPcmllbnRhdGlvbigpKTtcbiAgICAgIHRoaXMuY29udGFpbmVyLmFwcGVuZCh0aGlzLnRodW1iVHdvLmdldEVsZW1lbnQoKSk7XG5cbiAgICAgIGlmICh0aGlzLnBvcFVwT25lICE9PSBudWxsKSB7XG4gICAgICAgIHRoaXMucG9wVXBUd28gPSBuZXcgUG9wVXAodGhpcy5jb250YWluZXIuZ2V0T3JpZW50YXRpb24oKSk7XG4gICAgICAgIHRoaXMuY29udGFpbmVyLmFwcGVuZCh0aGlzLnBvcFVwVHdvLmdldEVsZW1lbnQoKSk7XG4gICAgICB9XG5cbiAgICAgIHRoaXMudGh1bWJUd28uc3ViamVjdC5yZWdpc3RlcigndGh1bWJJc0RyYWdnZWQnLCB0aGlzKTtcbiAgICAgIHRoaXMudGh1bWJUd28uc3ViamVjdC5yZWdpc3RlcigndGh1bWJJc0NhdGNoZWQnLCB0aGlzKTtcbiAgICB9XG4gIH1cblxuICAvKipcbiAgICog0J7RgtC60LvRjtGH0LDQtdGCINCy0YHQv9C70YvQstCw0Y7RidC40LUg0L/QvtC00YHQutCw0LfQutC4INC90LDQtCDQsdC10LPRg9C90LrQsNC80LhcbiAgICovXG4gIGRpc2FibGVQb3BVcHMoKTogdm9pZCB7XG4gICAgdGhpcy5wb3BVcE9uZT8ucmVtb3ZlKCk7XG4gICAgdGhpcy5wb3BVcE9uZSA9IG51bGw7XG4gICAgdGhpcy5wb3BVcFR3bz8ucmVtb3ZlKCk7XG4gICAgdGhpcy5wb3BVcFR3byA9IG51bGw7XG5cbiAgICB0aGlzLmNvbnRhaW5lci5zZXRNYXJnaW5zKHRoaXMuZ2V0TWFyZ2lucygpKTtcbiAgfVxuXG4gIC8qKlxuICAgKiDQktC60LvRjtGH0LDQtdGCINCy0YHQv9C70YvQstCw0Y7RidC40LUg0L/QvtC00YHQutCw0LfQutC4INC90LDQtCDQsdC10LPRg9C90LrQsNC80LhcbiAgICovXG4gIGVuYWJsZVBvcFVwcygpOiB2b2lkIHtcbiAgICBpZiAodGhpcy5wb3BVcE9uZSA9PT0gbnVsbCkge1xuICAgICAgdGhpcy5wb3BVcE9uZSA9IG5ldyBQb3BVcCh0aGlzLmNvbnRhaW5lci5nZXRPcmllbnRhdGlvbigpKTtcbiAgICAgIHRoaXMuY29udGFpbmVyLmFwcGVuZCh0aGlzLnBvcFVwT25lLmdldEVsZW1lbnQoKSk7XG4gICAgfVxuXG4gICAgaWYgKHRoaXMucG9wVXBUd29Jc051bGxBbmRUaHVtYlR3b0lzTm90TnVsbCgpKSB7XG4gICAgICB0aGlzLnBvcFVwVHdvID0gbmV3IFBvcFVwKHRoaXMuY29udGFpbmVyLmdldE9yaWVudGF0aW9uKCkpO1xuICAgICAgdGhpcy5jb250YWluZXIuYXBwZW5kKHRoaXMucG9wVXBUd28uZ2V0RWxlbWVudCgpKTtcbiAgICB9XG5cbiAgICB0aGlzLmNvbnRhaW5lci5zZXRNYXJnaW5zKHRoaXMuZ2V0TWFyZ2lucygpKTtcbiAgfVxuXG4gIC8qKlxuICAgKiDQktC+0LfQstGA0LDRidCw0LXRgiDQuNGB0YLQuNC90YMsINC10YHQu9C4INCy0YHQv9C70YvQstCw0Y7RidCw0Y8g0L/QvtC00YHQutCw0LfQutCwINC90LDQtCDQstGC0L7RgNGL0Lwg0LHQtdCz0YPQvdC60L7QvCDRgNCw0LLQvdCwIG51bGwsXG4gICAqINCwINCy0YLQvtGA0L7QuSDQsdC10LPRg9C90L7QuiDQvdC1INGA0LDQstC10L0gbnVsbFxuICAgKiBAcmV0dXJucyB7Ym9vbGVhbn0gLSDRgNC10LfRg9C70YzRgtCw0YIg0LLRi9GH0LjRgdC70LXQvdC40Y8g0LvQvtCz0LjRh9C10YHQutC+0LPQviDQstGL0YDQsNC20LXQvdC40Y9cbiAgICovXG4gIHByaXZhdGUgcG9wVXBUd29Jc051bGxBbmRUaHVtYlR3b0lzTm90TnVsbCgpOiBib29sZWFuIHtcbiAgICByZXR1cm4gdGhpcy5wb3BVcFR3byA9PT0gbnVsbCAmJiB0aGlzLnRodW1iVHdvICE9PSBudWxsO1xuICB9XG5cbiAgLyoqXG4gICAqINCe0YLQutC70Y7Rh9Cw0LXRgiDRiNC60LDQu9GDXG4gICAqL1xuICBkaXNhYmxlU2NhbGUoKTogdm9pZCB7XG4gICAgdGhpcy5zY2FsZT8uc3ViamVjdC51bnN1YnNjcmliZSgnY2xpY2tUb1NjYWxlJywgdGhpcyk7XG4gICAgdGhpcy5zY2FsZT8ucmVtb3ZlKCk7XG4gICAgdGhpcy5zY2FsZSA9IG51bGw7XG5cbiAgICB0aGlzLmNvbnRhaW5lci5zZXRNYXJnaW5zKHRoaXMuZ2V0TWFyZ2lucygpKTtcbiAgfVxuXG4gIC8qKlxuICAgKiDQktC60LvRjtGH0LDQtdGCINGI0LrQsNC70YNcbiAgICovXG4gIGVuYWJsZVNjYWxlKCk6IHZvaWQge1xuICAgIGlmICh0aGlzLnNjYWxlICE9PSBudWxsKSB7XG4gICAgICB0aGlzLnNjYWxlPy5yZW1vdmUoKTtcbiAgICB9XG4gICAgdGhpcy5zY2FsZSA9IG5ldyBTY2FsZSh0aGlzLmNvbnRhaW5lci5nZXRPcmllbnRhdGlvbigpKTtcbiAgICB0aGlzLmNvbnRhaW5lci5hcHBlbmQodGhpcy5zY2FsZS5nZXRFbGVtZW50KCkpO1xuICAgIHRoaXMuc2NhbGUuc3ViamVjdC5yZWdpc3RlcignY2xpY2tUb1NjYWxlJywgdGhpcyk7XG5cbiAgICB0aGlzLmNvbnRhaW5lci5zZXRNYXJnaW5zKHRoaXMuZ2V0TWFyZ2lucygpKTtcbiAgfVxuXG4gIC8qKlxuICAgKiDQktC+0LfQstGA0LDRidC10L3QuNC1INGA0LDQt9C80LXRgNCwINCx0LXQs9GD0L3QutCwXG4gICAqIEByZXR1cm5zIHtJU2l6ZX0gLSDQvtCx0YrQtdC60YIg0YEg0YjQuNGA0LjQvdC+0Lkg0Lgg0LLRi9GB0L7RgtC+0Lkg0LHQtdCz0YPQvdC60LBcbiAgICovXG4gIGdldFRodW1iU2l6ZSgpOiBJU2l6ZSB7XG4gICAgcmV0dXJuIHRoaXMudGh1bWJPbmUuZ2V0U2l6ZSgpO1xuICB9XG5cbiAgLyoqXG4gICAqINCS0L7Qt9Cy0YDQsNGJ0LXQvdC40LUg0YDQsNC30LzQtdGA0LAg0YHQu9Cw0LnQtNC10YDQsFxuICAgKiBAcmV0dXJucyB7SVBvc2l0aW9ufSAtINC+0LHRitC10LrRgiDRgSDQvtGC0YHRgtGD0L/QsNC80Lgg0L7RgiDQu9C10LLQvtCz0L4g0Lgg0LLQtdGA0YXQvdC10LPQviDQutGA0LDRjyDRgNC+0LTQuNGC0LXQu9GM0YHQutC+0LPQvlxuICAgKiDQutC+0L3RgtC10LnQvdC10YDQsFxuICAgKi9cbiAgZ2V0U2xpZGVyU2l6ZSgpOiBJU2l6ZSB7XG4gICAgcmV0dXJuIHRoaXMuY29udGFpbmVyLmdldFNpemUoKTtcbiAgfVxuXG4gIC8qKlxuICAgKiDQktC+0LfQstGA0LDRidC10L3QuNC1INC/0L7Qt9C40YbQuNC5INCx0LXQs9GD0L3QutC+0LJcbiAgICogQHJldHVybnMge0lUaHVtYnNQb3NpdGlvbnN9IC0g0L7QsdGK0LXQutGCINGBINC/0L7Qt9C40YbQuNGP0LzQuCDQsdC10LPRg9C90LrQvtCyXG4gICAqL1xuICBnZXRUaHVtYnNQb3MoKTogSVRodW1ic1Bvc2l0aW9ucyB7XG4gICAgY29uc3QgdGh1bWJPbmUgPSB0aGlzLnRodW1iT25lLmdldFBvc2l0aW9uKCk7XG4gICAgbGV0IHRodW1iVHdvOiBJUG9zaXRpb24gfCBudWxsID0gbnVsbDtcbiAgICBpZiAodGhpcy50aHVtYlR3byAhPT0gbnVsbCkge1xuICAgICAgdGh1bWJUd28gPSB0aGlzLnRodW1iVHdvLmdldFBvc2l0aW9uKCk7XG4gICAgfVxuICAgIHJldHVybiB7IHRodW1iT25lLCB0aHVtYlR3byB9O1xuICB9XG5cbiAgLyoqXG4gICAqINCe0LHQvdC+0LLQu9GP0LXRgiDQv9C+0LfQuNGG0LjQuCDQsdC10LPRg9C90LrQvtCyXG4gICAqIEBwYXJhbSB7SVRodW1ic1Bvc2l0aW9uc30gdGh1bWJzUG9zaXRpb25zIC0g0L7QsdGK0LXQutGCINGBINC/0L7Qt9C40YbQuNGP0LzQuCDQsdC10LPRg9C90LrQvtCyXG4gICAqL1xuICB1cGRhdGVUaHVtYnModGh1bWJzUG9zaXRpb25zOiBJVGh1bWJzUG9zaXRpb25zKTogdm9pZCB7XG4gICAgdGhpcy50aHVtYk9uZS5tb3ZlVG8odGh1bWJzUG9zaXRpb25zLnRodW1iT25lKTtcbiAgICBpZiAodGh1bWJzUG9zaXRpb25zLnRodW1iVHdvICE9PSBudWxsKSB7XG4gICAgICB0aGlzLnRodW1iVHdvPy5tb3ZlVG8odGh1bWJzUG9zaXRpb25zLnRodW1iVHdvKTtcbiAgICB9XG4gIH1cblxuICAvKipcbiAgICog0J7QsdC90L7QstC70Y/QtdGCINC/0L7Qt9C40YbQuNGOINC4INGA0LDQt9C80LXRgCDQv9GA0L7Qs9GA0LXRgdGBLdCx0LDRgNCwXG4gICAqIEBwYXJhbSB7SVByb2dyZXNzQmFyUGFyYW1zfSB0aHVtYnNQb3NpdGlvbnMgLSDQvtCx0YrQtdC60YIg0YEg0L/QvtC30LjRhtC40LXQuSDQuCDRgNCw0LfQvNC10YDQvtC8INC/0YDQvtCz0YDQtdGB0YEt0LHQsNGA0LBcbiAgICovXG4gIHVwZGF0ZVByb2dyZXNzQmFyKHBhcmFtczogSVByb2dyZXNzQmFyUGFyYW1zKTogdm9pZCB7XG4gICAgdGhpcy5wcm9ncmVzc0Jhci51cGRhdGUocGFyYW1zKTtcbiAgfVxuXG4gIC8qKlxuICAgKiDQntCx0L3QvtCy0LvRj9C10YIg0LfQvdCw0YfQtdC90LjRjyDQstGB0L/Qu9GL0LLQsNGO0YnQuNGFINC/0L7QtNGB0LrQsNC30L7QulxuICAgKiBAcGFyYW0ge0lQcm9ncmVzc0JhclBhcmFtc30gdGh1bWJzUG9zaXRpb25zIC0g0L7QsdGK0LXQutGCINGB0L4g0LfQvdCw0YfQtdC90LjRj9C80Lgg0LLRgdC/0LvRi9Cy0LDRjtGJ0LjRhSDQv9C+0LTRgdC60LDQt9C+0LpcbiAgICovXG4gIHVwZGF0ZVBvcFVwcyhwYXJhbXM6IElQb3BVcHMpOiB2b2lkIHtcbiAgICBpZiAodGhpcy5wb3BVcE9uZSAhPT0gbnVsbCkge1xuICAgICAgdGhpcy5wb3BVcE9uZS51cGRhdGUocGFyYW1zLnBvcFVwT25lKTtcbiAgICB9XG4gICAgaWYgKHRoaXMucG9wVXBUd28gIT09IG51bGwpIHtcbiAgICAgIHRoaXMucG9wVXBUd28udXBkYXRlKHBhcmFtcy5wb3BVcFR3byk7XG4gICAgfVxuICB9XG5cbiAgLyoqXG4gICAqINCS0L7Qt9Cy0YDQsNGJ0LDQtdGCINC+0LHRitC10LrRgiDRgSDRiNC40YDQuNC90L7QuSDQuCDQstGL0YHQvtGC0L7QuSDQvtC00L3QvtCz0L4g0LTQtdC70LXQvdC40Y8g0YjQutCw0LvRiyAo0LLQutC70Y7Rh9Cw0Y8g0LzQsNGA0LrQtdGAINC00LXQu9C10L3QuNGPINC4INC30L3QsNGH0LXQvdC40LUpXG4gICAqIEBwYXJhbSB7bnVtYmVyfSB2YWx1ZSAtINC80LDQutGB0LjQvNCw0LvRjNC90L7QtSDQt9C90LDRh9C10L3QuNC1INGB0LvQsNC50LTQtdGA0LBcbiAgICogQHJldHVybnMge0lTaXplfSAtINC+0LHRitC10LrRgiDRgSDRiNC40YDQuNC90L7QuSDQuCDQstGL0YHQvtGC0L7QuSDQvtC00L3QvtCz0L4g0LTQtdC70LXQvdC40Y8g0YjQutCw0LvRi1xuICAgKi9cbiAgZ2V0U2NhbGVQb2ludFNpemUodmFsdWU6IG51bWJlcik6IElTaXplIHtcbiAgICBpZiAodGhpcy5zY2FsZSAhPT0gbnVsbCkge1xuICAgICAgcmV0dXJuIHRoaXMuc2NhbGUuZ2V0UG9pbnRTaXplKHZhbHVlKTtcbiAgICB9XG4gICAgcmV0dXJuIHsgd2lkdGg6IDAsIGhlaWdodDogMCB9O1xuICB9XG5cbiAgLyoqXG4gICAqINCU0L7QsdCw0LLQu9GP0LXRgiDQtNC10LvQtdC90LjRjyDQuiDRiNC60LDQu9C1XG4gICAqIEBwYXJhbSB7SVNjYWxlUG9pbnRQYXJhbXNbXX0gcG9pbnRzIC0g0LzQsNGB0YHQuNCyINC+0LHRitC10LrRgtC+0LIg0YEg0L/QsNGA0LDQvNC10YLRgNCw0LzQuCDQtNC10LvQtdC90LjQuSDRiNC60LDQu9GLXG4gICAqL1xuICBhZGRTY2FsZVBvaW50cyhwb2ludHM6IElTY2FsZVBvaW50UGFyYW1zW10pOiB2b2lkIHtcbiAgICB0aGlzLnNjYWxlPy5hZGRQb2ludHMocG9pbnRzKTtcbiAgICB0aGlzLmNvbnRhaW5lci5zZXRNYXJnaW5zKHRoaXMuZ2V0TWFyZ2lucygpKTtcbiAgfVxuXG4gIC8qKlxuICAgKiDQktC+0LfQstGA0LDRidCw0LXRgiDQv9C+0LfQuNGG0LjRjiDQv9C+0YHQu9C10LTQvdC10LPQviDQutC70LjQutCwINC/0L4g0YLRgNC10LrRg1xuICAgKiBAcmV0dXJucyB7SVBvc2l0aW9ufSAtINC+0LHRitC10LrRgiDRgSDQv9C+0LfQuNGG0LjQtdC5INC/0L7RgdC70LXQtNC90LXQs9C+INC60LvQuNC60LAg0L/QviDRgtGA0LXQutGDXG4gICAqL1xuICBnZXRUcmFja0NsaWNrUG9zaXRpb24oKTogSVBvc2l0aW9uIHtcbiAgICByZXR1cm4gdGhpcy50cmFjay5nZXRQb3NpdGlvbigpO1xuICB9XG5cbiAgLyoqXG4gICAqINCS0L7Qt9Cy0YDQsNGJ0LDQtdGCINC/0L7Qt9C40YbQuNGOINC/0L7RgdC70LXQtNC90LXQs9C+INC60LvQuNC60LAg0L/QviDRiNC60LDQu9C1XG4gICAqIEByZXR1cm5zIHtJUG9zaXRpb259IC0g0L7QsdGK0LXQutGCINGBINC/0L7Qt9C40YbQuNC10Lkg0L/QvtGB0LvQtdC00L3QtdCz0L4g0LrQu9C40LrQsCDQv9C+INGI0LrQsNC70LVcbiAgICovXG4gIGdldFNjYWxlQ2xpY2tQb3NpdGlvbigpOiBJUG9zaXRpb24ge1xuICAgIGNvbnN0IHBvc2l0aW9uID1cbiAgICAgIHRoaXMuc2NhbGUgPT09IG51bGwgPyB7IGxlZnQ6IDAsIHRvcDogMCB9IDogdGhpcy5zY2FsZS5nZXRQb3NpdGlvbigpO1xuICAgIHJldHVybiBwb3NpdGlvbjtcbiAgfVxuXG4gIC8qKlxuICAgKiDQktC+0LfQstGA0LDRidCw0LXRgiDQvtCx0YrQtdC60YIg0YEg0L7RgtGB0YLRg9C/0LDQvNC4INC+0YIg0LvQtdCy0L7QuSwg0LLQtdGA0YXQvdC10LksINC/0YDQsNCy0L7QuSDQuCDQvdC40LbQvdC10Lkg0LPRgNCw0L3QuNGGINGB0LvQsNC50LTQtdGA0LBcbiAgICogQHJldHVybnMge0lTbGlkZXJNYXJnaW5zfSAtINC+0LHRitC10LrRgiDRgSDQvtGC0YHRgtGD0L/QsNC80Lgg0L7RgiDQu9C10LLQvtC5LCDQstC10YDRhdC90LXQuSwg0L/RgNCw0LLQvtC5XG4gICAqINC4INC90LjQttC90LXQuSDQs9GA0LDQvdC40YYg0YHQu9Cw0LnQtNC10YDQsFxuICAgKi9cbiAgcHJpdmF0ZSBnZXRNYXJnaW5zKCk6IElTbGlkZXJNYXJnaW5zIHtcbiAgICBjb25zdCBtYXJnaW5zID0ge1xuICAgICAgbGVmdDogMCxcbiAgICAgIHRvcDogMCxcbiAgICAgIHJpZ2h0OiAwLFxuICAgICAgYm90dG9tOiAwLFxuICAgIH07XG5cbiAgICBjb25zdCBzbGlkZXJSZWN0ID0gdGhpcy5jb250YWluZXIuZ2V0UmVjdCgpO1xuICAgIGNvbnN0IHBvcFVwUmVjdCA9IHRoaXMucG9wVXBPbmUgIT09IG51bGwgPyB0aGlzLnBvcFVwT25lLmdldFJlY3QoKSA6IG51bGw7XG4gICAgY29uc3Qgc2NhbGVSZWN0ID0gdGhpcy5zY2FsZSAhPT0gbnVsbCA/IHRoaXMuc2NhbGUuZ2V0UmVjdCgpIDogbnVsbDtcblxuICAgIGlmICh0aGlzLmNvbnRhaW5lci5nZXRPcmllbnRhdGlvbigpID09PSAnaG9yaXpvbnRhbCcpIHtcbiAgICAgIGlmIChwb3BVcFJlY3QgIT09IG51bGwpIHtcbiAgICAgICAgbWFyZ2lucy50b3AgKz0gc2xpZGVyUmVjdC50b3AgLSBwb3BVcFJlY3QudG9wO1xuICAgICAgfVxuICAgICAgaWYgKHNjYWxlUmVjdCAhPT0gbnVsbCkge1xuICAgICAgICBtYXJnaW5zLmJvdHRvbSArPSBzY2FsZVJlY3QuYm90dG9tIC0gc2xpZGVyUmVjdC5ib3R0b207XG4gICAgICB9XG4gICAgfSBlbHNlIHtcbiAgICAgIGlmIChwb3BVcFJlY3QgIT09IG51bGwpIHtcbiAgICAgICAgbWFyZ2lucy5sZWZ0ICs9IHNsaWRlclJlY3QubGVmdCAtIHBvcFVwUmVjdC5sZWZ0O1xuICAgICAgfVxuICAgICAgaWYgKHNjYWxlUmVjdCAhPT0gbnVsbCkge1xuICAgICAgICBtYXJnaW5zLnJpZ2h0ICs9IHNjYWxlUmVjdC5yaWdodCAtIHNsaWRlclJlY3QucmlnaHQ7XG4gICAgICB9XG4gICAgfVxuXG4gICAgcmV0dXJuIG1hcmdpbnM7XG4gIH1cbn1cblxuZXhwb3J0IGRlZmF1bHQgU2ltcGxlU2xpZGVyVmlldztcbiIsImltcG9ydCB7IElTbGlkZXJNYXJnaW5zIH0gZnJvbSAnLi4vLi4vaW50ZXJmYWNlcyc7XG5pbXBvcnQgRWxlbWVudCBmcm9tICcuLi9lbGVtZW50L2VsZW1lbnQnO1xuXG5jbGFzcyBDb250YWluZXIgZXh0ZW5kcyBFbGVtZW50IHtcbiAgY29uc3RydWN0b3IoKSB7XG4gICAgc3VwZXIoJ3NsaWRlcicpO1xuICB9XG5cbiAgLyoqXG4gICAqINCU0L7QsdCw0LLQu9GP0LXRgiDQv9GA0LjQvdGP0YLRi9C5IGRpdiDRjdC70LXQvNC10L3RgiDQsiDQutC+0L3QtdGGINC60L7QvdGC0LXQudC90LXRgNCwXG4gICAqIEBwYXJhbSB7SFRNTERpdkVsZW1lbnR9IGNvbnRyb2wgLSBkaXYg0Y3Qu9C10LzQtdC90YIsINC60L7RgtC+0YDRi9C5INC00L7Qu9C20LXQvSDQsdGL0YLRjCDQtNC+0LHQsNCy0LvQtdC9INCyINC60L7QvdGC0LXQudC90LXRgFxuICAgKi9cbiAgYXBwZW5kKGNvbnRyb2w6IEhUTUxEaXZFbGVtZW50KTogdm9pZCB7XG4gICAgdGhpcy5lbGVtZW50LmFwcGVuZChjb250cm9sKTtcbiAgfVxuXG4gIC8qKlxuICAgKiDQo9GB0YLQsNC90LDQstC70LjQstCw0LXRgiDQvtGC0YHRgtGD0L/RiyDQvtGCINC70LXQstC+0LksINCy0LXRgNGF0L3QtdC5LCDQv9GA0LDQstC+0Lkg0Lgg0L3QuNC20L3QtdC5INCz0YDQsNC90LjRhiDRgdC70LDQudC00LXRgNCwXG4gICAqIEBwYXJhbSB7SVNsaWRlck1hcmdpbnN9IG1hcmdpbnMgLSDQvtCx0YrQtdC60YIg0YEg0L7RgtGB0YLRg9C/0LDQvNC4INC+0YIg0LvQtdCy0L7QuSwg0LLQtdGA0YXQvdC10LksINC/0YDQsNCy0L7QuVxuICAgKiDQuCDQvdC40LbQvdC10Lkg0LPRgNCw0L3QuNGGINGB0LvQsNC50LTQtdGA0LBcbiAgICovXG4gIHNldE1hcmdpbnMobWFyZ2luczogSVNsaWRlck1hcmdpbnMpOiB2b2lkIHtcbiAgICB0aGlzLmVsZW1lbnQuc3R5bGUubWFyZ2luTGVmdCA9IGAke21hcmdpbnMubGVmdH1weGA7XG4gICAgdGhpcy5lbGVtZW50LnN0eWxlLm1hcmdpblRvcCA9IGAke21hcmdpbnMudG9wfXB4YDtcbiAgICB0aGlzLmVsZW1lbnQuc3R5bGUubWFyZ2luUmlnaHQgPSBgJHttYXJnaW5zLnJpZ2h0fXB4YDtcbiAgICB0aGlzLmVsZW1lbnQuc3R5bGUubWFyZ2luQm90dG9tID0gYCR7bWFyZ2lucy5ib3R0b219cHhgO1xuICB9XG5cbiAgLyoqXG4gICAqINCh0LHRgNCw0YHRi9Cy0LDQtdGCINC+0YLRgdGC0YPQv9GLINC+0YIg0LPRgNCw0L3QuNGGINGB0LvQsNC50LTQtdGA0LAg0L3QsCAwXG4gICAqL1xuICByZXNldE1hcmdpbnMoKTogdm9pZCB7XG4gICAgdGhpcy5lbGVtZW50LnN0eWxlLm1hcmdpbiA9ICcwJztcbiAgfVxufVxuXG5leHBvcnQgZGVmYXVsdCBDb250YWluZXI7XG4iLCJpbXBvcnQgRWxlbWVudCBmcm9tICcuLi9lbGVtZW50L2VsZW1lbnQnO1xuXG5jbGFzcyBUcmFjayBleHRlbmRzIEVsZW1lbnQge1xuICBjb25zdHJ1Y3RvcigpIHtcbiAgICBzdXBlcignc2xpZGVyX190cmFjaycpO1xuICAgIHRoaXMuaW5pdCgpO1xuICB9XG5cbiAgLyoqXG4gICAqINCY0L3QuNGG0LjQsNC70LjQt9Cw0YbQuNGPINGC0YDQtdC60LAsINC/0L7QtNC60LvRjtGH0LXQvdC40LUg0L7QsdGA0LDQsdC+0YLRh9C40LrQvtCyINGB0L7QsdGL0YLQuNC5XG4gICAqL1xuICBwcml2YXRlIGluaXQoKTogdm9pZCB7XG4gICAgdGhpcy5lbGVtZW50LmFkZEV2ZW50TGlzdGVuZXIoJ2NsaWNrJywgdGhpcy5jbGlja1RvVHJhY2suYmluZCh0aGlzKSk7XG4gIH1cblxuICAvKipcbiAgICog0J7QsdGA0LDQsdC+0YLQutCwINC60LvQuNC60LAg0L/QviDRgtGA0LXQutGDXG4gICAqIEBwYXJhbSB7TW91c2VFdmVudH0gZXZlbnQgLSDQvtCx0YrQtdC60YIg0YHQvtCx0YvRgtC40Y8gY2xpY2tcbiAgICovXG4gIHByaXZhdGUgY2xpY2tUb1RyYWNrKGV2ZW50OiBNb3VzZUV2ZW50KTogdm9pZCB7XG4gICAgdGhpcy5zZXRQb3NpdGlvbih7IGxlZnQ6IGV2ZW50LmNsaWVudFgsIHRvcDogZXZlbnQuY2xpZW50WSB9KTtcbiAgICB0aGlzLnN1YmplY3Qubm90aWZ5KCdjbGlja1RvVHJhY2snKTtcbiAgfVxufVxuXG5leHBvcnQgZGVmYXVsdCBUcmFjaztcbiIsIi8qIGVzbGludCBvcGVyYXRvci1saW5lYnJlYWs6IFtcImVycm9yXCIsIFwiYWZ0ZXJcIl0gKi9cbi8qIGVzbGludC1kaXNhYmxlIGNvbW1hLWRhbmdsZSAqL1xuXG5pbXBvcnQgeyBJUG9zaXRpb24gfSBmcm9tICcuLi8uLi9pbnRlcmZhY2VzJztcbmltcG9ydCBFbGVtZW50IGZyb20gJy4uL2VsZW1lbnQvZWxlbWVudCc7XG5cbmNsYXNzIFRodW1iIGV4dGVuZHMgRWxlbWVudCB7XG4gIHByaXZhdGUgc2hpZnQgPSB7IHNoaWZ0WDogMCwgc2hpZnRZOiAwIH07XG4gIHByaXZhdGUgb25Nb3VzZU1vdmVIYW5kbGVyID0gdGhpcy5kcmFnLmJpbmQodGhpcyk7XG4gIHByaXZhdGUgb25Nb3VzZVVwSGFuZGxlciA9IHRoaXMuZW5kRHJhZy5iaW5kKHRoaXMpO1xuXG4gIGNvbnN0cnVjdG9yKG9yaWVudGF0aW9uPzogc3RyaW5nKSB7XG4gICAgc3VwZXIoJ3NsaWRlcl9fdGh1bWInLCBvcmllbnRhdGlvbik7XG5cbiAgICB0aGlzLmFkZE1vdXNlZG93bkV2ZW50TGlzdGVuZXIoKTtcbiAgICB0aGlzLmRpc2FibGVEcmFnQW5kRHJvcCgpO1xuICB9XG5cbiAgLyoqXG4gICAqINCj0YHRgtCw0L3QsNCy0LvQuNCy0LDQtdGCIHotaW5kZXhcbiAgICogQHBhcmFtIHtudW1iZXJ9IGluZGV4IC0g0L3QvtCy0L7QtSDQt9C90LDRh9C10L3QuNC1IHot0LjQvdC00LXQutGB0LBcbiAgICovXG4gIHNldFpJbmRleChpbmRleDogbnVtYmVyKTogdm9pZCB7XG4gICAgdGhpcy5lbGVtZW50LnN0eWxlLnpJbmRleCA9IGluZGV4LnRvU3RyaW5nKCk7XG4gIH1cblxuICAvKipcbiAgICog0J7RgtC60LvRjtGH0LDQtdGCIGh0bWw1IERyYWcgYW5kIERyb3BcbiAgICovXG4gIHByaXZhdGUgZGlzYWJsZURyYWdBbmREcm9wKCk6IHZvaWQge1xuICAgIHRoaXMuZWxlbWVudC5vbmRyYWdzdGFydCA9ICgpID0+IGZhbHNlO1xuICB9XG5cbiAgLyoqXG4gICAqINCU0L7QsdCw0LLQu9GP0LXRgiDRgdC+0LHRi9GC0LjQtSDQvdCwINC90LDQttCw0YLQuNC1INC60L3QvtC/0LrQuCDQvNGL0YjQuCDQvdCwINCx0LXQs9GD0L3QutC1XG4gICAqL1xuICBwcml2YXRlIGFkZE1vdXNlZG93bkV2ZW50TGlzdGVuZXIoKTogdm9pZCB7XG4gICAgdGhpcy5lbGVtZW50LmFkZEV2ZW50TGlzdGVuZXIoJ3BvaW50ZXJkb3duJywgdGhpcy5jbGlja1RvVGh1bWIuYmluZCh0aGlzKSk7XG4gIH1cblxuICAvKipcbiAgICog0J7QsdGA0LDQsdC+0YLQutCwINC60LDRgdCw0L3QuNGPINCx0LXQs9GD0L3QutCwINC80YvRiNC60L7QuVxuICAgKiBAcGFyYW0ge1BvaW50ZXJFdmVudH0gZXZlbnQgLSDQvtCx0YrQtdC60YIg0YHQvtCx0YvRgtC40Y8g0LrQu9C40LrQsFxuICAgKi9cbiAgcHJpdmF0ZSBjbGlja1RvVGh1bWIoZXZlbnQ6IFBvaW50ZXJFdmVudCk6IHZvaWQge1xuICAgIFRodW1iLmRpc2FibGVTZWxlY3Rpb24oKTtcblxuICAgIGNvbnN0IHRodW1iQ29vcmRzOiBET01SZWN0ID0gdGhpcy5lbGVtZW50LmdldEJvdW5kaW5nQ2xpZW50UmVjdCgpO1xuICAgIHRoaXMuc2V0VGh1bWJTaGlmdChcbiAgICAgIHsgbGVmdDogZXZlbnQuY2xpZW50WCwgdG9wOiBldmVudC5jbGllbnRZIH0sXG4gICAgICB7IGxlZnQ6IHRodW1iQ29vcmRzLmxlZnQsIHRvcDogdGh1bWJDb29yZHMudG9wIH0sXG4gICAgKTtcblxuICAgIGRvY3VtZW50LmFkZEV2ZW50TGlzdGVuZXIoJ3BvaW50ZXJtb3ZlJywgdGhpcy5vbk1vdXNlTW92ZUhhbmRsZXIpO1xuICAgIGRvY3VtZW50LmFkZEV2ZW50TGlzdGVuZXIoJ3BvaW50ZXJ1cCcsIHRoaXMub25Nb3VzZVVwSGFuZGxlcik7XG5cbiAgICB0aGlzLnN1YmplY3Qubm90aWZ5KCd0aHVtYklzQ2F0Y2hlZCcpO1xuICAgIHRoaXMuaW5jcmVhc2VaSW5kZXgoKTtcbiAgfVxuXG4gIC8qKlxuICAgKiDQodC+0YXRgNCw0L3Rj9C10YIg0YDQsNC30L3QuNGG0YMg0LzQtdC20LTRgyDQv9C+0LfQuNGG0LjRj9C80Lgg0LHQtdCz0YPQvdC60LAg0Lgg0LrRg9GA0YHQvtGA0LBcbiAgICogQHBhcmFtIHtJUG9zaXRpb259IGN1cnNvclBvcyAtINC/0L7Qt9C40YbQuNGPINC60YPRgNGB0L7RgNCwXG4gICAqIEBwYXJhbSB7SVBvc2l0aW9ufSB0aHVtYlBvcyAtINC/0L7Qt9C40YbQuNGPINCx0LXQs9GD0L3QutCwXG4gICAqL1xuICBwcml2YXRlIHNldFRodW1iU2hpZnQoY3Vyc29yUG9zOiBJUG9zaXRpb24sIHRodW1iUG9zOiBJUG9zaXRpb24pIHtcbiAgICB0aGlzLnNoaWZ0LnNoaWZ0WCA9IGN1cnNvclBvcy5sZWZ0IC0gdGh1bWJQb3MubGVmdDtcbiAgICB0aGlzLnNoaWZ0LnNoaWZ0WSA9IGN1cnNvclBvcy50b3AgLSB0aHVtYlBvcy50b3A7XG4gIH1cblxuICAvKipcbiAgICog0KPQstC10LvQuNGH0LjQstCw0LXRgiB6LWluZGV4INC90LAg0LXQtNC40L3QuNGG0YNcbiAgICovXG4gIHByaXZhdGUgaW5jcmVhc2VaSW5kZXgoKSB7XG4gICAgY29uc3QgekluZGV4ID0gdGhpcy5nZXRTdHlsZSgnei1pbmRleCcpO1xuICAgIHRoaXMuZWxlbWVudC5zdHlsZS56SW5kZXggPSAocGFyc2VJbnQoekluZGV4IHx8ICcwJywgMTApICsgMSkudG9TdHJpbmcoKTtcbiAgfVxuXG4gIC8qKlxuICAgKiDQktC+0LfQstGA0LDRidCw0LXRgiB6LWluZGV4INC6INC30L3QsNGH0LXQvdC40Y4g0L/Qvi3Rg9C80L7Qu9GH0LDQvdC40Y5cbiAgICovXG4gIHJlc2V0WkluZGV4KCk6IHZvaWQge1xuICAgIHRoaXMuZWxlbWVudC5zdHlsZS56SW5kZXggPSAnJztcbiAgfVxuXG4gIC8qKlxuICAgKiAg0J7Qv9C+0LLQtdGJ0LDQtdGCINC/0L7QtNC/0LjRgdGH0LjQutC+0LIg0L4g0YLQvtC8LCDRh9GC0L4g0LHQtdCz0YPQvdC+0Log0L/Ri9GC0LDRjtGC0YHRjyDQv9C10YDQtdC80LXRgdGC0LjRgtGMXG4gICAqL1xuICBwcml2YXRlIGRyYWcoZXZlbnQ6IFBvaW50ZXJFdmVudCk6IHZvaWQge1xuICAgIHRoaXMuc2V0UG9zaXRpb24oe1xuICAgICAgbGVmdDogZXZlbnQuY2xpZW50WCxcbiAgICAgIHRvcDogZXZlbnQuY2xpZW50WSxcbiAgICB9KTtcblxuICAgIHRoaXMuc3ViamVjdC5ub3RpZnkoJ3RodW1iSXNEcmFnZ2VkJyk7XG4gIH1cblxuICAvKipcbiAgICog0KPRgdGC0LDQvdCw0LLQu9C40LLQsNC10YIg0L/QvtC30LjRhtC40Y4g0LrRg9GA0YHQvtGA0LBcbiAgICogQHBhcmFtIHtJUG9zaXRpb259IGN1cnNvclBvc2l0aW9uIC0g0L7QsdGK0LXQutGCINGBINC/0L7Qt9C40YbQuNC10Lkg0LrRg9GA0YHQvtGA0LBcbiAgICog0L7RgtC90L7RgdC40YLQtdC70YzQvdC+INC70LXQstC+0LPQviDQuCDQstC10YDRhdC90LXQs9C+INC60YDQsNGPINGN0LrRgNCw0L3QsFxuICAgKi9cbiAgcHJvdGVjdGVkIHNldFBvc2l0aW9uKGN1cnNvclBvc2l0aW9uOiBJUG9zaXRpb24pOiB2b2lkIHtcbiAgICBzdXBlci5zZXRQb3NpdGlvbihjdXJzb3JQb3NpdGlvbik7XG4gICAgdGhpcy5sYXN0UG9zaXRpb24ubGVmdCAtPSB0aGlzLnNoaWZ0LnNoaWZ0WDtcbiAgICB0aGlzLmxhc3RQb3NpdGlvbi50b3AgLT0gdGhpcy5zaGlmdC5zaGlmdFk7XG4gIH1cblxuICAvKipcbiAgICog0JfQsNCy0LXRgNGI0LDQtdGCINC/0LXRgNC10LTQstC40LbQtdC90LjQtSDQsdC10LPRg9C90LrQsCwg0YPQtNCw0LvRj9GPINGB0LvRg9GI0LDRgtC10LvQtdC5INGB0L7QsdGL0YLQuNC5LCDQutC+0YLQvtGA0YvQtSDQsdC+0LvRjNGI0LUg0L3QtSDQvdGD0LbQvdGLXG4gICAqL1xuICBwcml2YXRlIGVuZERyYWcoKTogdm9pZCB7XG4gICAgVGh1bWIuZW5hYmxlU2VsZWN0aW9uKCk7XG5cbiAgICBkb2N1bWVudC5yZW1vdmVFdmVudExpc3RlbmVyKCdwb2ludGVybW92ZScsIHRoaXMub25Nb3VzZU1vdmVIYW5kbGVyKTtcbiAgICBkb2N1bWVudC5yZW1vdmVFdmVudExpc3RlbmVyKCdwb2ludGVydXAnLCB0aGlzLm9uTW91c2VVcEhhbmRsZXIpO1xuICB9XG5cbiAgLyoqXG4gICAqINCf0LXRgNC10LzQtdGJ0LDQtdGCINCx0LXQs9GD0L3QvtC6INC90LAg0L3QvtCy0YPRjiDQv9C+0LfQuNGG0LjRjlxuICAgKiBAcGFyYW0ge0lQb3NpdGlvbn0gcG9zaXRpb24gLSDQvtCx0YrQtdC60YIg0YEg0L3QvtCy0L7QuSDQv9C+0LfQuNGG0LjQtdC5INCx0LXQs9GD0L3QutCwXG4gICAqL1xuICBtb3ZlVG8ocG9zaXRpb246IElQb3NpdGlvbik6IHZvaWQge1xuICAgIHRoaXMubGFzdFBvc2l0aW9uID0gcG9zaXRpb247XG4gICAgdGhpcy5lbGVtZW50LnN0eWxlLmxlZnQgPSBgJHtwb3NpdGlvbi5sZWZ0fXB4YDtcbiAgICB0aGlzLmVsZW1lbnQuc3R5bGUudG9wID0gYCR7cG9zaXRpb24udG9wfXB4YDtcbiAgfVxuXG4gIC8qKlxuICAgKiDQntGC0LrQu9GO0YfQtdC90LjQtSDQstGL0LTQtdC70LXQvdC40Y8g0L/RgNC4INC/0LXRgNC10YLRj9Cz0LjQstCw0L3QuNC4INCx0LXQs9GD0L3QutCwXG4gICAqL1xuICBwcml2YXRlIHN0YXRpYyBkaXNhYmxlU2VsZWN0aW9uKCkge1xuICAgIGRvY3VtZW50Lm9uc2VsZWN0c3RhcnQgPSAoKSA9PiBmYWxzZTtcbiAgICBkb2N1bWVudC5vbnBvaW50ZXJkb3duID0gKCkgPT4gZmFsc2U7XG4gIH1cblxuICAvKipcbiAgICog0JLQutC70Y7Rh9C10L3QuNC1INCy0YvQtNC10LvQtdC90LjRjyDRgtC10LrRgdGC0LBcbiAgICovXG4gIHByaXZhdGUgc3RhdGljIGVuYWJsZVNlbGVjdGlvbigpIHtcbiAgICBkb2N1bWVudC5vbnNlbGVjdHN0YXJ0ID0gbnVsbDtcbiAgICBkb2N1bWVudC5vbnBvaW50ZXJkb3duID0gbnVsbDtcbiAgfVxufVxuXG5leHBvcnQgZGVmYXVsdCBUaHVtYjtcbiIsImltcG9ydCB7IElQb3BVcFBhcmFtcywgSVBvc2l0aW9uIH0gZnJvbSAnLi4vLi4vaW50ZXJmYWNlcyc7XG5pbXBvcnQgRWxlbWVudCBmcm9tICcuLi9lbGVtZW50L2VsZW1lbnQnO1xuXG5jbGFzcyBQb3BVcCBleHRlbmRzIEVsZW1lbnQge1xuICBjb25zdHJ1Y3RvcihvcmllbnRhdGlvbj86IHN0cmluZykge1xuICAgIHN1cGVyKCdzbGlkZXJfX3BvcC11cCcsIG9yaWVudGF0aW9uKTtcbiAgfVxuXG4gIC8qKlxuICAgKiDQntCx0L3QvtCy0LvRj9C10YIg0L/QvtC30LjRhtC40Y4g0LLRgdC/0LvRi9Cy0LDRjtGJ0LXQuSDQv9C+0LTRgdC60LDQt9C60Lgg0Lgg0LXRkSDQt9C90LDRh9C10L3QuNC1XG4gICAqIEBwYXJhbSB7SVBvcFVwUGFyYW1zfSBwYXJhbXMgLSDQvtCx0YrQtdC60YIg0YEg0L3QvtCy0L7QuSDQv9C+0LfQuNGG0LjQtdC5INC4INC30L3QsNGH0LXQvdC40LXQvCDQstGB0L/Qu9GL0LLQsNGO0YnQtdC5INC/0L7QtNGB0LrQsNC30LrQuFxuICAgKi9cbiAgdXBkYXRlKHBhcmFtczogSVBvcFVwUGFyYW1zKTogdm9pZCB7XG4gICAgdGhpcy51cGRhdGVWYWx1ZShwYXJhbXMudmFsdWUpO1xuICAgIHRoaXMudXBkYXRlUG9zaXRpb24ocGFyYW1zLnBvc2l0aW9uKTtcbiAgfVxuXG4gIC8qKlxuICAgKiDQntCx0L3QvtCy0LvRj9C10YIg0LfQvdCw0YfQtdC90LjQtSDQstGB0L/Qu9GL0LLQsNGO0YnQtdC5INC/0L7QtNGB0LrQsNC30LrQuFxuICAgKiBAcGFyYW0ge251bWJlcn0gdmFsdWUgLSDQvdC+0LLQvtC1INC30L3QsNGH0LXQvdC40LUg0LLRgdC/0LvRi9Cy0LDRjtGJ0LXQuSDQv9C+0LTRgdC60LDQt9C60LhcbiAgICovXG4gIHByaXZhdGUgdXBkYXRlVmFsdWUodmFsdWU6IG51bWJlcik6IHZvaWQge1xuICAgIHRoaXMuZWxlbWVudC5pbm5lckhUTUwgPSBgJHt2YWx1ZX1gO1xuICB9XG5cbiAgLyoqXG4gICAqINCe0LHQvdC+0LLQu9GP0LXRgiDQv9C+0LfQuNGG0LjRjiDQstGB0L/Qu9GL0LLQsNGO0YnQtdC5INC/0L7QtNGB0LrQsNC30LrQuFxuICAgKiBAcGFyYW0ge0lQb3NpdGlvbn0gcG9zaXRpb24gLSDQvtCx0YrQtdC60YIg0YEg0L3QvtCy0L7QuSDQv9C+0LfQuNGG0LjQtdC5INCy0YHQv9C70YvQstCw0Y7RidC10Lkg0L/QvtC00YHQutCw0LfQutC4XG4gICAqL1xuICBwcml2YXRlIHVwZGF0ZVBvc2l0aW9uKHBvc2l0aW9uOiBJUG9zaXRpb24pOiB2b2lkIHtcbiAgICB0aGlzLmVsZW1lbnQuc3R5bGUubGVmdCA9IGAke3Bvc2l0aW9uLmxlZnR9cHhgO1xuICAgIHRoaXMuZWxlbWVudC5zdHlsZS50b3AgPSBgJHtwb3NpdGlvbi50b3B9cHhgO1xuICB9XG59XG5cbmV4cG9ydCBkZWZhdWx0IFBvcFVwO1xuIiwiaW1wb3J0IHsgSVByb2dyZXNzQmFyUGFyYW1zIH0gZnJvbSAnLi4vLi4vaW50ZXJmYWNlcyc7XG5pbXBvcnQgRWxlbWVudCBmcm9tICcuLi9lbGVtZW50L2VsZW1lbnQnO1xuXG5jbGFzcyBQcm9ncmVzc0JhciBleHRlbmRzIEVsZW1lbnQge1xuICBjb25zdHJ1Y3RvcigpIHtcbiAgICBzdXBlcignc2xpZGVyX19wcm9ncmVzcy1iYXInKTtcbiAgfVxuXG4gIC8qKlxuICAgKiDQntCx0L3QvtCy0LvRj9C10YIg0L/QvtC70L7QttC10L3QuNC1INC4INGA0LDQt9C80LXRgCDQv9GA0L7Qs9GA0LXRgdGBLdCx0LDRgNCwXG4gICAqIEBwYXJhbSB7SVByb2dyZXNzQmFyUGFyYW1zfSBwYXJhbXMgLSDQvtCx0YrQtdC60YIg0YEg0YDQsNC30LzQtdGA0L7QvCDQuCDQv9C+0LvQvtC20LXQvdC40LXQvCDQv9GA0L7Qs9GA0LXRgdGBLdCx0LDRgNCwXG4gICAqL1xuICB1cGRhdGUocGFyYW1zOiBJUHJvZ3Jlc3NCYXJQYXJhbXMpOiB2b2lkIHtcbiAgICB0aGlzLmVsZW1lbnQuc3R5bGUubGVmdCA9IGAke3BhcmFtcy5wb3NpdGlvbi5sZWZ0fXB4YDtcbiAgICB0aGlzLmVsZW1lbnQuc3R5bGUudG9wID0gYCR7cGFyYW1zLnBvc2l0aW9uLnRvcH1weGA7XG4gICAgdGhpcy5lbGVtZW50LnN0eWxlLndpZHRoID0gYCR7cGFyYW1zLnNpemUud2lkdGh9cHhgO1xuICAgIHRoaXMuZWxlbWVudC5zdHlsZS5oZWlnaHQgPSBgJHtwYXJhbXMuc2l6ZS5oZWlnaHR9cHhgO1xuICB9XG59XG5cbmV4cG9ydCBkZWZhdWx0IFByb2dyZXNzQmFyO1xuIiwiLyogZXNsaW50LWRpc2FibGUgY29tbWEtZGFuZ2xlICovXG5pbXBvcnQgeyBJU2NhbGVQb2ludFBhcmFtcywgSVNpemUgfSBmcm9tICcuLi8uLi9pbnRlcmZhY2VzJztcbmltcG9ydCBFbGVtZW50IGZyb20gJy4uL2VsZW1lbnQvZWxlbWVudCc7XG5cbmNsYXNzIFNjYWxlIGV4dGVuZHMgRWxlbWVudCB7XG4gIGNvbnN0cnVjdG9yKG9yaWVudGF0aW9uPzogc3RyaW5nKSB7XG4gICAgc3VwZXIoJ3NsaWRlcl9fc2NhbGUnLCBvcmllbnRhdGlvbik7XG4gICAgdGhpcy5pbml0KCk7XG4gIH1cblxuICAvKipcbiAgICog0JjQvdC40YbQuNCw0LvQuNC30LDRhtC40Y8g0YjQutCw0LvRiywg0L/QvtC00LrQu9GO0YfQtdC90LjQtSDQvtCx0YDQsNCx0L7RgtGH0LjQutC+0LIg0YHQvtCx0YvRgtC40LlcbiAgICovXG4gIHByaXZhdGUgaW5pdCgpOiB2b2lkIHtcbiAgICB0aGlzLmVsZW1lbnQuYWRkRXZlbnRMaXN0ZW5lcignY2xpY2snLCB0aGlzLmNsaWNrVG9TY2FsZS5iaW5kKHRoaXMpKTtcbiAgfVxuXG4gIC8qKlxuICAgKiDQntCx0YDQsNCx0L7RgtC60LAg0LrQu9C40LrQsCDQv9C+INGI0LrQsNC70LVcbiAgICogQHBhcmFtIHtNb3VzZUV2ZW50fSBldmVudCAtINC+0LHRitC10LrRgiDRgdC+0LHRi9GC0LjRjyBjbGlja1xuICAgKi9cbiAgcHJpdmF0ZSBjbGlja1RvU2NhbGUoZXZlbnQ6IE1vdXNlRXZlbnQpOiB2b2lkIHtcbiAgICB0aGlzLnNldFBvc2l0aW9uKHsgbGVmdDogZXZlbnQuY2xpZW50WCwgdG9wOiBldmVudC5jbGllbnRZIH0pO1xuICAgIHRoaXMuc3ViamVjdC5ub3RpZnkoJ2NsaWNrVG9TY2FsZScpO1xuICB9XG5cbiAgLyoqXG4gICAqINCS0L7Qt9Cy0YDQsNGJ0LDQtdGCINGA0LDQt9C80LXRgCDQvtC00L3QvtCz0L4g0LTQtdC70LXQvdC40Y8g0YjQutCw0LvRi1xuICAgKiBAcGFyYW0ge251bWJlcn0gdmFsdWUgLSDQt9C90LDRh9C10L3QuNC1INC00LXQu9C10L3QuNGPINGI0LrQsNC70YtcbiAgICogQHJldHVybnMge0lTaXplfSAtINC+0LHRitC10LrRgiDRgSDRiNC40YDQuNC90L7QuSDQuCDQstGL0YHQvtGC0L7QuSDQvtC00L3QvtCz0L4g0LTQtdC70LXQvdC40Y8g0YjQutCw0LvRi1xuICAgKi9cbiAgZ2V0UG9pbnRTaXplKHZhbHVlOiBudW1iZXIpOiBJU2l6ZSB7XG4gICAgdGhpcy5hZGRQb2ludCh7XG4gICAgICBwb3NpdGlvbjogeyBsZWZ0OiAwLCB0b3A6IDAgfSxcbiAgICAgIHNpemU6IHsgd2lkdGg6IDAsIGhlaWdodDogMCB9LFxuICAgICAgdmFsdWUsXG4gICAgfSk7XG5cbiAgICBjb25zdCBwb2ludFNpemUgPSB7IHdpZHRoOiAwLCBoZWlnaHQ6IDAgfTtcbiAgICBjb25zdCBzY2FsZVBvaW50OiBIVE1MRGl2RWxlbWVudCB8IG51bGwgPSB0aGlzLmVsZW1lbnQucXVlcnlTZWxlY3RvcihcbiAgICAgICcuc2xpZGVyX19zY2FsZS1wb2ludCcsXG4gICAgKTtcblxuICAgIHBvaW50U2l6ZS53aWR0aCA9IHNjYWxlUG9pbnQ/Lm9mZnNldFdpZHRoIHx8IDA7XG4gICAgcG9pbnRTaXplLmhlaWdodCA9IHNjYWxlUG9pbnQ/Lm9mZnNldEhlaWdodCB8fCAwO1xuICAgIHNjYWxlUG9pbnQ/LnJlbW92ZSgpO1xuXG4gICAgcmV0dXJuIHBvaW50U2l6ZTtcbiAgfVxuXG4gIC8qKlxuICAgKiDQlNC+0LHQsNCy0LvRj9C10YIg0LTQtdC70LXQvdC40Y8g0L3QsCDRiNC60LDQu9GDXG4gICAqIEBwYXJhbSB7SVNjYWxlUG9pbnRQYXJhbXN9IHBvaW50cyAtINC80LDRgdGB0LjQsiDQvtCx0YrQtdC60YLQvtCyINGBINC/0LDRgNCw0LzQtdGC0YDQsNC80Lgg0LLRgdC10YUg0LTQtdC70LXQvdC40Lkg0YjQutCw0LvRi1xuICAgKi9cbiAgYWRkUG9pbnRzKHBvaW50czogSVNjYWxlUG9pbnRQYXJhbXNbXSk6IHZvaWQge1xuICAgIGZvciAobGV0IHBvaW50ID0gMDsgcG9pbnQgPCBwb2ludHMubGVuZ3RoOyBwb2ludCArPSAxKSB7XG4gICAgICB0aGlzLmFkZFBvaW50KHBvaW50c1twb2ludF0pO1xuICAgIH1cbiAgfVxuXG4gIC8qKlxuICAgKiDQlNC+0LHQsNCy0LvRj9C10YIg0L3QsCDRiNC60LDQu9GDINC+0LTQvdC+INC00LXQu9C10L3QuNC1XG4gICAqIEBwYXJhbSBwb2ludCAtINC+0LHRitC10LrRgiDRgSDQv9Cw0YDQsNC80LXRgtGA0LDQvNC4INC+0LTQvdC+0LPQviDQtNC10LvQtdC90LjRjyDRiNC60LDQu9GLXG4gICAqL1xuICBwcml2YXRlIGFkZFBvaW50KHBvaW50OiBJU2NhbGVQb2ludFBhcmFtcyk6IHZvaWQge1xuICAgIGNvbnN0IG9yaWVudGF0aW9uID0gdGhpcy5nZXRPcmllbnRhdGlvbigpO1xuICAgIGNvbnN0IHNjYWxlUG9pbnQ6IEhUTUxFbGVtZW50ID0gZG9jdW1lbnQuY3JlYXRlRWxlbWVudCgnZGl2Jyk7XG4gICAgc2NhbGVQb2ludC5jbGFzc0xpc3QuYWRkKFxuICAgICAgJ3NsaWRlcl9fc2NhbGUtcG9pbnQnLFxuICAgICAgYHNsaWRlcl9fc2NhbGUtcG9pbnRfJHtvcmllbnRhdGlvbn1gLFxuICAgICk7XG4gICAgaWYgKHBvaW50LnNpemUud2lkdGggPiAwKSB7XG4gICAgICBzY2FsZVBvaW50LnN0eWxlLndpZHRoID0gYCR7cG9pbnQuc2l6ZS53aWR0aH1weGA7XG4gICAgfVxuXG4gICAgaWYgKG9yaWVudGF0aW9uID09PSAnaG9yaXpvbnRhbCcpIHtcbiAgICAgIHRoaXMuZWxlbWVudC5zdHlsZS5oZWlnaHQgPSBgJHtwb2ludC5zaXplLmhlaWdodH1weGA7XG4gICAgfSBlbHNlIHtcbiAgICAgIHRoaXMuZWxlbWVudC5zdHlsZS53aWR0aCA9IGAke3BvaW50LnNpemUud2lkdGh9cHhgO1xuICAgIH1cblxuICAgIGNvbnN0IGRpdmlzaW9uTWFya2VyOiBIVE1MRWxlbWVudCA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoJ2RpdicpO1xuICAgIGRpdmlzaW9uTWFya2VyLmNsYXNzTGlzdC5hZGQoJ3NsaWRlcl9fc2NhbGUtcG9pbnQtbWFya2VyJyk7XG5cbiAgICBjb25zdCBkaXZpc2lvbkxhYmVsOiBIVE1MRWxlbWVudCA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoJ2RpdicpO1xuICAgIGRpdmlzaW9uTGFiZWwuY2xhc3NMaXN0LmFkZChcbiAgICAgICdzbGlkZXJfX3NjYWxlLXBvaW50LWxhYmVsJyxcbiAgICAgIGBzbGlkZXJfX3NjYWxlLXBvaW50LWxhYmVsXyR7b3JpZW50YXRpb259YCxcbiAgICApO1xuICAgIGRpdmlzaW9uTGFiZWwuaW5uZXJUZXh0ID0gcG9pbnQudmFsdWUudG9TdHJpbmcoKTtcblxuICAgIHNjYWxlUG9pbnQuc3R5bGUubGVmdCA9IGAke3BvaW50LnBvc2l0aW9uLmxlZnR9cHhgO1xuICAgIHNjYWxlUG9pbnQuc3R5bGUudG9wID0gYCR7cG9pbnQucG9zaXRpb24udG9wfXB4YDtcblxuICAgIHNjYWxlUG9pbnQuYXBwZW5kKGRpdmlzaW9uTWFya2VyKTtcbiAgICBzY2FsZVBvaW50LmFwcGVuZChkaXZpc2lvbkxhYmVsKTtcbiAgICB0aGlzLmVsZW1lbnQuYXBwZW5kKHNjYWxlUG9pbnQpO1xuICB9XG59XG5cbmV4cG9ydCBkZWZhdWx0IFNjYWxlO1xuIiwiLyogZXNsaW50LWRpc2FibGUgQHR5cGVzY3JpcHQtZXNsaW50L25vLXVudXNlZC12YXJzICovXG4vKiBlc2xpbnQtZGlzYWJsZSBAdHlwZXNjcmlwdC1lc2xpbnQvbm8tZXhwbGljaXQtYW55ICovXG4vKiBlc2xpbnQtZGlzYWJsZSBmdW5jLW5hbWVzICovXG4vKiBlc2xpbnQtZGlzYWJsZSBuby1wYXJhbS1yZWFzc2lnbiAqL1xuXG5pbXBvcnQgQ29udHJvbFBhbmVsVmlldyBmcm9tICcuL3ZpZXcvY29udHJvbC1wYW5lbC12aWV3JztcbmltcG9ydCBDb250cm9sUGFuZWxNb2RlbCBmcm9tICcuL21vZGVsL2NvbnRyb2wtcGFuZWwtbW9kZWwnO1xuaW1wb3J0IENvbnRyb2xQYW5lbENvbnRyb2xsZXIgZnJvbSAnLi9jb250cm9sbGVyL2NvbnRyb2wtcGFuZWwtY29udHJvbGxlcic7XG5cbigoJCkgPT4ge1xuICBjb25zdCBtZXRob2RzOiBhbnkgPSB7XG4gICAgaW5pdCgpOiB2b2lkIHtcbiAgICAgIHJldHVybiB0aGlzLmVhY2goZnVuY3Rpb24gKHRoaXM6IEhUTUxEaXZFbGVtZW50KSB7XG4gICAgICAgIGNvbnN0IHZpZXcgPSBuZXcgQ29udHJvbFBhbmVsVmlldyh0aGlzKTtcbiAgICAgICAgY29uc3QgbW9kZWwgPSBuZXcgQ29udHJvbFBhbmVsTW9kZWwoJCh0aGlzKSk7XG4gICAgICAgIGNvbnN0IGNvbnRyb2xsZXIgPSBuZXcgQ29udHJvbFBhbmVsQ29udHJvbGxlcih2aWV3LCBtb2RlbCk7XG4gICAgICB9KTtcbiAgICB9LFxuICB9O1xuXG4gICQuZm4uY29udHJvbFBhbmVsID0gZnVuY3Rpb24gKGFjdGlvbj86IHN0cmluZywgYXJncz8pOiBKUXVlcnk8SFRNTEVsZW1lbnQ+IHtcbiAgICBsZXQgbWV0aG9kOiBhbnk7XG5cbiAgICBpZiAodHlwZW9mIGFjdGlvbiA9PT0gJ3N0cmluZycgJiYgbWV0aG9kc1thY3Rpb25dKSB7XG4gICAgICBtZXRob2QgPSBtZXRob2RzW2FjdGlvbl0uY2FsbCh0aGlzLCBhcmdzKTtcbiAgICB9IGVsc2UgaWYgKHR5cGVvZiBhY3Rpb24gPT09ICdvYmplY3QnIHx8ICFhY3Rpb24pIHtcbiAgICAgIG1ldGhvZCA9IG1ldGhvZHMuaW5pdC5jYWxsKHRoaXMsIGFyZ3MpO1xuICAgIH0gZWxzZSB7XG4gICAgICAkLmVycm9yKGDQnNC10YLQvtC0INGBINC40LzQtdC90LXQvCAke2FjdGlvbn0g0L3QtSDRgdGD0YnQtdGB0YLQstGD0LXRgiDQtNC70Y8galF1ZXJ5LmNvbnRyb2xQYW5lbGApO1xuICAgICAgbWV0aG9kID0gdGhpcztcbiAgICB9XG5cbiAgICByZXR1cm4gbWV0aG9kO1xuICB9O1xufSkoalF1ZXJ5KTtcbiIsIi8qIGVzbGludC1kaXNhYmxlIGNvbW1hLWRhbmdsZSAqL1xuXG5pbXBvcnQgQ29udGFpbmVyIGZyb20gJy4vY29udGFpbmVyL2NvbnRhaW5lcic7XG5pbXBvcnQgVGV4dEZpZWxkIGZyb20gJy4vdGV4dC1maWVsZC90ZXh0LWZpZWxkJztcbmltcG9ydCBncm91cEVsZW1lbnRzIGZyb20gJy4vZ3JvdXAtZWxlbWVudHMnO1xuaW1wb3J0IFJhZGlvQnV0dG9uIGZyb20gJy4vcmFkaW8tYnV0dG9uL3JhZGlvLWJ1dHRvbic7XG5pbXBvcnQgQ2hlY2tib3ggZnJvbSAnLi9jaGVja2JveC9jaGVja2JveCc7XG5pbXBvcnQgeyBJT2JzZXJ2ZXIsIElUaHVtYnNWYWx1ZXMgfSBmcm9tICcuLi8uLi9zaW1wbGUtc2xpZGVyL2ludGVyZmFjZXMnO1xuaW1wb3J0IFN1YmplY3QgZnJvbSAnLi4vLi4vc2ltcGxlLXNsaWRlci9zdWJqZWN0L3N1YmplY3QnO1xuXG5jbGFzcyBDb250cm9sUGFuZWxWaWV3IGV4dGVuZHMgU3ViamVjdCBpbXBsZW1lbnRzIElPYnNlcnZlciB7XG4gIHByaXZhdGUgc2xpZGVyV3JhcHBlcjogSFRNTERpdkVsZW1lbnQ7XG4gIHByaXZhdGUgY29udGFpbmVyOiBDb250YWluZXI7XG4gIHByaXZhdGUgdGh1bWJPbmVWYWx1ZTogVGV4dEZpZWxkO1xuICBwcml2YXRlIHRodW1iVHdvVmFsdWU6IFRleHRGaWVsZDtcbiAgcHJpdmF0ZSBtaW46IFRleHRGaWVsZDtcbiAgcHJpdmF0ZSBtYXg6IFRleHRGaWVsZDtcbiAgcHJpdmF0ZSBzdGVwOiBUZXh0RmllbGQ7XG4gIHByaXZhdGUgdHlwZVJhZGlvOiBSYWRpb0J1dHRvbjtcbiAgcHJpdmF0ZSBvcmllbnRhdGlvblJhZGlvOiBSYWRpb0J1dHRvbjtcbiAgcHJpdmF0ZSBzY2FsZUNoZWNrYm94OiBDaGVja2JveDtcbiAgcHJpdmF0ZSBwb3BVcHNDaGVja2JveDogQ2hlY2tib3g7XG5cbiAgY29uc3RydWN0b3Ioc2xpZGVyV3JhcHBlcjogSFRNTERpdkVsZW1lbnQpIHtcbiAgICBzdXBlcigpO1xuICAgIHRoaXMuY29udGFpbmVyID0gbmV3IENvbnRhaW5lcigpO1xuICAgIHRoaXMuc2xpZGVyV3JhcHBlciA9IHNsaWRlcldyYXBwZXI7XG4gICAgdGhpcy50aHVtYk9uZVZhbHVlID0gbmV3IFRleHRGaWVsZCgnRmlyc3QgdGh1bWIgdmFsdWUnKTtcbiAgICB0aGlzLnRodW1iVHdvVmFsdWUgPSBuZXcgVGV4dEZpZWxkKCdTZWNvbmQgdGh1bWIgdmFsdWUnKTtcbiAgICB0aGlzLm1pbiA9IG5ldyBUZXh0RmllbGQoJ21pbiB2YWx1ZScpO1xuICAgIHRoaXMubWF4ID0gbmV3IFRleHRGaWVsZCgnbWF4IHZhbHVlJyk7XG4gICAgdGhpcy5zdGVwID0gbmV3IFRleHRGaWVsZCgnc3RlcCcpO1xuICAgIHRoaXMudHlwZVJhZGlvID0gbmV3IFJhZGlvQnV0dG9uKFxuICAgICAgJ3R5cGUnLFxuICAgICAgeyBsYWJlbDogJ3NpbmdsZScsIHZhbHVlOiAnc2luZ2xlJyB9LFxuICAgICAgeyBsYWJlbDogJ3JhbmdlJywgdmFsdWU6ICdyYW5nZScgfSxcbiAgICApO1xuICAgIHRoaXMub3JpZW50YXRpb25SYWRpbyA9IG5ldyBSYWRpb0J1dHRvbihcbiAgICAgICdvcmllbnRhdGlvbicsXG4gICAgICB7IGxhYmVsOiAnaG9yaXpvbnRhbCcsIHZhbHVlOiAnaG9yaXpvbnRhbCcgfSxcbiAgICAgIHsgbGFiZWw6ICd2ZXJ0aWNhbCcsIHZhbHVlOiAndmVydGljYWwnIH0sXG4gICAgKTtcbiAgICB0aGlzLnNjYWxlQ2hlY2tib3ggPSBuZXcgQ2hlY2tib3goe1xuICAgICAgbGFiZWw6ICdzY2FsZScsXG4gICAgICBuYW1lOiAnc2NhbGUnLFxuICAgICAgdmFsdWU6ICdzY2FsZScsXG4gICAgfSk7XG4gICAgdGhpcy5wb3BVcHNDaGVja2JveCA9IG5ldyBDaGVja2JveCh7XG4gICAgICBsYWJlbDogJ3BvcCB1cHMnLFxuICAgICAgbmFtZTogJ3BvcFVwcycsXG4gICAgICB2YWx1ZTogJ3BvcFVwcycsXG4gICAgfSk7XG5cbiAgICB0aGlzLnN1YnNjcmliZVRvRXZlbnRzKCk7XG4gICAgdGhpcy5jcmVhdGVQYW5lbCgpO1xuICB9XG5cbiAgcHJpdmF0ZSBjcmVhdGVQYW5lbCgpOiB2b2lkIHtcbiAgICB0aGlzLmNvbnRhaW5lci5hcHBlbmQoXG4gICAgICBncm91cEVsZW1lbnRzKHtcbiAgICAgICAgd3JhcHBlckNsYXNzOiAnY29udHJvbC1wYW5lbF9fdGV4dC1maWVsZHMtZ3JvdXAnLFxuICAgICAgICBlbGVtZW50czogW1xuICAgICAgICAgIHRoaXMudGh1bWJPbmVWYWx1ZS5nZXRDb250cm9sKCksXG4gICAgICAgICAgdGhpcy50aHVtYlR3b1ZhbHVlLmdldENvbnRyb2woKSxcbiAgICAgICAgXSxcbiAgICAgIH0pLFxuICAgICk7XG5cbiAgICB0aGlzLmNvbnRhaW5lci5hcHBlbmQoXG4gICAgICBncm91cEVsZW1lbnRzKHtcbiAgICAgICAgd3JhcHBlckNsYXNzOiAnY29udHJvbC1wYW5lbF9fdGV4dC1maWVsZHMtZ3JvdXAnLFxuICAgICAgICBlbGVtZW50czogW1xuICAgICAgICAgIHRoaXMubWluLmdldENvbnRyb2woKSxcbiAgICAgICAgICB0aGlzLm1heC5nZXRDb250cm9sKCksXG4gICAgICAgICAgdGhpcy5zdGVwLmdldENvbnRyb2woKSxcbiAgICAgICAgXSxcbiAgICAgIH0pLFxuICAgICk7XG5cbiAgICBjb25zdCB0eXBlUmFkaW9Hcm91cCA9IGdyb3VwRWxlbWVudHMoe1xuICAgICAgaGVhZGVyOiAndHlwZScsXG4gICAgICB3cmFwcGVyQ2xhc3M6ICcnLFxuICAgICAgZWxlbWVudHM6IFt0aGlzLnR5cGVSYWRpby5nZXRDb250cm9sKCldLFxuICAgIH0pO1xuXG4gICAgY29uc3Qgb3JpZW50YXRpb25SYWRpb0dyb3VwID0gZ3JvdXBFbGVtZW50cyh7XG4gICAgICBoZWFkZXI6ICdvcmllbnRhdGlvbicsXG4gICAgICB3cmFwcGVyQ2xhc3M6ICcnLFxuICAgICAgZWxlbWVudHM6IFt0aGlzLm9yaWVudGF0aW9uUmFkaW8uZ2V0Q29udHJvbCgpXSxcbiAgICB9KTtcblxuICAgIGNvbnN0IGFsbFJhZGlvc0dyb3VwID0gZ3JvdXBFbGVtZW50cyh7XG4gICAgICB3cmFwcGVyQ2xhc3M6ICcnLFxuICAgICAgZWxlbWVudHM6IFt0eXBlUmFkaW9Hcm91cCwgb3JpZW50YXRpb25SYWRpb0dyb3VwXSxcbiAgICB9KTtcblxuICAgIGNvbnN0IGNoZWNrYm94ZXNHcm91cCA9IGdyb3VwRWxlbWVudHMoe1xuICAgICAgaGVhZGVyOiAnb24vb2ZmIGVsZW1lbnRzJyxcbiAgICAgIHdyYXBwZXJDbGFzczogJycsXG4gICAgICBlbGVtZW50czogW1xuICAgICAgICB0aGlzLnNjYWxlQ2hlY2tib3guZ2V0Q29udHJvbCgpLFxuICAgICAgICB0aGlzLnBvcFVwc0NoZWNrYm94LmdldENvbnRyb2woKSxcbiAgICAgIF0sXG4gICAgfSk7XG5cbiAgICB0aGlzLmNvbnRhaW5lci5hcHBlbmQoXG4gICAgICBncm91cEVsZW1lbnRzKHtcbiAgICAgICAgd3JhcHBlckNsYXNzOiAnY29udHJvbC1wYW5lbF9fY2hlY2tib3hlcy1hbmQtcmFkaW9zLXdyYXBwZXInLFxuICAgICAgICBlbGVtZW50czogW2FsbFJhZGlvc0dyb3VwLCBjaGVja2JveGVzR3JvdXBdLFxuICAgICAgfSksXG4gICAgKTtcblxuICAgIHRoaXMuc2xpZGVyV3JhcHBlci5hcHBlbmQodGhpcy5jb250YWluZXIuZ2V0RWxlbWVudCgpKTtcbiAgfVxuXG4gIHByaXZhdGUgc3Vic2NyaWJlVG9FdmVudHMoKTogdm9pZCB7XG4gICAgdGhpcy50aHVtYk9uZVZhbHVlLnJlZ2lzdGVyKCdjb250cm9sUGFuZWxEYXRhVXBkYXRlZCcsIHRoaXMpO1xuICAgIHRoaXMudGh1bWJUd29WYWx1ZS5yZWdpc3RlcignY29udHJvbFBhbmVsRGF0YVVwZGF0ZWQnLCB0aGlzKTtcbiAgICB0aGlzLm1pbi5yZWdpc3RlcignY29udHJvbFBhbmVsRGF0YVVwZGF0ZWQnLCB0aGlzKTtcbiAgICB0aGlzLm1heC5yZWdpc3RlcignY29udHJvbFBhbmVsRGF0YVVwZGF0ZWQnLCB0aGlzKTtcbiAgICB0aGlzLnN0ZXAucmVnaXN0ZXIoJ2NvbnRyb2xQYW5lbERhdGFVcGRhdGVkJywgdGhpcyk7XG4gICAgdGhpcy50eXBlUmFkaW8ucmVnaXN0ZXIoJ2NvbnRyb2xQYW5lbERhdGFVcGRhdGVkJywgdGhpcyk7XG4gICAgdGhpcy5vcmllbnRhdGlvblJhZGlvLnJlZ2lzdGVyKCdjb250cm9sUGFuZWxEYXRhVXBkYXRlZCcsIHRoaXMpO1xuICAgIHRoaXMuc2NhbGVDaGVja2JveC5yZWdpc3RlcignY29udHJvbFBhbmVsRGF0YVVwZGF0ZWQnLCB0aGlzKTtcbiAgICB0aGlzLnBvcFVwc0NoZWNrYm94LnJlZ2lzdGVyKCdjb250cm9sUGFuZWxEYXRhVXBkYXRlZCcsIHRoaXMpO1xuICB9XG5cbiAgdXBkYXRlKGV2ZW50VHlwZTogc3RyaW5nKTogdm9pZCB7XG4gICAgaWYgKGV2ZW50VHlwZSA9PT0gJ2NvbnRyb2xQYW5lbERhdGFVcGRhdGVkJykge1xuICAgICAgdGhpcy5ub3RpZnkoJ2NvbnRyb2xQYW5lbERhdGFVcGRhdGVkJyk7XG4gICAgICB0aGlzLnN3aXRjaE9yaWVudGF0aW9uKCk7XG4gICAgfVxuICB9XG5cbiAgcHJpdmF0ZSBzd2l0Y2hPcmllbnRhdGlvbigpOiB2b2lkIHtcbiAgICBpZiAodGhpcy5nZXRPcmllbnRhdGlvbigpID09PSAnaG9yaXpvbnRhbCcpIHtcbiAgICAgIHRoaXMuY29udGFpbmVyLnN3aXRjaFRvSG9yaXpvbnRhbCgpO1xuICAgICAgdGhpcy5zbGlkZXJXcmFwcGVyLmNsYXNzTGlzdC5yZW1vdmUoJ3NsaWRlci13cmFwcGVyX3ZlcnRpY2FsJyk7XG4gICAgICB0aGlzLnNsaWRlcldyYXBwZXIuY2xhc3NMaXN0LmFkZCgnc2xpZGVyLXdyYXBwZXJfaG9yaXpvbnRhbCcpO1xuICAgIH0gZWxzZSB7XG4gICAgICB0aGlzLmNvbnRhaW5lci5zd2l0Y2hUb1ZlcnRpY2FsKCk7XG4gICAgICB0aGlzLnNsaWRlcldyYXBwZXIuY2xhc3NMaXN0LnJlbW92ZSgnc2xpZGVyLXdyYXBwZXJfaG9yaXpvbnRhbCcpO1xuICAgICAgdGhpcy5zbGlkZXJXcmFwcGVyLmNsYXNzTGlzdC5hZGQoJ3NsaWRlci13cmFwcGVyX3ZlcnRpY2FsJyk7XG4gICAgfVxuICB9XG5cbiAgc2V0VGh1bWJzVmFsdWVzKHRodW1ic1ZhbHVlczogSVRodW1ic1ZhbHVlcyk6IHZvaWQge1xuICAgIHRoaXMudGh1bWJPbmVWYWx1ZS5zZXRWYWx1ZSh0aHVtYnNWYWx1ZXMudGh1bWJPbmUpO1xuICAgIHRoaXMudGh1bWJUd29WYWx1ZS5zZXRWYWx1ZSh0aHVtYnNWYWx1ZXMudGh1bWJUd28pO1xuICB9XG5cbiAgc2V0TWluVmFsdWUodmFsdWU6IG51bWJlcik6IHZvaWQge1xuICAgIHRoaXMubWluLnNldFZhbHVlKHZhbHVlKTtcbiAgfVxuXG4gIHNldE1heFZhbHVlKHZhbHVlOiBudW1iZXIpOiB2b2lkIHtcbiAgICB0aGlzLm1heC5zZXRWYWx1ZSh2YWx1ZSk7XG4gIH1cblxuICBzZXRTdGVwKHZhbHVlOiBudW1iZXIpOiB2b2lkIHtcbiAgICB0aGlzLnN0ZXAuc2V0VmFsdWUodmFsdWUpO1xuICB9XG5cbiAgc2V0U2NhbGVTdGF0ZShzdGF0ZTogYm9vbGVhbik6IHZvaWQge1xuICAgIHRoaXMuc2NhbGVDaGVja2JveC5zZXRTdGF0ZShzdGF0ZSk7XG4gIH1cblxuICBzZXRQb3BVcHNTdGF0ZShzdGF0ZTogYm9vbGVhbik6IHZvaWQge1xuICAgIHRoaXMucG9wVXBzQ2hlY2tib3guc2V0U3RhdGUoc3RhdGUpO1xuICB9XG5cbiAgc2V0VHlwZVJhZGlvKHZhbHVlOiBzdHJpbmcpOiB2b2lkIHtcbiAgICB0aGlzLnR5cGVSYWRpby5zd2l0Y2hUbyh2YWx1ZSk7XG4gIH1cblxuICBzZXRPcmllbnRhdGlvblJhZGlvKHZhbHVlOiBzdHJpbmcpOiB2b2lkIHtcbiAgICB0aGlzLm9yaWVudGF0aW9uUmFkaW8uc3dpdGNoVG8odmFsdWUpO1xuICB9XG5cbiAgZ2V0T3JpZW50YXRpb24oKTogc3RyaW5nIHtcbiAgICByZXR1cm4gdGhpcy5vcmllbnRhdGlvblJhZGlvLmdldFZhbHVlKCk7XG4gIH1cblxuICBnZXRUeXBlKCk6IHN0cmluZyB7XG4gICAgcmV0dXJuIHRoaXMudHlwZVJhZGlvLmdldFZhbHVlKCk7XG4gIH1cblxuICBnZXRTY2FsZVN0YXRlKCk6IGJvb2xlYW4ge1xuICAgIHJldHVybiB0aGlzLnNjYWxlQ2hlY2tib3guZ2V0U3RhdGUoKTtcbiAgfVxuXG4gIGdldFBvcFVwc1N0YXRlKCk6IGJvb2xlYW4ge1xuICAgIHJldHVybiB0aGlzLnBvcFVwc0NoZWNrYm94LmdldFN0YXRlKCk7XG4gIH1cblxuICBnZXRNaW4oKTogbnVtYmVyIHtcbiAgICByZXR1cm4gdGhpcy5taW4uZ2V0VmFsdWUoKTtcbiAgfVxuXG4gIGdldE1heCgpOiBudW1iZXIge1xuICAgIHJldHVybiB0aGlzLm1heC5nZXRWYWx1ZSgpO1xuICB9XG5cbiAgZ2V0U3RlcCgpOiBudW1iZXIge1xuICAgIHJldHVybiB0aGlzLnN0ZXAuZ2V0VmFsdWUoKTtcbiAgfVxuXG4gIGdldFRodW1iT25lVmFsdWUoKTogbnVtYmVyIHtcbiAgICByZXR1cm4gdGhpcy50aHVtYk9uZVZhbHVlLmdldFZhbHVlKCk7XG4gIH1cblxuICBnZXRUaHVtYlR3b1ZhbHVlKCk6IG51bWJlciB7XG4gICAgcmV0dXJuIHRoaXMudGh1bWJUd29WYWx1ZS5nZXRWYWx1ZSgpO1xuICB9XG5cbiAgZ2V0VGh1bWJzVmFsdWVzKCk6IElUaHVtYnNWYWx1ZXMge1xuICAgIHJldHVybiB7XG4gICAgICB0aHVtYk9uZTogdGhpcy50aHVtYk9uZVZhbHVlLmdldFZhbHVlKCksXG4gICAgICB0aHVtYlR3bzogdGhpcy50aHVtYlR3b1ZhbHVlLmdldFZhbHVlKCksXG4gICAgfTtcbiAgfVxufVxuXG5leHBvcnQgZGVmYXVsdCBDb250cm9sUGFuZWxWaWV3O1xuIiwiY2xhc3MgQ29udGFpbmVyIHtcbiAgcHJpdmF0ZSBlbGVtZW50OiBIVE1MRGl2RWxlbWVudDtcblxuICBjb25zdHJ1Y3RvcigpIHtcbiAgICB0aGlzLmVsZW1lbnQgPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50KCdkaXYnKTtcbiAgICB0aGlzLmVsZW1lbnQuY2xhc3NMaXN0LmFkZCgnY29udHJvbC1wYW5lbCcpO1xuICB9XG5cbiAgLyoqXG4gICAqINCS0L7Qt9Cy0YDQsNGJ0LDQtdGCIEhUTUwg0Y3Qu9C10LzQtdC90YIg0LrQvtC90YLQtdC50L3QtdGA0LBcbiAgICogQHJldHVybnMge0hUTUxEaXZFbGVtZW50fSAtIGRpdiDRjdC70LXQvNC10L3RglxuICAgKi9cbiAgZ2V0RWxlbWVudCgpOiBIVE1MRGl2RWxlbWVudCB7XG4gICAgcmV0dXJuIHRoaXMuZWxlbWVudDtcbiAgfVxuXG4gIC8qKlxuICAgKiDQlNC+0LHQsNCy0LvRj9C10YIg0L/RgNC40L3Rj9GC0YvQuSBkaXYg0Y3Qu9C10LzQtdC90YIg0LIg0LrQvtC90LXRhiDQutC+0L3RgtC10LnQvdC10YDQsFxuICAgKiBAcGFyYW0ge0hUTUxEaXZFbGVtZW50fSBjb250cm9sIC0gZGl2INGN0LvQtdC80LXQvdGCLCDQutC+0YLQvtGA0YvQuSDQtNC+0LvQttC10L0g0LHRi9GC0Ywg0LTQvtCx0LDQstC70LXQvSDQsiDQutC+0L3RgtC10LnQvdC10YBcbiAgICovXG4gIGFwcGVuZChjb250cm9sOiBIVE1MRGl2RWxlbWVudCk6IHZvaWQge1xuICAgIHRoaXMuZWxlbWVudC5hcHBlbmQoY29udHJvbCk7XG4gIH1cblxuICAvKipcbiAgICog0J/QtdGA0LXQutC70Y7Rh9Cw0LXRgiDQv9Cw0L3QtdC70Ywg0LIg0LPQvtGA0LjQt9C+0L3RgtCw0LvRjNC90YvQuSDRgNC10LbQuNC8XG4gICAqL1xuICBzd2l0Y2hUb0hvcml6b250YWwoKTogdm9pZCB7XG4gICAgdGhpcy5lbGVtZW50LmNsYXNzTGlzdC5yZW1vdmUoJ2NvbnRyb2wtcGFuZWxfdmVydGljYWwnKTtcbiAgICB0aGlzLmVsZW1lbnQuY2xhc3NMaXN0LmFkZCgnY29udHJvbC1wYW5lbF9ob3Jpem9udGFsJyk7XG4gIH1cblxuICAvKipcbiAgICog0J/QtdGA0LXQutC70Y7Rh9Cw0LXRgiDQv9Cw0L3QtdC70Ywg0LIg0LLQtdGA0YLQuNC60LDQu9GM0L3Ri9C5INGA0LXQttC40LxcbiAgICovXG4gIHN3aXRjaFRvVmVydGljYWwoKTogdm9pZCB7XG4gICAgdGhpcy5lbGVtZW50LmNsYXNzTGlzdC5yZW1vdmUoJ2NvbnRyb2wtcGFuZWxfaG9yaXpvbnRhbCcpO1xuICAgIHRoaXMuZWxlbWVudC5jbGFzc0xpc3QuYWRkKCdjb250cm9sLXBhbmVsX3ZlcnRpY2FsJyk7XG4gIH1cbn1cblxuZXhwb3J0IGRlZmF1bHQgQ29udGFpbmVyO1xuIiwiaW1wb3J0IFN1YmplY3QgZnJvbSAnLi4vLi4vLi4vc2ltcGxlLXNsaWRlci9zdWJqZWN0L3N1YmplY3QnO1xuXG5jbGFzcyBUZXh0RmllbGQgZXh0ZW5kcyBTdWJqZWN0IHtcbiAgcHJpdmF0ZSBjb250cm9sOiBIVE1MRGl2RWxlbWVudDtcbiAgcHJpdmF0ZSBmaWVsZDogSFRNTElucHV0RWxlbWVudDtcbiAgcHJpdmF0ZSBsYWJlbDogSFRNTExhYmVsRWxlbWVudDtcblxuICBjb25zdHJ1Y3RvcihsYWJlbFRleHQ6IHN0cmluZykge1xuICAgIHN1cGVyKCk7XG4gICAgdGhpcy5jb250cm9sID0gZG9jdW1lbnQuY3JlYXRlRWxlbWVudCgnZGl2Jyk7XG4gICAgdGhpcy5maWVsZCA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoJ2lucHV0Jyk7XG4gICAgdGhpcy5sYWJlbCA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoJ2xhYmVsJyk7XG5cbiAgICB0aGlzLmluaXQobGFiZWxUZXh0KTtcbiAgfVxuXG4gIC8qKlxuICAgKiDQktC+0LfQstGA0LDRidCw0LXRgiDQutC+0LzQv9C+0L3QtdC90YIg0YLQtdC60YHRgtC+0LLQvtCz0L4g0L/QvtC70Y9cbiAgICogQHJldHVybnMge0hUTUxEaXZFbGVtZW50fSAtINCz0YDRg9C/0L/QsCBIVE1MINGN0LvQtdC80LXQvdGC0L7QsiDQvtCx0LXRgNC90YPRgtCw0Y8g0LIgZGl2XG4gICAqL1xuICBnZXRDb250cm9sKCk6IEhUTUxEaXZFbGVtZW50IHtcbiAgICByZXR1cm4gdGhpcy5jb250cm9sO1xuICB9XG5cbiAgLyoqXG4gICAqINCS0L7Qt9Cy0YDQsNGJ0LDQtdGCINC30L3QsNGH0LXQvdC40LUg0LLQstC10LTRkdC90L3QvtC1INCyINGC0LXQutGB0YLQvtCy0L7QtSDQv9C+0LvQtVxuICAgKiBAcmV0dXJucyB7bnVtYmVyfSAtINC30L3QsNGH0LXQvdC40LUg0LLQstC10LTRkdC90L3QvtC1INCyINGC0LXQutGB0YLQvtCy0L7QtSDQv9C+0LvQtVxuICAgKi9cbiAgZ2V0VmFsdWUoKTogbnVtYmVyIHtcbiAgICByZXR1cm4gcGFyc2VJbnQodGhpcy5maWVsZC52YWx1ZSwgMTApO1xuICB9XG5cbiAgLyoqXG4gICAqINCX0LDQv9C40YHRi9Cy0LDQtdGCINC30L3QsNGH0LXQvdC40LUg0LIg0YLQtdC60YHRgtC+0LLQvtC1INC/0L7Qu9C1XG4gICAqIEBwYXJhbSB7bnVtYmVyfSB2YWx1ZSAtINC30L3QsNGH0LXQvdC40LUg0LrQvtGC0L7RgNC+0LUg0LTQvtC70LbQvdC+INCx0YvRgtGMINC30LDQv9C40YHQsNC90L4g0LIg0YLQtdC60YHRgtC+0LLQvtC1INC/0L7Qu9C1XG4gICAqL1xuICBzZXRWYWx1ZSh2YWx1ZTogbnVtYmVyKTogdm9pZCB7XG4gICAgdGhpcy5maWVsZC52YWx1ZSA9IGAke3ZhbHVlfWA7XG4gIH1cblxuICAvKipcbiAgICog0JjQvdC40YbQuNCw0LvQuNC30LjRgNGD0LXRgiDRgtC10LrRgdGC0L7QstC+0LUg0L/QvtC70LUuINCU0L7QsdCw0LLQu9GP0LXRgiDQutC70LDRgdGB0YssINGB0LvRg9GI0LDRgtC10LvQuCDRgdC+0LHRi9GC0LjQuSwg0LvQtdC50LHQu9GLINC4INGCLtC/LlxuICAgKiDQtNC70Y8g0LXQs9C+INGB0L7RgdGC0LDQstC70Y/RjtGJ0LjRhSDQuCDQutC+0LzQv9C+0L3Rg9C10YIg0LLRgdC1INCyINC10LTQuNC90YvQuSDRjdC70LXQvNC10L3RglxuICAgKiBAcGFyYW0ge3N0cmluZ30gbGFiZWxUZXh0IC0g0YLQtdC60YHRgiDQu9C10LnQsdC70LBcbiAgICovXG4gIHByaXZhdGUgaW5pdChsYWJlbFRleHQ6IHN0cmluZykge1xuICAgIHRoaXMuY29udHJvbC5jbGFzc0xpc3QuYWRkKCdzbGlkZXItcGFuZWxfX3RleHQtZmllbGQtY29udHJvbCcpO1xuXG4gICAgdGhpcy5maWVsZC5jbGFzc0xpc3QuYWRkKCdjb250cm9sLXBhbmVsX190ZXh0LWZpZWxkJyk7XG4gICAgdGhpcy5maWVsZC5hZGRFdmVudExpc3RlbmVyKCdibHVyJywgdGhpcy5yZXBvcnRDaGFuZ2VzLmJpbmQodGhpcykpO1xuICAgIHRoaXMuZmllbGQub25rZXlwcmVzcyA9IFRleHRGaWVsZC5yZW1vdmVOb25EaWdpdENoYXI7XG5cbiAgICB0aGlzLmxhYmVsLmNsYXNzTGlzdC5hZGQoJ3NsaWRlci1wYW5lbF9fdGV4dC1maWVsZC1sYWJlbCcpO1xuICAgIHRoaXMubGFiZWwuaW5uZXJUZXh0ID0gbGFiZWxUZXh0O1xuICAgIHRoaXMubGFiZWwuYXBwZW5kKHRoaXMuZmllbGQpO1xuXG4gICAgdGhpcy5jb250cm9sLmFwcGVuZCh0aGlzLmxhYmVsKTtcbiAgfVxuXG4gIC8qKlxuICAgKiDQntC/0L7QstC10YnQsNC10YIg0L/QvtC00L/QuNGB0YfQuNC60L7Qsiwg0L7QsSDQuNC30LzQtdC90LXQvdC40Lgg0LTQsNC90L3Ri9GFXG4gICAqL1xuICBwcml2YXRlIHJlcG9ydENoYW5nZXMoKSB7XG4gICAgdGhpcy5ub3RpZnkoJ2NvbnRyb2xQYW5lbERhdGFVcGRhdGVkJyk7XG4gIH1cblxuICAvKipcbiAgICog0KPQtNCw0LvRj9C10YIg0LjQtyDRgtC10LrRgdGC0L7QstC+0LPQviDQv9C+0LvRjyDRgdC40LzQstC+0LvRiywg0L3QtSDRj9Cy0LvRj9GO0YnQuNC10YHRjyDRhtC40YTRgNCw0LzQuFxuICAgKiBAcGFyYW0ge0tleWJvYXJkRXZlbnR9IGV2ZW50IC0g0YHQvtCx0YvRgtC40LUg0LrQu9Cw0LLQuNCw0YLRg9GA0YtcbiAgICovXG4gIHByaXZhdGUgc3RhdGljIHJlbW92ZU5vbkRpZ2l0Q2hhcihldmVudDogS2V5Ym9hcmRFdmVudCk6IGJvb2xlYW4ge1xuICAgIHJldHVybiAvWy1cXGRdLy50ZXN0KGV2ZW50LmtleSk7XG4gIH1cbn1cblxuZXhwb3J0IGRlZmF1bHQgVGV4dEZpZWxkO1xuIiwiaW1wb3J0IHsgSUdyb3VwRWxlbWVudHMgfSBmcm9tICcuLi9pbnRlcmZhY2VzJztcblxuLyoqXG4gKiDQntCx0L7RgNCw0YfQuNCy0LDQtdGCINC/0L7Qu9GD0YfQtdC90L3Ri9C1INGN0LvQtdC80LXQvdGC0Ysg0LIgZGl2INGBINC30LDQtNCw0L3QvdGL0Lwg0LrQu9Cw0YHRgdC+0LxcbiAqIEBwYXJhbSB7c3RyaW5nfSB3cmFwcGVyQ2xhc3MgLSDQutC70LDRgdGBLCDQutC+0YLQvtGA0YvQuSDQsdGD0LTQtdGCINC90LDQt9C90LDRh9C10L0g0L7QsdGR0YDRgtC60LVcbiAqIEBwYXJhbSB7SFRNTEVsZW1lbnRbXX0gLSDQvNCw0YHRgdC40LIg0Y3Qu9C10LzQtdC90YLQvtCyLCDQutC+0YLQvtGA0YvQtSDRgtGA0LXQsdGD0LXRgtGB0Y8g0L7QsdC10YDQvdGD0YLRjFxuICogQHJldHVybnMge0hUTUxEaXZFbGVtZW50fSAtINGN0LvQtdC80LXQvdGC0Ysg0LIg0L7QsdGR0YDRgtC60LVcbiAqL1xuZnVuY3Rpb24gZ3JvdXBFbGVtZW50cyhwYXJhbXM6IElHcm91cEVsZW1lbnRzKTogSFRNTERpdkVsZW1lbnQge1xuICBjb25zdCB3cmFwcGVyOiBIVE1MRGl2RWxlbWVudCA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoJ2RpdicpO1xuICB3cmFwcGVyLmNsYXNzTmFtZSA9IHBhcmFtcy53cmFwcGVyQ2xhc3M7XG5cbiAgaWYgKHBhcmFtcy5oZWFkZXIgIT09IHVuZGVmaW5lZCkge1xuICAgIGNvbnN0IGhlYWRlciA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoJ2xhYmVsJyk7XG4gICAgaGVhZGVyLmNsYXNzTGlzdC5hZGQoJ2NvbnRyb2wtcGFuZWxfX3JhZGlvLWdyb3VwLWhlYWRlcicpO1xuICAgIGhlYWRlci5pbm5lclRleHQgPSBwYXJhbXMuaGVhZGVyO1xuICAgIHdyYXBwZXIuYXBwZW5kKGhlYWRlcik7XG4gIH1cblxuICBmb3IgKFxuICAgIGxldCBlbGVtZW50SW5kZXggPSAwO1xuICAgIGVsZW1lbnRJbmRleCA8IHBhcmFtcy5lbGVtZW50cy5sZW5ndGg7XG4gICAgZWxlbWVudEluZGV4ICs9IDFcbiAgKSB7XG4gICAgd3JhcHBlci5hcHBlbmQocGFyYW1zLmVsZW1lbnRzW2VsZW1lbnRJbmRleF0pO1xuICB9XG5cbiAgcmV0dXJuIHdyYXBwZXI7XG59XG5cbmV4cG9ydCBkZWZhdWx0IGdyb3VwRWxlbWVudHM7XG4iLCIvKiBlc2xpbnQtZGlzYWJsZSBjb21tYS1kYW5nbGUgKi9cblxuaW1wb3J0IFN1YmplY3QgZnJvbSAnLi4vLi4vLi4vc2ltcGxlLXNsaWRlci9zdWJqZWN0L3N1YmplY3QnO1xuaW1wb3J0IHsgSVJhZGlvUGFyYW1zIH0gZnJvbSAnLi4vLi4vaW50ZXJmYWNlcyc7XG5cbmNsYXNzIFJhZGlvQnV0dG9uIGV4dGVuZHMgU3ViamVjdCB7XG4gIHByaXZhdGUgY29udHJvbDogSFRNTERpdkVsZW1lbnQ7XG4gIHByaXZhdGUgcmFkaW9zOiBIVE1MSW5wdXRFbGVtZW50W107XG5cbiAgY29uc3RydWN0b3IobmFtZTogc3RyaW5nLCAuLi5wYXJhbXM6IElSYWRpb1BhcmFtc1tdKSB7XG4gICAgc3VwZXIoKTtcbiAgICBjb25zdCB1bmlxdWVOYW1lID0gUmFkaW9CdXR0b24uZ2VuZXJhdGVOYW1lKG5hbWUpO1xuICAgIHRoaXMuY29udHJvbCA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoJ2RpdicpO1xuICAgIHRoaXMuY29udHJvbC5jbGFzc0xpc3QuYWRkKCdjb250cm9sLXBhbmVsX19yYWRpby1ncm91cCcpO1xuICAgIHRoaXMucmFkaW9zID0gW107XG5cbiAgICB0aGlzLmluaXQodW5pcXVlTmFtZSwgcGFyYW1zKTtcbiAgfVxuXG4gIGdldENvbnRyb2woKTogSFRNTERpdkVsZW1lbnQge1xuICAgIHJldHVybiB0aGlzLmNvbnRyb2w7XG4gIH1cblxuICBnZXRWYWx1ZSgpOiBzdHJpbmcge1xuICAgIGZvciAobGV0IHJhZGlvID0gMDsgcmFkaW8gPCB0aGlzLnJhZGlvcy5sZW5ndGg7IHJhZGlvICs9IDEpIHtcbiAgICAgIGlmICh0aGlzLnJhZGlvc1tyYWRpb10uY2hlY2tlZCkge1xuICAgICAgICByZXR1cm4gdGhpcy5yYWRpb3NbcmFkaW9dLnZhbHVlO1xuICAgICAgfVxuICAgIH1cbiAgICByZXR1cm4gJyc7XG4gIH1cblxuICBwcml2YXRlIGluaXQobmFtZTogc3RyaW5nLCBwYXJhbXM6IElSYWRpb1BhcmFtc1tdKSB7XG4gICAgZm9yIChsZXQgcmFkaW8gPSAwOyByYWRpbyA8IHBhcmFtcy5sZW5ndGg7IHJhZGlvICs9IDEpIHtcbiAgICAgIGNvbnN0IHJhZGlvV3JhcHBlciA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoJ2RpdicpO1xuICAgICAgcmFkaW9XcmFwcGVyLmNsYXNzTGlzdC5hZGQoJ2NvbnRyb2wtcGFuZWxfX3JhZGlvLXdyYXBwZXInKTtcblxuICAgICAgY29uc3QgbGFiZWwgPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50KCdsYWJlbCcpO1xuICAgICAgbGFiZWwuY2xhc3NMaXN0LmFkZCgnY29udHJvbC1wYW5lbF9fcmFkaW8tbGFiZWwnKTtcbiAgICAgIGxhYmVsLmlubmVyVGV4dCA9IHBhcmFtc1tyYWRpb10ubGFiZWw7XG5cbiAgICAgIGNvbnN0IHJhZGlvQnV0dG9uID0gZG9jdW1lbnQuY3JlYXRlRWxlbWVudCgnaW5wdXQnKTtcbiAgICAgIHJhZGlvQnV0dG9uLnR5cGUgPSAncmFkaW8nO1xuICAgICAgcmFkaW9CdXR0b24ubmFtZSA9IG5hbWU7XG4gICAgICByYWRpb0J1dHRvbi52YWx1ZSA9IHBhcmFtc1tyYWRpb10udmFsdWU7XG4gICAgICBpZiAoUmFkaW9CdXR0b24ucmFkaW9Jc0ZpcnN0T3JDaGVja2VkKHJhZGlvLCBwYXJhbXNbcmFkaW9dLmNoZWNrZWQpKSB7XG4gICAgICAgIHJhZGlvQnV0dG9uLmNoZWNrZWQgPSB0cnVlO1xuICAgICAgfVxuICAgICAgcmFkaW9CdXR0b24uY2xhc3NMaXN0LmFkZCgnY29udHJvbC1wYW5lbF9fcmFkaW8tYnV0dG9uJyk7XG4gICAgICByYWRpb0J1dHRvbi5hZGRFdmVudExpc3RlbmVyKCdjaGFuZ2UnLCB0aGlzLm9uQ2hhbmdlLmJpbmQodGhpcykpO1xuICAgICAgdGhpcy5yYWRpb3MucHVzaChyYWRpb0J1dHRvbik7XG5cbiAgICAgIGxhYmVsLmFwcGVuZChyYWRpb0J1dHRvbik7XG4gICAgICByYWRpb1dyYXBwZXIuYXBwZW5kKGxhYmVsKTtcbiAgICAgIHRoaXMuY29udHJvbC5hcHBlbmQocmFkaW9XcmFwcGVyKTtcbiAgICB9XG4gIH1cblxuICBwcml2YXRlIHN0YXRpYyByYWRpb0lzRmlyc3RPckNoZWNrZWQoXG4gICAgaW5kZXg6IG51bWJlcixcbiAgICBjaGVja2VkOiBib29sZWFuIHwgdW5kZWZpbmVkLFxuICApIHtcbiAgICByZXR1cm4gaW5kZXggPT09IDAgfHwgY2hlY2tlZDtcbiAgfVxuXG4gIHByaXZhdGUgb25DaGFuZ2UoKTogdm9pZCB7XG4gICAgZm9yIChsZXQgcmFkaW8gPSAwOyByYWRpbyA8IHRoaXMucmFkaW9zLmxlbmd0aDsgcmFkaW8gKz0gMSkge1xuICAgICAgY29uc3QgbGFiZWwgPSB0aGlzLnJhZGlvc1tyYWRpb10ucGFyZW50RWxlbWVudDtcblxuICAgICAgaWYgKHRoaXMucmFkaW9zW3JhZGlvXS5jaGVja2VkKSB7XG4gICAgICAgIGxhYmVsPy5jbGFzc0xpc3QuYWRkKCdjb250cm9sLXBhbmVsX19yYWRpby1sYWJlbF9jaGVja2VkJyk7XG4gICAgICB9IGVsc2Uge1xuICAgICAgICBsYWJlbD8uY2xhc3NMaXN0LnJlbW92ZSgnY29udHJvbC1wYW5lbF9fcmFkaW8tbGFiZWxfY2hlY2tlZCcpO1xuICAgICAgfVxuICAgIH1cblxuICAgIHRoaXMubm90aWZ5KCdjb250cm9sUGFuZWxEYXRhVXBkYXRlZCcpO1xuICB9XG5cbiAgc3dpdGNoVG8odmFsdWU6IHN0cmluZyk6IHZvaWQge1xuICAgIGZvciAobGV0IHJhZGlvID0gMDsgcmFkaW8gPCB0aGlzLnJhZGlvcy5sZW5ndGg7IHJhZGlvICs9IDEpIHtcbiAgICAgIGlmICh0aGlzLnJhZGlvc1tyYWRpb10udmFsdWUgPT09IHZhbHVlKSB7XG4gICAgICAgIHRoaXMucmFkaW9zW3JhZGlvXS5jaGVja2VkID0gdHJ1ZTtcbiAgICAgICAgdGhpcy5vbkNoYW5nZSgpO1xuICAgICAgICBicmVhaztcbiAgICAgIH1cbiAgICB9XG4gIH1cblxuICBwcml2YXRlIHN0YXRpYyBnZW5lcmF0ZU5hbWUobmFtZTogc3RyaW5nKTogc3RyaW5nIHtcbiAgICBsZXQgY291bnRlciA9IDE7XG4gICAgbGV0IHVuaXF1ZU5hbWUgPSAnJztcblxuICAgIHdoaWxlICh1bmlxdWVOYW1lID09PSAnJykge1xuICAgICAgY29uc3QgbmV3TmFtZSA9IGAke25hbWV9JHtjb3VudGVyfWA7XG4gICAgICBpZiAoZG9jdW1lbnQucXVlcnlTZWxlY3RvcihgW25hbWU9XCIke25ld05hbWV9XCJdYCkgPT09IG51bGwpIHtcbiAgICAgICAgdW5pcXVlTmFtZSA9IG5ld05hbWU7XG4gICAgICB9XG4gICAgICBjb3VudGVyICs9IDE7XG4gICAgfVxuXG4gICAgcmV0dXJuIHVuaXF1ZU5hbWU7XG4gIH1cbn1cblxuZXhwb3J0IGRlZmF1bHQgUmFkaW9CdXR0b247XG4iLCJpbXBvcnQgU3ViamVjdCBmcm9tICcuLi8uLi8uLi9zaW1wbGUtc2xpZGVyL3N1YmplY3Qvc3ViamVjdCc7XG5pbXBvcnQgeyBJQ2hlY2tib3hQYXJhbXMgfSBmcm9tICcuLi8uLi9pbnRlcmZhY2VzJztcblxuY2xhc3MgQ2hlY2tib3ggZXh0ZW5kcyBTdWJqZWN0IHtcbiAgcHJpdmF0ZSBjb250cm9sOiBIVE1MRGl2RWxlbWVudDtcbiAgcHJpdmF0ZSBjaGVja2JveDogSFRNTElucHV0RWxlbWVudDtcbiAgcHJpdmF0ZSBsYWJlbDogSFRNTExhYmVsRWxlbWVudDtcblxuICBjb25zdHJ1Y3RvcihwYXJhbXM6IElDaGVja2JveFBhcmFtcykge1xuICAgIHN1cGVyKCk7XG4gICAgdGhpcy5jb250cm9sID0gZG9jdW1lbnQuY3JlYXRlRWxlbWVudCgnZGl2Jyk7XG4gICAgdGhpcy5sYWJlbCA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoJ2xhYmVsJyk7XG4gICAgdGhpcy5jaGVja2JveCA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoJ2lucHV0Jyk7XG5cbiAgICB0aGlzLmluaXQocGFyYW1zKTtcbiAgfVxuXG4gIC8qKlxuICAgKiDQmNC90LjRhtC40LDQu9C40LfQuNGA0YPQtdGCINGH0LXQutCx0L7QutGBLiDQlNC+0LHQsNCy0LvRj9C10YIg0LrQu9Cw0YHRgdGLLCDRgdC70YPRiNCw0YLQtdC70Lgg0YHQvtCx0YvRgtC40LksINC70LXQudCx0LvRiyDQuCDRgi7Qvy5cbiAgICog0LTQu9GPINC10LPQviDRgdC+0YHRgtCw0LLQu9GP0Y7RidC40YUg0Lgg0LrQvtC80L/QvtC90YPQtdGCINCy0YHQtSDQsiDQtdC00LjQvdGL0Lkg0Y3Qu9C10LzQtdC90YJcbiAgICogQHBhcmFtIHtJQ2hlY2tib3hQYXJhbXN9IHBhcmFtcyAtINC/0LDRgNCw0LzQtdGC0YDRiyDRh9C10LrQsdC+0LrRgdCwXG4gICAqL1xuICBwcml2YXRlIGluaXQocGFyYW1zOiBJQ2hlY2tib3hQYXJhbXMpOiB2b2lkIHtcbiAgICB0aGlzLmNvbnRyb2wuY2xhc3NMaXN0LmFkZCgnY29udHJvbC1wYW5lbF9fY2hlY2tib3gtd3JhcHBlcicpO1xuXG4gICAgdGhpcy5sYWJlbC5jbGFzc0xpc3QuYWRkKCdjb250cm9sLXBhbmVsX19jaGVja2JveC1sYWJlbCcpO1xuICAgIHRoaXMubGFiZWwuaW5uZXJUZXh0ID0gcGFyYW1zLmxhYmVsO1xuXG4gICAgdGhpcy5jaGVja2JveC50eXBlID0gJ2NoZWNrYm94JztcbiAgICB0aGlzLmNoZWNrYm94Lm5hbWUgPSBwYXJhbXMubmFtZTtcbiAgICB0aGlzLmNoZWNrYm94LnZhbHVlID0gcGFyYW1zLnZhbHVlO1xuICAgIHRoaXMuY2hlY2tib3guY2xhc3NMaXN0LmFkZCgnY29udHJvbC1wYW5lbF9fY2hlY2tib3gnKTtcbiAgICB0aGlzLmNoZWNrYm94LmFkZEV2ZW50TGlzdGVuZXIoJ2NoYW5nZScsIHRoaXMub25DaGFuZ2UuYmluZCh0aGlzKSk7XG5cbiAgICB0aGlzLmxhYmVsLmFwcGVuZCh0aGlzLmNoZWNrYm94KTtcbiAgICB0aGlzLmNvbnRyb2wuYXBwZW5kKHRoaXMubGFiZWwpO1xuICB9XG5cbiAgLyoqXG4gICAqINCS0L7Qt9Cy0YDQsNGJ0LDQtdGCINC60L7QvNC/0L7QvdC10L3RgiDRh9C10LrQsdC+0LrRgdCwXG4gICAqIEByZXR1cm5zIHtIVE1MRGl2RWxlbWVudH0gLSDQs9GA0YPQv9C/0LAgSFRNTCDRjdC70LXQvNC10L3RgtC+0LIg0L7QsdC10YDQvdGD0YLQsNGPINCyIGRpdlxuICAgKi9cbiAgZ2V0Q29udHJvbCgpOiBIVE1MRGl2RWxlbWVudCB7XG4gICAgcmV0dXJuIHRoaXMuY29udHJvbDtcbiAgfVxuXG4gIC8qKlxuICAgKiDQlNC+0LHQsNCy0LvRj9C10YIv0YPQtNCw0LvRj9C10YIg0LPQsNC70L7Rh9C60YMsINCyINC30LDQstC40YHQuNC80L7RgdGC0Lgg0L7RgiDRgdC+0YHRgtC+0Y/QvdC40Y8g0YfQtdC60LHQvtC60YHQsC5cbiAgICog0J7Qv9C+0LLQtdGJ0LDQtdGCINC/0L7QtNC/0LjRgdGH0LjQutC+0LIg0L7QsSDQuNC30LzQtdC90LXQvdC40Lgg0YHQvtGB0YLQvtGP0L3QuNGPINGH0LXQutCx0L7QutGB0LBcbiAgICovXG4gIHByaXZhdGUgb25DaGFuZ2UoKTogdm9pZCB7XG4gICAgaWYgKHRoaXMuY2hlY2tib3guY2hlY2tlZCkge1xuICAgICAgdGhpcy5sYWJlbC5jbGFzc0xpc3QuYWRkKCdjb250cm9sLXBhbmVsX19jaGVja2JveC1sYWJlbF9jaGVja2VkJyk7XG4gICAgfSBlbHNlIHtcbiAgICAgIHRoaXMubGFiZWwuY2xhc3NMaXN0LnJlbW92ZSgnY29udHJvbC1wYW5lbF9fY2hlY2tib3gtbGFiZWxfY2hlY2tlZCcpO1xuICAgIH1cblxuICAgIHRoaXMubm90aWZ5KCdjb250cm9sUGFuZWxEYXRhVXBkYXRlZCcpO1xuICB9XG5cbiAgLyoqXG4gICAqINCf0LXRgNC10LLQvtC00LjRgiDRh9C10LrQsdC+0LrRgSDQsiDRgdC+0YHRgtC+0Y/QvdC40LUg0LLRi9Cx0YDQsNC9L9C90LUg0LLRi9Cx0YDQsNC9INCyINC30LDQstC40YHQuNC80L7RgdGC0Lgg0L7RgiDQv9C+0LvRg9GH0LXQvdC90L7Qs9C+INGB0L7RgdGC0L7Rj9C90LjRj1xuICAgKiBAcGFyYW0ge2Jvb2xlYW59IHN0YXRlIC0g0YHQvtGB0YLQvtGP0L3QuNC1INGA0LDQtNC40L7QutC90L7Qv9C60LhcbiAgICovXG4gIHNldFN0YXRlKHN0YXRlOiBib29sZWFuKTogdm9pZCB7XG4gICAgdGhpcy5jaGVja2JveC5jaGVja2VkID0gc3RhdGU7XG4gICAgdGhpcy5vbkNoYW5nZSgpO1xuICB9XG5cbiAgLyoqXG4gICAqINCS0L7Qt9Cy0YDQsNGJ0LDQtdGCINGB0L7RgdGC0L7Rj9C90LjQtSDRh9C10LrQsdC+0LrRgdCwXG4gICAqIEByZXR1cm5zIHtib29sZWFufSAtINGB0L7RgdGC0L7Rj9C90LjQtSDRh9C10LrQsdC+0LrRgdCwXG4gICAqL1xuICBnZXRTdGF0ZSgpOiBib29sZWFuIHtcbiAgICByZXR1cm4gdGhpcy5jaGVja2JveC5jaGVja2VkO1xuICB9XG59XG5cbmV4cG9ydCBkZWZhdWx0IENoZWNrYm94O1xuIiwiaW1wb3J0IHtcbiAgSU9ic2VydmVyLFxuICBJU2xpZGVyU2V0dGluZ3MsXG4gIElTdWJqZWN0LFxuICBJVGh1bWJzVmFsdWVzLFxufSBmcm9tICcuLi8uLi9zaW1wbGUtc2xpZGVyL2ludGVyZmFjZXMnO1xuaW1wb3J0IFN1YmplY3QgZnJvbSAnLi4vLi4vc2ltcGxlLXNsaWRlci9zdWJqZWN0L3N1YmplY3QnO1xuXG5jbGFzcyBDb250cm9sUGFuZWxNb2RlbCBleHRlbmRzIFN1YmplY3QgaW1wbGVtZW50cyBJT2JzZXJ2ZXIge1xuICBwcml2YXRlIHNsaWRlcjogSlF1ZXJ5PEhUTUxFbGVtZW50PjtcbiAgcHJpdmF0ZSBzdWJqZWN0OiBJU3ViamVjdDtcblxuICBjb25zdHJ1Y3RvcihzbGlkZXI6IEpRdWVyeTxIVE1MRWxlbWVudD4pIHtcbiAgICBzdXBlcigpO1xuICAgIHRoaXMuc2xpZGVyID0gc2xpZGVyO1xuICAgIHRoaXMuc3ViamVjdCA9IHNsaWRlci5zaW1wbGVTbGlkZXIoJ2dldE1vZGVsU3ViamVjdCcpO1xuICAgIHRoaXMuc3ViamVjdC5yZWdpc3RlcigndGh1bWJzUG9zSXNVcGRhdGVkJywgdGhpcyk7XG4gIH1cblxuICB1cGRhdGUoZXZlbnRUeXBlOiBzdHJpbmcpOiB2b2lkIHtcbiAgICBpZiAoZXZlbnRUeXBlID09PSAndGh1bWJzUG9zSXNVcGRhdGVkJykge1xuICAgICAgdGhpcy5ub3RpZnkoJ3RodW1ic1Bvc0lzVXBkYXRlZCcpO1xuICAgIH1cbiAgfVxuXG4gIGdldFRodW1ic1ZhbHVlcygpOiBJVGh1bWJzVmFsdWVzIHtcbiAgICByZXR1cm4gdGhpcy5zbGlkZXIuc2ltcGxlU2xpZGVyKCdnZXRUaHVtYnNWYWx1ZXMnKTtcbiAgfVxuXG4gIGdldE1pbigpOiBudW1iZXIge1xuICAgIHJldHVybiB0aGlzLnNsaWRlci5zaW1wbGVTbGlkZXIoJ2dldE1pbicpO1xuICB9XG5cbiAgZ2V0TWF4KCk6IG51bWJlciB7XG4gICAgcmV0dXJuIHRoaXMuc2xpZGVyLnNpbXBsZVNsaWRlcignZ2V0TWF4Jyk7XG4gIH1cblxuICBnZXRTdGVwKCk6IG51bWJlciB7XG4gICAgcmV0dXJuIHRoaXMuc2xpZGVyLnNpbXBsZVNsaWRlcignZ2V0U3RlcCcpO1xuICB9XG5cbiAgZ2V0U2NhbGVTdGF0ZSgpOiBib29sZWFuIHtcbiAgICByZXR1cm4gdGhpcy5zbGlkZXIuc2ltcGxlU2xpZGVyKCdnZXRTY2FsZVN0YXRlJyk7XG4gIH1cblxuICBnZXRQb3BVcHNTdGF0ZSgpOiBib29sZWFuIHtcbiAgICByZXR1cm4gdGhpcy5zbGlkZXIuc2ltcGxlU2xpZGVyKCdnZXRQb3BVcHNTdGF0ZScpO1xuICB9XG5cbiAgZ2V0VHlwZSgpOiBzdHJpbmcge1xuICAgIHJldHVybiB0aGlzLnNsaWRlci5zaW1wbGVTbGlkZXIoJ2dldFR5cGUnKTtcbiAgfVxuXG4gIGdldE9yaWVudGF0aW9uKCk6IHN0cmluZyB7XG4gICAgcmV0dXJuIHRoaXMuc2xpZGVyLnNpbXBsZVNsaWRlcignZ2V0T3JpZW50YXRpb24nKTtcbiAgfVxuXG4gIHJlZnJlc2hTbGlkZXJTdGF0ZShzbGlkZXJTZXR0aW5nczogSVNsaWRlclNldHRpbmdzKTogdm9pZCB7XG4gICAgdGhpcy5zbGlkZXIuc2ltcGxlU2xpZGVyKCdyZWZyZXNoU2xpZGVyU3RhdGUnLCBzbGlkZXJTZXR0aW5ncyk7XG4gIH1cbn1cblxuZXhwb3J0IGRlZmF1bHQgQ29udHJvbFBhbmVsTW9kZWw7XG4iLCJpbXBvcnQgeyBJT2JzZXJ2ZXIgfSBmcm9tICcuLi8uLi9zaW1wbGUtc2xpZGVyL2ludGVyZmFjZXMnO1xuaW1wb3J0IENvbnRyb2xQYW5lbE1vZGVsIGZyb20gJy4uL21vZGVsL2NvbnRyb2wtcGFuZWwtbW9kZWwnO1xuaW1wb3J0IENvbnRyb2xQYW5lbFZpZXcgZnJvbSAnLi4vdmlldy9jb250cm9sLXBhbmVsLXZpZXcnO1xuXG5jbGFzcyBDb250cm9sUGFuZWxDb250cm9sbGVyIGltcGxlbWVudHMgSU9ic2VydmVyIHtcbiAgcHJpdmF0ZSB2aWV3OiBDb250cm9sUGFuZWxWaWV3O1xuICBwcml2YXRlIG1vZGVsOiBDb250cm9sUGFuZWxNb2RlbDtcblxuICBjb25zdHJ1Y3Rvcih2aWV3OiBDb250cm9sUGFuZWxWaWV3LCBtb2RlbDogQ29udHJvbFBhbmVsTW9kZWwpIHtcbiAgICB0aGlzLnZpZXcgPSB2aWV3O1xuICAgIHRoaXMubW9kZWwgPSBtb2RlbDtcbiAgICB0aGlzLmluaXQoKTtcblxuICAgIHRoaXMuc3Vic2NyaWJlVG9FdmVudHMoKTtcbiAgfVxuXG4gIC8qKlxuICAgKiDQn9C+0LTQv9C40YHRi9Cy0LDQtdGCIENvbnRyb2xsZXIg0L3QsCDQvdC10L7QsdGF0L7QtNC40LzRi9C1INGB0L7QsdGL0YLQuNGPLCDQstC+0LfQvdC40LrQsNGO0YnQuNC1INCy0L4gVmlldyDQuCBNb2RlbFxuICAgKi9cbiAgcHJpdmF0ZSBzdWJzY3JpYmVUb0V2ZW50cygpOiB2b2lkIHtcbiAgICB0aGlzLm1vZGVsLnJlZ2lzdGVyKCd0aHVtYnNQb3NJc1VwZGF0ZWQnLCB0aGlzKTtcbiAgICB0aGlzLnZpZXcucmVnaXN0ZXIoJ2NvbnRyb2xQYW5lbERhdGFVcGRhdGVkJywgdGhpcyk7XG4gIH1cblxuICAvKipcbiAgICog0JjQvdC40YbQuNCw0LvQuNC30LDRhtC40Y8g0Y3Qu9C10LzQtdC90YLQvtCyINGB0LvQsNC50LTQtdGA0LAg0LLQviBWaWV3INC00LDQvdC90YvQvNC4INC40LcgTW9kZWxcbiAgICovXG4gIGluaXQoKTogdm9pZCB7XG4gICAgdGhpcy52aWV3LnNldFRodW1ic1ZhbHVlcyh0aGlzLm1vZGVsLmdldFRodW1ic1ZhbHVlcygpKTtcbiAgICB0aGlzLnZpZXcuc2V0TWluVmFsdWUodGhpcy5tb2RlbC5nZXRNaW4oKSk7XG4gICAgdGhpcy52aWV3LnNldE1heFZhbHVlKHRoaXMubW9kZWwuZ2V0TWF4KCkpO1xuICAgIHRoaXMudmlldy5zZXRTdGVwKHRoaXMubW9kZWwuZ2V0U3RlcCgpKTtcbiAgICB0aGlzLnZpZXcuc2V0U2NhbGVTdGF0ZSh0aGlzLm1vZGVsLmdldFNjYWxlU3RhdGUoKSk7XG4gICAgdGhpcy52aWV3LnNldFBvcFVwc1N0YXRlKHRoaXMubW9kZWwuZ2V0UG9wVXBzU3RhdGUoKSk7XG4gICAgdGhpcy52aWV3LnNldFR5cGVSYWRpbyh0aGlzLm1vZGVsLmdldFR5cGUoKSk7XG4gICAgdGhpcy52aWV3LnNldE9yaWVudGF0aW9uUmFkaW8odGhpcy5tb2RlbC5nZXRPcmllbnRhdGlvbigpKTtcbiAgfVxuXG4gIC8qKlxuICAgKiDQntCx0L3QvtCy0LvRj9C10YIg0LTQsNC90L3Ri9C1INGB0LvQsNC50LTQtdGA0LAg0LjQu9C4INC/0LDQvdC10LvQuCDRg9C/0YDQsNCy0LvQtdC90LjRjyDQsiDRgdC+0L7RgtCy0LXRgtGB0YLQstC40Lgg0YEg0L/QvtC70YPRh9C10L3QvdGL0Lwg0YHQvtCx0YvRgtC40LXQvFxuICAgKiBAcGFyYW0ge3N0cmluZ30gZXZlbnRUeXBlIC0g0YHQvtCx0YvRgtC40LVcbiAgICovXG4gIHVwZGF0ZShldmVudFR5cGU6IHN0cmluZyk6IHZvaWQge1xuICAgIGlmIChldmVudFR5cGUgPT09ICd0aHVtYnNQb3NJc1VwZGF0ZWQnKSB7XG4gICAgICB0aGlzLnZpZXcuc2V0VGh1bWJzVmFsdWVzKHRoaXMubW9kZWwuZ2V0VGh1bWJzVmFsdWVzKCkpO1xuICAgIH1cblxuICAgIGlmIChldmVudFR5cGUgPT09ICdjb250cm9sUGFuZWxEYXRhVXBkYXRlZCcpIHtcbiAgICAgIGNvbnN0IHNsaWRlclNldHRpbmdzID0ge1xuICAgICAgICBvcmllbnRhdGlvbjogdGhpcy52aWV3LmdldE9yaWVudGF0aW9uKCksXG4gICAgICAgIHR5cGU6IHRoaXMudmlldy5nZXRUeXBlKCksXG4gICAgICAgIHNjYWxlOiB0aGlzLnZpZXcuZ2V0U2NhbGVTdGF0ZSgpLFxuICAgICAgICBwb3BVcHM6IHRoaXMudmlldy5nZXRQb3BVcHNTdGF0ZSgpLFxuICAgICAgICBtaW46IHRoaXMudmlldy5nZXRNaW4oKSxcbiAgICAgICAgbWF4OiB0aGlzLnZpZXcuZ2V0TWF4KCksXG4gICAgICAgIHN0ZXA6IHRoaXMudmlldy5nZXRTdGVwKCksXG4gICAgICAgIHRodW1iT25lVmFsdWU6IHRoaXMudmlldy5nZXRUaHVtYk9uZVZhbHVlKCksXG4gICAgICAgIHRodW1iVHdvVmFsdWU6IHRoaXMudmlldy5nZXRUaHVtYlR3b1ZhbHVlKCksXG4gICAgICB9O1xuICAgICAgdGhpcy5tb2RlbC5yZWZyZXNoU2xpZGVyU3RhdGUoc2xpZGVyU2V0dGluZ3MpO1xuICAgIH1cbiAgfVxufVxuXG5leHBvcnQgZGVmYXVsdCBDb250cm9sUGFuZWxDb250cm9sbGVyO1xuIiwiY29uc3QgYWRkTmV3U2xpZGVyQnRuID0gZG9jdW1lbnQucXVlcnlTZWxlY3RvcignLmFkZC1uZXctc2xpZGVyLWJ0bicpO1xubGV0IGhlbHBJbWFnZSA9IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IoJy5oZWxwLWltYWdlJyk7XG5jb25zdCBidXR0b25XcmFwcGVyID0gZG9jdW1lbnQucXVlcnlTZWxlY3RvcignLmJ1dHRvbi13cmFwcGVyJyk7XG5cbmZ1bmN0aW9uIHJlbW92ZVNsaWRlcihzbGlkZXJXcmFwcGVyOiBIVE1MRGl2RWxlbWVudCkge1xuICBzbGlkZXJXcmFwcGVyLnJlbW92ZSgpO1xuICBpZiAoZG9jdW1lbnQucXVlcnlTZWxlY3RvckFsbCgnLnNsaWRlci13cmFwcGVyJykubGVuZ3RoID09PSAwKSB7XG4gICAgYWRkTmV3U2xpZGVyQnRuPy5jbGFzc0xpc3QuYWRkKCdhZGQtbmV3LXNsaWRlci1idG5fbWFyZ2luLXRvcCcpO1xuICB9XG59XG5cbmZ1bmN0aW9uIGNsaWNrVG9BZGROZXdTbGlkZXJCdG4oKTogdm9pZCB7XG4gIGlmIChidXR0b25XcmFwcGVyICE9PSBudWxsKSB7XG4gICAgaGVscEltYWdlPy5yZW1vdmUoKTtcbiAgICBoZWxwSW1hZ2UgPSBudWxsO1xuXG4gICAgYWRkTmV3U2xpZGVyQnRuPy5jbGFzc0xpc3QucmVtb3ZlKCdhZGQtbmV3LXNsaWRlci1idG5fbWFyZ2luLXRvcCcpO1xuXG4gICAgY29uc3Qgc2xpZGVyV3JhcHBlciA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoJ2RpdicpO1xuICAgIHNsaWRlcldyYXBwZXIuY2xhc3NMaXN0LmFkZCgnc2xpZGVyLXdyYXBwZXInKTtcbiAgICBidXR0b25XcmFwcGVyLmJlZm9yZShzbGlkZXJXcmFwcGVyKTtcblxuICAgIGNvbnN0IGljb24gPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50KCdzcGFuJyk7XG4gICAgaWNvbi5jbGFzc0xpc3QuYWRkKCdtYXRlcmlhbC1pY29ucycsICdyZW1vdmUtc2xpZGVyLWJ1dHRvbl9faWNvbicpO1xuICAgIGljb24uaW5uZXJUZXh0ID0gJ2NsZWFyJztcblxuICAgIGNvbnN0IHJlbW92ZVNsaWRlckJ1dHRvbiA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoJ2J1dHRvbicpO1xuICAgIHJlbW92ZVNsaWRlckJ1dHRvbi5jbGFzc0xpc3QuYWRkKCdyZW1vdmUtc2xpZGVyLWJ1dHRvbicpO1xuICAgIHJlbW92ZVNsaWRlckJ1dHRvbi5hcHBlbmQoaWNvbik7XG4gICAgcmVtb3ZlU2xpZGVyQnV0dG9uLmFkZEV2ZW50TGlzdGVuZXIoXG4gICAgICAnY2xpY2snLFxuICAgICAgcmVtb3ZlU2xpZGVyLmJpbmQocmVtb3ZlU2xpZGVyQnV0dG9uLCBzbGlkZXJXcmFwcGVyKSxcbiAgICApO1xuICAgIHNsaWRlcldyYXBwZXIuYXBwZW5kKHJlbW92ZVNsaWRlckJ1dHRvbik7XG5cbiAgICAkKHNsaWRlcldyYXBwZXIpLnNpbXBsZVNsaWRlcigpLmNvbnRyb2xQYW5lbCgpO1xuICB9XG59XG5cbmFkZE5ld1NsaWRlckJ0bj8uYWRkRXZlbnRMaXN0ZW5lcignY2xpY2snLCBjbGlja1RvQWRkTmV3U2xpZGVyQnRuKTtcbiJdLCJzb3VyY2VSb290IjoiIn0=